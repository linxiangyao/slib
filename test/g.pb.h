// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: g.proto

#ifndef PROTOBUF_g_2eproto__INCLUDED
#define PROTOBUF_g_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace g {
class AddContactCmd;
class AddContactCmdDefaultTypeInternal;
extern AddContactCmdDefaultTypeInternal _AddContactCmd_default_instance_;
class BaseReq;
class BaseReqDefaultTypeInternal;
extern BaseReqDefaultTypeInternal _BaseReq_default_instance_;
class BaseResp;
class BaseRespDefaultTypeInternal;
extern BaseRespDefaultTypeInternal _BaseResp_default_instance_;
class DelContactCmd;
class DelContactCmdDefaultTypeInternal;
extern DelContactCmdDefaultTypeInternal _DelContactCmd_default_instance_;
class HeartBeatReq;
class HeartBeatReqDefaultTypeInternal;
extern HeartBeatReqDefaultTypeInternal _HeartBeatReq_default_instance_;
class HeartBeatResp;
class HeartBeatRespDefaultTypeInternal;
extern HeartBeatRespDefaultTypeInternal _HeartBeatResp_default_instance_;
class InitReq;
class InitReqDefaultTypeInternal;
extern InitReqDefaultTypeInternal _InitReq_default_instance_;
class InitResp;
class InitRespDefaultTypeInternal;
extern InitRespDefaultTypeInternal _InitResp_default_instance_;
class LoginReq;
class LoginReqDefaultTypeInternal;
extern LoginReqDefaultTypeInternal _LoginReq_default_instance_;
class LoginResp;
class LoginRespDefaultTypeInternal;
extern LoginRespDefaultTypeInternal _LoginResp_default_instance_;
class LogoutReq;
class LogoutReqDefaultTypeInternal;
extern LogoutReqDefaultTypeInternal _LogoutReq_default_instance_;
class LogoutResp;
class LogoutRespDefaultTypeInternal;
extern LogoutRespDefaultTypeInternal _LogoutResp_default_instance_;
class NeedSyncPush;
class NeedSyncPushDefaultTypeInternal;
extern NeedSyncPushDefaultTypeInternal _NeedSyncPush_default_instance_;
class RegisterReq;
class RegisterReqDefaultTypeInternal;
extern RegisterReqDefaultTypeInternal _RegisterReq_default_instance_;
class RegisterResp;
class RegisterRespDefaultTypeInternal;
extern RegisterRespDefaultTypeInternal _RegisterResp_default_instance_;
class SendImageMsgReq;
class SendImageMsgReqDefaultTypeInternal;
extern SendImageMsgReqDefaultTypeInternal _SendImageMsgReq_default_instance_;
class SendImageMsgResp;
class SendImageMsgRespDefaultTypeInternal;
extern SendImageMsgRespDefaultTypeInternal _SendImageMsgResp_default_instance_;
class SendTextMsgReq;
class SendTextMsgReqDefaultTypeInternal;
extern SendTextMsgReqDefaultTypeInternal _SendTextMsgReq_default_instance_;
class SendTextMsgResp;
class SendTextMsgRespDefaultTypeInternal;
extern SendTextMsgRespDefaultTypeInternal _SendTextMsgResp_default_instance_;
class SendVoiceMsgReq;
class SendVoiceMsgReqDefaultTypeInternal;
extern SendVoiceMsgReqDefaultTypeInternal _SendVoiceMsgReq_default_instance_;
class SendVoiceMsgResp;
class SendVoiceMsgRespDefaultTypeInternal;
extern SendVoiceMsgRespDefaultTypeInternal _SendVoiceMsgResp_default_instance_;
class SyncReq;
class SyncReqDefaultTypeInternal;
extern SyncReqDefaultTypeInternal _SyncReq_default_instance_;
class SyncResp;
class SyncRespDefaultTypeInternal;
extern SyncRespDefaultTypeInternal _SyncResp_default_instance_;
class UpdateAccountCmd;
class UpdateAccountCmdDefaultTypeInternal;
extern UpdateAccountCmdDefaultTypeInternal _UpdateAccountCmd_default_instance_;
}  // namespace g

namespace g {

namespace protobuf_g_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_g_2eproto

enum EReqCmdType {
  EReqCmdType_register = 1,
  EReqCmdType_login = 2,
  EReqCmdType_logout = 3,
  EReqCmdType_init = 4,
  EReqCmdType_sync = 5,
  EReqCmdType_sendTextMsg = 6,
  EReqCmdType_sendVoiceMsg = 7,
  EReqCmdType_sendImgMsg = 8
};
bool EReqCmdType_IsValid(int value);
const EReqCmdType EReqCmdType_MIN = EReqCmdType_register;
const EReqCmdType EReqCmdType_MAX = EReqCmdType_sendImgMsg;
const int EReqCmdType_ARRAYSIZE = EReqCmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EReqCmdType_descriptor();
inline const ::std::string& EReqCmdType_Name(EReqCmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EReqCmdType_descriptor(), value);
}
inline bool EReqCmdType_Parse(
    const ::std::string& name, EReqCmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EReqCmdType>(
    EReqCmdType_descriptor(), name, value);
}
enum ERespCmdType {
  ERespCmdType_register = 10001,
  ERespCmdType_login = 10002,
  ERespCmdType_logout = 10003,
  ERespCmdType_init = 10004,
  ERespCmdType_sync = 10005,
  ERespCmdType_sendTextMsg = 10006,
  ERespCmdType_sendVoiceMsg = 10007,
  ERespCmdType_sendImgMsg = 10008
};
bool ERespCmdType_IsValid(int value);
const ERespCmdType ERespCmdType_MIN = ERespCmdType_register;
const ERespCmdType ERespCmdType_MAX = ERespCmdType_sendImgMsg;
const int ERespCmdType_ARRAYSIZE = ERespCmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ERespCmdType_descriptor();
inline const ::std::string& ERespCmdType_Name(ERespCmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ERespCmdType_descriptor(), value);
}
inline bool ERespCmdType_Parse(
    const ::std::string& name, ERespCmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ERespCmdType>(
    ERespCmdType_descriptor(), name, value);
}
enum EPushCmdType {
  EPushCmdType_needSync = 20001
};
bool EPushCmdType_IsValid(int value);
const EPushCmdType EPushCmdType_MIN = EPushCmdType_needSync;
const EPushCmdType EPushCmdType_MAX = EPushCmdType_needSync;
const int EPushCmdType_ARRAYSIZE = EPushCmdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPushCmdType_descriptor();
inline const ::std::string& EPushCmdType_Name(EPushCmdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPushCmdType_descriptor(), value);
}
inline bool EPushCmdType_Parse(
    const ::std::string& name, EPushCmdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPushCmdType>(
    EPushCmdType_descriptor(), name, value);
}
// ===================================================================

class BaseReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.BaseReq) */ {
 public:
  BaseReq();
  virtual ~BaseReq();

  BaseReq(const BaseReq& from);

  inline BaseReq& operator=(const BaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseReq& default_instance();

  static inline const BaseReq* internal_default_instance() {
    return reinterpret_cast<const BaseReq*>(
               &_BaseReq_default_instance_);
  }

  void Swap(BaseReq* other);

  // implements Message ----------------------------------------------

  inline BaseReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseReq& from);
  void MergeFrom(const BaseReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deviceId = 1;
  bool has_deviceid() const;
  void clear_deviceid();
  static const int kDeviceIdFieldNumber = 1;
  const ::std::string& deviceid() const;
  void set_deviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_deviceid(::std::string&& value);
  #endif
  void set_deviceid(const char* value);
  void set_deviceid(const char* value, size_t size);
  ::std::string* mutable_deviceid();
  ::std::string* release_deviceid();
  void set_allocated_deviceid(::std::string* deviceid);

  // @@protoc_insertion_point(class_scope:g.BaseReq)
 private:
  void set_has_deviceid();
  void clear_has_deviceid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr deviceid_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BaseResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.BaseResp) */ {
 public:
  BaseResp();
  virtual ~BaseResp();

  BaseResp(const BaseResp& from);

  inline BaseResp& operator=(const BaseResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BaseResp& default_instance();

  static inline const BaseResp* internal_default_instance() {
    return reinterpret_cast<const BaseResp*>(
               &_BaseResp_default_instance_);
  }

  void Swap(BaseResp* other);

  // implements Message ----------------------------------------------

  inline BaseResp* New() const PROTOBUF_FINAL { return New(NULL); }

  BaseResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BaseResp& from);
  void MergeFrom(const BaseResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BaseResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string errMsg = 2;
  bool has_errmsg() const;
  void clear_errmsg();
  static const int kErrMsgFieldNumber = 2;
  const ::std::string& errmsg() const;
  void set_errmsg(const ::std::string& value);
  #if LANG_CXX11
  void set_errmsg(::std::string&& value);
  #endif
  void set_errmsg(const char* value);
  void set_errmsg(const char* value, size_t size);
  ::std::string* mutable_errmsg();
  ::std::string* release_errmsg();
  void set_allocated_errmsg(::std::string* errmsg);

  // optional int32 errCode = 1;
  bool has_errcode() const;
  void clear_errcode();
  static const int kErrCodeFieldNumber = 1;
  ::google::protobuf::int32 errcode() const;
  void set_errcode(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:g.BaseResp)
 private:
  void set_has_errcode();
  void clear_has_errcode();
  void set_has_errmsg();
  void clear_has_errmsg();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr errmsg_;
  ::google::protobuf::int32 errcode_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.RegisterReq) */ {
 public:
  RegisterReq();
  virtual ~RegisterReq();

  RegisterReq(const RegisterReq& from);

  inline RegisterReq& operator=(const RegisterReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterReq& default_instance();

  static inline const RegisterReq* internal_default_instance() {
    return reinterpret_cast<const RegisterReq*>(
               &_RegisterReq_default_instance_);
  }

  void Swap(RegisterReq* other);

  // implements Message ----------------------------------------------

  inline RegisterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterReq& from);
  void MergeFrom(const RegisterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional bytes pass = 3;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 3;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const void* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // optional string qq = 4;
  bool has_qq() const;
  void clear_qq();
  static const int kQqFieldNumber = 4;
  const ::std::string& qq() const;
  void set_qq(const ::std::string& value);
  #if LANG_CXX11
  void set_qq(::std::string&& value);
  #endif
  void set_qq(const char* value);
  void set_qq(const char* value, size_t size);
  ::std::string* mutable_qq();
  ::std::string* release_qq();
  void set_allocated_qq(::std::string* qq);

  // optional string email = 5;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 5;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // @@protoc_insertion_point(class_scope:g.RegisterReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_username();
  void clear_has_username();
  void set_has_pass();
  void clear_has_pass();
  void set_has_qq();
  void clear_has_qq();
  void set_has_email();
  void clear_has_email();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::google::protobuf::internal::ArenaStringPtr qq_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::g::BaseReq* basereq_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.RegisterResp) */ {
 public:
  RegisterResp();
  virtual ~RegisterResp();

  RegisterResp(const RegisterResp& from);

  inline RegisterResp& operator=(const RegisterResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResp& default_instance();

  static inline const RegisterResp* internal_default_instance() {
    return reinterpret_cast<const RegisterResp*>(
               &_RegisterResp_default_instance_);
  }

  void Swap(RegisterResp* other);

  // implements Message ----------------------------------------------

  inline RegisterResp* New() const PROTOBUF_FINAL { return New(NULL); }

  RegisterResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterResp& from);
  void MergeFrom(const RegisterResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // @@protoc_insertion_point(class_scope:g.RegisterResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.LoginReq) */ {
 public:
  LoginReq();
  virtual ~LoginReq();

  LoginReq(const LoginReq& from);

  inline LoginReq& operator=(const LoginReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginReq& default_instance();

  static inline const LoginReq* internal_default_instance() {
    return reinterpret_cast<const LoginReq*>(
               &_LoginReq_default_instance_);
  }

  void Swap(LoginReq* other);

  // implements Message ----------------------------------------------

  inline LoginReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginReq& from);
  void MergeFrom(const LoginReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional bytes pass = 3;
  bool has_pass() const;
  void clear_pass();
  static const int kPassFieldNumber = 3;
  const ::std::string& pass() const;
  void set_pass(const ::std::string& value);
  #if LANG_CXX11
  void set_pass(::std::string&& value);
  #endif
  void set_pass(const char* value);
  void set_pass(const void* value, size_t size);
  ::std::string* mutable_pass();
  ::std::string* release_pass();
  void set_allocated_pass(::std::string* pass);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // @@protoc_insertion_point(class_scope:g.LoginReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_username();
  void clear_has_username();
  void set_has_pass();
  void clear_has_pass();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr pass_;
  ::g::BaseReq* basereq_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.LoginResp) */ {
 public:
  LoginResp();
  virtual ~LoginResp();

  LoginResp(const LoginResp& from);

  inline LoginResp& operator=(const LoginResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResp& default_instance();

  static inline const LoginResp* internal_default_instance() {
    return reinterpret_cast<const LoginResp*>(
               &_LoginResp_default_instance_);
  }

  void Swap(LoginResp* other);

  // implements Message ----------------------------------------------

  inline LoginResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginResp& from);
  void MergeFrom(const LoginResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // @@protoc_insertion_point(class_scope:g.LoginResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.LogoutReq) */ {
 public:
  LogoutReq();
  virtual ~LogoutReq();

  LogoutReq(const LogoutReq& from);

  inline LogoutReq& operator=(const LogoutReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutReq& default_instance();

  static inline const LogoutReq* internal_default_instance() {
    return reinterpret_cast<const LogoutReq*>(
               &_LogoutReq_default_instance_);
  }

  void Swap(LogoutReq* other);

  // implements Message ----------------------------------------------

  inline LogoutReq* New() const PROTOBUF_FINAL { return New(NULL); }

  LogoutReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutReq& from);
  void MergeFrom(const LogoutReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // @@protoc_insertion_point(class_scope:g.LogoutReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseReq* basereq_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LogoutResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.LogoutResp) */ {
 public:
  LogoutResp();
  virtual ~LogoutResp();

  LogoutResp(const LogoutResp& from);

  inline LogoutResp& operator=(const LogoutResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutResp& default_instance();

  static inline const LogoutResp* internal_default_instance() {
    return reinterpret_cast<const LogoutResp*>(
               &_LogoutResp_default_instance_);
  }

  void Swap(LogoutResp* other);

  // implements Message ----------------------------------------------

  inline LogoutResp* New() const PROTOBUF_FINAL { return New(NULL); }

  LogoutResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutResp& from);
  void MergeFrom(const LogoutResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // @@protoc_insertion_point(class_scope:g.LogoutResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.HeartBeatReq) */ {
 public:
  HeartBeatReq();
  virtual ~HeartBeatReq();

  HeartBeatReq(const HeartBeatReq& from);

  inline HeartBeatReq& operator=(const HeartBeatReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatReq& default_instance();

  static inline const HeartBeatReq* internal_default_instance() {
    return reinterpret_cast<const HeartBeatReq*>(
               &_HeartBeatReq_default_instance_);
  }

  void Swap(HeartBeatReq* other);

  // implements Message ----------------------------------------------

  inline HeartBeatReq* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeatReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeatReq& from);
  void MergeFrom(const HeartBeatReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // @@protoc_insertion_point(class_scope:g.HeartBeatReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseReq* basereq_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.HeartBeatResp) */ {
 public:
  HeartBeatResp();
  virtual ~HeartBeatResp();

  HeartBeatResp(const HeartBeatResp& from);

  inline HeartBeatResp& operator=(const HeartBeatResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatResp& default_instance();

  static inline const HeartBeatResp* internal_default_instance() {
    return reinterpret_cast<const HeartBeatResp*>(
               &_HeartBeatResp_default_instance_);
  }

  void Swap(HeartBeatResp* other);

  // implements Message ----------------------------------------------

  inline HeartBeatResp* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeatResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeatResp& from);
  void MergeFrom(const HeartBeatResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeatResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // @@protoc_insertion_point(class_scope:g.HeartBeatResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddContactCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.AddContactCmd) */ {
 public:
  AddContactCmd();
  virtual ~AddContactCmd();

  AddContactCmd(const AddContactCmd& from);

  inline AddContactCmd& operator=(const AddContactCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddContactCmd& default_instance();

  static inline const AddContactCmd* internal_default_instance() {
    return reinterpret_cast<const AddContactCmd*>(
               &_AddContactCmd_default_instance_);
  }

  void Swap(AddContactCmd* other);

  // implements Message ----------------------------------------------

  inline AddContactCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  AddContactCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddContactCmd& from);
  void MergeFrom(const AddContactCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddContactCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 2;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string nickName = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string headImgUrl = 4;
  bool has_headimgurl() const;
  void clear_headimgurl();
  static const int kHeadImgUrlFieldNumber = 4;
  const ::std::string& headimgurl() const;
  void set_headimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_headimgurl(::std::string&& value);
  #endif
  void set_headimgurl(const char* value);
  void set_headimgurl(const char* value, size_t size);
  ::std::string* mutable_headimgurl();
  ::std::string* release_headimgurl();
  void set_allocated_headimgurl(::std::string* headimgurl);

  // optional int64 serverId = 1;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 1;
  ::google::protobuf::int64 serverid() const;
  void set_serverid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:g.AddContactCmd)
 private:
  void set_has_serverid();
  void clear_has_serverid();
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_headimgurl();
  void clear_has_headimgurl();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr headimgurl_;
  ::google::protobuf::int64 serverid_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelContactCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.DelContactCmd) */ {
 public:
  DelContactCmd();
  virtual ~DelContactCmd();

  DelContactCmd(const DelContactCmd& from);

  inline DelContactCmd& operator=(const DelContactCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelContactCmd& default_instance();

  static inline const DelContactCmd* internal_default_instance() {
    return reinterpret_cast<const DelContactCmd*>(
               &_DelContactCmd_default_instance_);
  }

  void Swap(DelContactCmd* other);

  // implements Message ----------------------------------------------

  inline DelContactCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  DelContactCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelContactCmd& from);
  void MergeFrom(const DelContactCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelContactCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // @@protoc_insertion_point(class_scope:g.DelContactCmd)
 private:
  void set_has_username();
  void clear_has_username();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateAccountCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.UpdateAccountCmd) */ {
 public:
  UpdateAccountCmd();
  virtual ~UpdateAccountCmd();

  UpdateAccountCmd(const UpdateAccountCmd& from);

  inline UpdateAccountCmd& operator=(const UpdateAccountCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateAccountCmd& default_instance();

  static inline const UpdateAccountCmd* internal_default_instance() {
    return reinterpret_cast<const UpdateAccountCmd*>(
               &_UpdateAccountCmd_default_instance_);
  }

  void Swap(UpdateAccountCmd* other);

  // implements Message ----------------------------------------------

  inline UpdateAccountCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateAccountCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateAccountCmd& from);
  void MergeFrom(const UpdateAccountCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateAccountCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string userName = 1;
  bool has_username() const;
  void clear_username();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional string nickName = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNickNameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string headImgUrl = 3;
  bool has_headimgurl() const;
  void clear_headimgurl();
  static const int kHeadImgUrlFieldNumber = 3;
  const ::std::string& headimgurl() const;
  void set_headimgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_headimgurl(::std::string&& value);
  #endif
  void set_headimgurl(const char* value);
  void set_headimgurl(const char* value, size_t size);
  ::std::string* mutable_headimgurl();
  ::std::string* release_headimgurl();
  void set_allocated_headimgurl(::std::string* headimgurl);

  // optional string qq = 4;
  bool has_qq() const;
  void clear_qq();
  static const int kQqFieldNumber = 4;
  const ::std::string& qq() const;
  void set_qq(const ::std::string& value);
  #if LANG_CXX11
  void set_qq(::std::string&& value);
  #endif
  void set_qq(const char* value);
  void set_qq(const char* value, size_t size);
  ::std::string* mutable_qq();
  ::std::string* release_qq();
  void set_allocated_qq(::std::string* qq);

  // optional string email = 5;
  bool has_email() const;
  void clear_email();
  static const int kEmailFieldNumber = 5;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:g.UpdateAccountCmd)
 private:
  void set_has_username();
  void clear_has_username();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_headimgurl();
  void clear_has_headimgurl();
  void set_has_qq();
  void clear_has_qq();
  void set_has_email();
  void clear_has_email();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr headimgurl_;
  ::google::protobuf::internal::ArenaStringPtr qq_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.InitReq) */ {
 public:
  InitReq();
  virtual ~InitReq();

  InitReq(const InitReq& from);

  inline InitReq& operator=(const InitReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitReq& default_instance();

  static inline const InitReq* internal_default_instance() {
    return reinterpret_cast<const InitReq*>(
               &_InitReq_default_instance_);
  }

  void Swap(InitReq* other);

  // implements Message ----------------------------------------------

  inline InitReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InitReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitReq& from);
  void MergeFrom(const InitReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes syncKey = 2;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 2;
  const ::std::string& synckey() const;
  void set_synckey(const ::std::string& value);
  #if LANG_CXX11
  void set_synckey(::std::string&& value);
  #endif
  void set_synckey(const char* value);
  void set_synckey(const void* value, size_t size);
  ::std::string* mutable_synckey();
  ::std::string* release_synckey();
  void set_allocated_synckey(::std::string* synckey);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // @@protoc_insertion_point(class_scope:g.InitReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_synckey();
  void clear_has_synckey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr synckey_;
  ::g::BaseReq* basereq_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InitResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.InitResp) */ {
 public:
  InitResp();
  virtual ~InitResp();

  InitResp(const InitResp& from);

  inline InitResp& operator=(const InitResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InitResp& default_instance();

  static inline const InitResp* internal_default_instance() {
    return reinterpret_cast<const InitResp*>(
               &_InitResp_default_instance_);
  }

  void Swap(InitResp* other);

  // implements Message ----------------------------------------------

  inline InitResp* New() const PROTOBUF_FINAL { return New(NULL); }

  InitResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InitResp& from);
  void MergeFrom(const InitResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InitResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .g.AddContactCmd addContactCmds = 5;
  int addcontactcmds_size() const;
  void clear_addcontactcmds();
  static const int kAddContactCmdsFieldNumber = 5;
  const ::g::AddContactCmd& addcontactcmds(int index) const;
  ::g::AddContactCmd* mutable_addcontactcmds(int index);
  ::g::AddContactCmd* add_addcontactcmds();
  ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >*
      mutable_addcontactcmds();
  const ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >&
      addcontactcmds() const;

  // repeated .g.DelContactCmd delContactCmds = 6;
  int delcontactcmds_size() const;
  void clear_delcontactcmds();
  static const int kDelContactCmdsFieldNumber = 6;
  const ::g::DelContactCmd& delcontactcmds(int index) const;
  ::g::DelContactCmd* mutable_delcontactcmds(int index);
  ::g::DelContactCmd* add_delcontactcmds();
  ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >*
      mutable_delcontactcmds();
  const ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >&
      delcontactcmds() const;

  // repeated .g.UpdateAccountCmd updateContactCmds = 7;
  int updatecontactcmds_size() const;
  void clear_updatecontactcmds();
  static const int kUpdateContactCmdsFieldNumber = 7;
  const ::g::UpdateAccountCmd& updatecontactcmds(int index) const;
  ::g::UpdateAccountCmd* mutable_updatecontactcmds(int index);
  ::g::UpdateAccountCmd* add_updatecontactcmds();
  ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >*
      mutable_updatecontactcmds();
  const ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >&
      updatecontactcmds() const;

  // optional bytes syncKey = 2;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 2;
  const ::std::string& synckey() const;
  void set_synckey(const ::std::string& value);
  #if LANG_CXX11
  void set_synckey(::std::string&& value);
  #endif
  void set_synckey(const char* value);
  void set_synckey(const void* value, size_t size);
  ::std::string* mutable_synckey();
  ::std::string* release_synckey();
  void set_allocated_synckey(::std::string* synckey);

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // optional .g.UpdateAccountCmd updateAccountCmd = 4;
  bool has_updateaccountcmd() const;
  void clear_updateaccountcmd();
  static const int kUpdateAccountCmdFieldNumber = 4;
  const ::g::UpdateAccountCmd& updateaccountcmd() const;
  ::g::UpdateAccountCmd* mutable_updateaccountcmd();
  ::g::UpdateAccountCmd* release_updateaccountcmd();
  void set_allocated_updateaccountcmd(::g::UpdateAccountCmd* updateaccountcmd);

  // optional int32 initedPercent = 3;
  bool has_initedpercent() const;
  void clear_initedpercent();
  static const int kInitedPercentFieldNumber = 3;
  ::google::protobuf::int32 initedpercent() const;
  void set_initedpercent(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:g.InitResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();
  void set_has_synckey();
  void clear_has_synckey();
  void set_has_initedpercent();
  void clear_has_initedpercent();
  void set_has_updateaccountcmd();
  void clear_has_updateaccountcmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd > addcontactcmds_;
  ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd > delcontactcmds_;
  ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd > updatecontactcmds_;
  ::google::protobuf::internal::ArenaStringPtr synckey_;
  ::g::BaseResp* baseresp_;
  ::g::UpdateAccountCmd* updateaccountcmd_;
  ::google::protobuf::int32 initedpercent_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SyncReq) */ {
 public:
  SyncReq();
  virtual ~SyncReq();

  SyncReq(const SyncReq& from);

  inline SyncReq& operator=(const SyncReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncReq& default_instance();

  static inline const SyncReq* internal_default_instance() {
    return reinterpret_cast<const SyncReq*>(
               &_SyncReq_default_instance_);
  }

  void Swap(SyncReq* other);

  // implements Message ----------------------------------------------

  inline SyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncReq& from);
  void MergeFrom(const SyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes syncKey = 2;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 2;
  const ::std::string& synckey() const;
  void set_synckey(const ::std::string& value);
  #if LANG_CXX11
  void set_synckey(::std::string&& value);
  #endif
  void set_synckey(const char* value);
  void set_synckey(const void* value, size_t size);
  ::std::string* mutable_synckey();
  ::std::string* release_synckey();
  void set_allocated_synckey(::std::string* synckey);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // @@protoc_insertion_point(class_scope:g.SyncReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_synckey();
  void clear_has_synckey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr synckey_;
  ::g::BaseReq* basereq_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SyncResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SyncResp) */ {
 public:
  SyncResp();
  virtual ~SyncResp();

  SyncResp(const SyncResp& from);

  inline SyncResp& operator=(const SyncResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SyncResp& default_instance();

  static inline const SyncResp* internal_default_instance() {
    return reinterpret_cast<const SyncResp*>(
               &_SyncResp_default_instance_);
  }

  void Swap(SyncResp* other);

  // implements Message ----------------------------------------------

  inline SyncResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SyncResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SyncResp& from);
  void MergeFrom(const SyncResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SyncResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .g.AddContactCmd addContactCmds = 4;
  int addcontactcmds_size() const;
  void clear_addcontactcmds();
  static const int kAddContactCmdsFieldNumber = 4;
  const ::g::AddContactCmd& addcontactcmds(int index) const;
  ::g::AddContactCmd* mutable_addcontactcmds(int index);
  ::g::AddContactCmd* add_addcontactcmds();
  ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >*
      mutable_addcontactcmds();
  const ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >&
      addcontactcmds() const;

  // repeated .g.DelContactCmd delContactCmds = 5;
  int delcontactcmds_size() const;
  void clear_delcontactcmds();
  static const int kDelContactCmdsFieldNumber = 5;
  const ::g::DelContactCmd& delcontactcmds(int index) const;
  ::g::DelContactCmd* mutable_delcontactcmds(int index);
  ::g::DelContactCmd* add_delcontactcmds();
  ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >*
      mutable_delcontactcmds();
  const ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >&
      delcontactcmds() const;

  // repeated .g.UpdateAccountCmd updateContactCmds = 6;
  int updatecontactcmds_size() const;
  void clear_updatecontactcmds();
  static const int kUpdateContactCmdsFieldNumber = 6;
  const ::g::UpdateAccountCmd& updatecontactcmds(int index) const;
  ::g::UpdateAccountCmd* mutable_updatecontactcmds(int index);
  ::g::UpdateAccountCmd* add_updatecontactcmds();
  ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >*
      mutable_updatecontactcmds();
  const ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >&
      updatecontactcmds() const;

  // optional bytes syncKey = 2;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 2;
  const ::std::string& synckey() const;
  void set_synckey(const ::std::string& value);
  #if LANG_CXX11
  void set_synckey(::std::string&& value);
  #endif
  void set_synckey(const char* value);
  void set_synckey(const void* value, size_t size);
  ::std::string* mutable_synckey();
  ::std::string* release_synckey();
  void set_allocated_synckey(::std::string* synckey);

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // optional .g.UpdateAccountCmd updateAccountCmd = 3;
  bool has_updateaccountcmd() const;
  void clear_updateaccountcmd();
  static const int kUpdateAccountCmdFieldNumber = 3;
  const ::g::UpdateAccountCmd& updateaccountcmd() const;
  ::g::UpdateAccountCmd* mutable_updateaccountcmd();
  ::g::UpdateAccountCmd* release_updateaccountcmd();
  void set_allocated_updateaccountcmd(::g::UpdateAccountCmd* updateaccountcmd);

  // @@protoc_insertion_point(class_scope:g.SyncResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();
  void set_has_synckey();
  void clear_has_synckey();
  void set_has_updateaccountcmd();
  void clear_has_updateaccountcmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd > addcontactcmds_;
  ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd > delcontactcmds_;
  ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd > updatecontactcmds_;
  ::google::protobuf::internal::ArenaStringPtr synckey_;
  ::g::BaseResp* baseresp_;
  ::g::UpdateAccountCmd* updateaccountcmd_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendTextMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SendTextMsgReq) */ {
 public:
  SendTextMsgReq();
  virtual ~SendTextMsgReq();

  SendTextMsgReq(const SendTextMsgReq& from);

  inline SendTextMsgReq& operator=(const SendTextMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTextMsgReq& default_instance();

  static inline const SendTextMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendTextMsgReq*>(
               &_SendTextMsgReq_default_instance_);
  }

  void Swap(SendTextMsgReq* other);

  // implements Message ----------------------------------------------

  inline SendTextMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendTextMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendTextMsgReq& from);
  void MergeFrom(const SendTextMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendTextMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fromUserName = 3;
  bool has_fromusername() const;
  void clear_fromusername();
  static const int kFromUserNameFieldNumber = 3;
  const ::std::string& fromusername() const;
  void set_fromusername(const ::std::string& value);
  #if LANG_CXX11
  void set_fromusername(::std::string&& value);
  #endif
  void set_fromusername(const char* value);
  void set_fromusername(const char* value, size_t size);
  ::std::string* mutable_fromusername();
  ::std::string* release_fromusername();
  void set_allocated_fromusername(::std::string* fromusername);

  // optional string toUserName = 4;
  bool has_tousername() const;
  void clear_tousername();
  static const int kToUserNameFieldNumber = 4;
  const ::std::string& tousername() const;
  void set_tousername(const ::std::string& value);
  #if LANG_CXX11
  void set_tousername(::std::string&& value);
  #endif
  void set_tousername(const char* value);
  void set_tousername(const char* value, size_t size);
  ::std::string* mutable_tousername();
  ::std::string* release_tousername();
  void set_allocated_tousername(::std::string* tousername);

  // optional string text = 5;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 5;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // optional int64 clientId = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 2;
  ::google::protobuf::int64 clientid() const;
  void set_clientid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:g.SendTextMsgReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_fromusername();
  void clear_has_fromusername();
  void set_has_tousername();
  void clear_has_tousername();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromusername_;
  ::google::protobuf::internal::ArenaStringPtr tousername_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::g::BaseReq* basereq_;
  ::google::protobuf::int64 clientid_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendTextMsgResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SendTextMsgResp) */ {
 public:
  SendTextMsgResp();
  virtual ~SendTextMsgResp();

  SendTextMsgResp(const SendTextMsgResp& from);

  inline SendTextMsgResp& operator=(const SendTextMsgResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTextMsgResp& default_instance();

  static inline const SendTextMsgResp* internal_default_instance() {
    return reinterpret_cast<const SendTextMsgResp*>(
               &_SendTextMsgResp_default_instance_);
  }

  void Swap(SendTextMsgResp* other);

  // implements Message ----------------------------------------------

  inline SendTextMsgResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendTextMsgResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendTextMsgResp& from);
  void MergeFrom(const SendTextMsgResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendTextMsgResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // optional int64 serverId = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int64 serverid() const;
  void set_serverid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:g.SendTextMsgResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();
  void set_has_serverid();
  void clear_has_serverid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  ::google::protobuf::int64 serverid_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendVoiceMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SendVoiceMsgReq) */ {
 public:
  SendVoiceMsgReq();
  virtual ~SendVoiceMsgReq();

  SendVoiceMsgReq(const SendVoiceMsgReq& from);

  inline SendVoiceMsgReq& operator=(const SendVoiceMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendVoiceMsgReq& default_instance();

  static inline const SendVoiceMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendVoiceMsgReq*>(
               &_SendVoiceMsgReq_default_instance_);
  }

  void Swap(SendVoiceMsgReq* other);

  // implements Message ----------------------------------------------

  inline SendVoiceMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendVoiceMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendVoiceMsgReq& from);
  void MergeFrom(const SendVoiceMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendVoiceMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // optional int64 clientId = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 2;
  ::google::protobuf::int64 clientid() const;
  void set_clientid(::google::protobuf::int64 value);

  // optional int32 totalLen = 3;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 3;
  ::google::protobuf::int32 totallen() const;
  void set_totallen(::google::protobuf::int32 value);

  // optional int32 dataOffset = 4;
  bool has_dataoffset() const;
  void clear_dataoffset();
  static const int kDataOffsetFieldNumber = 4;
  ::google::protobuf::int32 dataoffset() const;
  void set_dataoffset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:g.SendVoiceMsgReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_dataoffset();
  void clear_has_dataoffset();
  void set_has_data();
  void clear_has_data();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::g::BaseReq* basereq_;
  ::google::protobuf::int64 clientid_;
  ::google::protobuf::int32 totallen_;
  ::google::protobuf::int32 dataoffset_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendVoiceMsgResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SendVoiceMsgResp) */ {
 public:
  SendVoiceMsgResp();
  virtual ~SendVoiceMsgResp();

  SendVoiceMsgResp(const SendVoiceMsgResp& from);

  inline SendVoiceMsgResp& operator=(const SendVoiceMsgResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendVoiceMsgResp& default_instance();

  static inline const SendVoiceMsgResp* internal_default_instance() {
    return reinterpret_cast<const SendVoiceMsgResp*>(
               &_SendVoiceMsgResp_default_instance_);
  }

  void Swap(SendVoiceMsgResp* other);

  // implements Message ----------------------------------------------

  inline SendVoiceMsgResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendVoiceMsgResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendVoiceMsgResp& from);
  void MergeFrom(const SendVoiceMsgResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendVoiceMsgResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // optional int64 serverId = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int64 serverid() const;
  void set_serverid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:g.SendVoiceMsgResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();
  void set_has_serverid();
  void clear_has_serverid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  ::google::protobuf::int64 serverid_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendImageMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SendImageMsgReq) */ {
 public:
  SendImageMsgReq();
  virtual ~SendImageMsgReq();

  SendImageMsgReq(const SendImageMsgReq& from);

  inline SendImageMsgReq& operator=(const SendImageMsgReq& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendImageMsgReq& default_instance();

  static inline const SendImageMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendImageMsgReq*>(
               &_SendImageMsgReq_default_instance_);
  }

  void Swap(SendImageMsgReq* other);

  // implements Message ----------------------------------------------

  inline SendImageMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendImageMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendImageMsgReq& from);
  void MergeFrom(const SendImageMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendImageMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes data = 5;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 5;
  const ::std::string& data() const;
  void set_data(const ::std::string& value);
  #if LANG_CXX11
  void set_data(::std::string&& value);
  #endif
  void set_data(const char* value);
  void set_data(const void* value, size_t size);
  ::std::string* mutable_data();
  ::std::string* release_data();
  void set_allocated_data(::std::string* data);

  // optional string imageFileName = 6;
  bool has_imagefilename() const;
  void clear_imagefilename();
  static const int kImageFileNameFieldNumber = 6;
  const ::std::string& imagefilename() const;
  void set_imagefilename(const ::std::string& value);
  #if LANG_CXX11
  void set_imagefilename(::std::string&& value);
  #endif
  void set_imagefilename(const char* value);
  void set_imagefilename(const char* value, size_t size);
  ::std::string* mutable_imagefilename();
  ::std::string* release_imagefilename();
  void set_allocated_imagefilename(::std::string* imagefilename);

  // optional .g.BaseReq baseReq = 1;
  bool has_basereq() const;
  void clear_basereq();
  static const int kBaseReqFieldNumber = 1;
  const ::g::BaseReq& basereq() const;
  ::g::BaseReq* mutable_basereq();
  ::g::BaseReq* release_basereq();
  void set_allocated_basereq(::g::BaseReq* basereq);

  // optional int64 clientId = 2;
  bool has_clientid() const;
  void clear_clientid();
  static const int kClientIdFieldNumber = 2;
  ::google::protobuf::int64 clientid() const;
  void set_clientid(::google::protobuf::int64 value);

  // optional int32 totalLen = 3;
  bool has_totallen() const;
  void clear_totallen();
  static const int kTotalLenFieldNumber = 3;
  ::google::protobuf::int32 totallen() const;
  void set_totallen(::google::protobuf::int32 value);

  // optional int32 dataOffset = 4;
  bool has_dataoffset() const;
  void clear_dataoffset();
  static const int kDataOffsetFieldNumber = 4;
  ::google::protobuf::int32 dataoffset() const;
  void set_dataoffset(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:g.SendImageMsgReq)
 private:
  void set_has_basereq();
  void clear_has_basereq();
  void set_has_clientid();
  void clear_has_clientid();
  void set_has_totallen();
  void clear_has_totallen();
  void set_has_dataoffset();
  void clear_has_dataoffset();
  void set_has_data();
  void clear_has_data();
  void set_has_imagefilename();
  void clear_has_imagefilename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr data_;
  ::google::protobuf::internal::ArenaStringPtr imagefilename_;
  ::g::BaseReq* basereq_;
  ::google::protobuf::int64 clientid_;
  ::google::protobuf::int32 totallen_;
  ::google::protobuf::int32 dataoffset_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SendImageMsgResp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.SendImageMsgResp) */ {
 public:
  SendImageMsgResp();
  virtual ~SendImageMsgResp();

  SendImageMsgResp(const SendImageMsgResp& from);

  inline SendImageMsgResp& operator=(const SendImageMsgResp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendImageMsgResp& default_instance();

  static inline const SendImageMsgResp* internal_default_instance() {
    return reinterpret_cast<const SendImageMsgResp*>(
               &_SendImageMsgResp_default_instance_);
  }

  void Swap(SendImageMsgResp* other);

  // implements Message ----------------------------------------------

  inline SendImageMsgResp* New() const PROTOBUF_FINAL { return New(NULL); }

  SendImageMsgResp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendImageMsgResp& from);
  void MergeFrom(const SendImageMsgResp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendImageMsgResp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .g.BaseResp baseResp = 1;
  bool has_baseresp() const;
  void clear_baseresp();
  static const int kBaseRespFieldNumber = 1;
  const ::g::BaseResp& baseresp() const;
  ::g::BaseResp* mutable_baseresp();
  ::g::BaseResp* release_baseresp();
  void set_allocated_baseresp(::g::BaseResp* baseresp);

  // optional int64 serverId = 2;
  bool has_serverid() const;
  void clear_serverid();
  static const int kServerIdFieldNumber = 2;
  ::google::protobuf::int64 serverid() const;
  void set_serverid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:g.SendImageMsgResp)
 private:
  void set_has_baseresp();
  void clear_has_baseresp();
  void set_has_serverid();
  void clear_has_serverid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::g::BaseResp* baseresp_;
  ::google::protobuf::int64 serverid_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NeedSyncPush : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:g.NeedSyncPush) */ {
 public:
  NeedSyncPush();
  virtual ~NeedSyncPush();

  NeedSyncPush(const NeedSyncPush& from);

  inline NeedSyncPush& operator=(const NeedSyncPush& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NeedSyncPush& default_instance();

  static inline const NeedSyncPush* internal_default_instance() {
    return reinterpret_cast<const NeedSyncPush*>(
               &_NeedSyncPush_default_instance_);
  }

  void Swap(NeedSyncPush* other);

  // implements Message ----------------------------------------------

  inline NeedSyncPush* New() const PROTOBUF_FINAL { return New(NULL); }

  NeedSyncPush* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NeedSyncPush& from);
  void MergeFrom(const NeedSyncPush& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NeedSyncPush* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes syncKey = 1;
  bool has_synckey() const;
  void clear_synckey();
  static const int kSyncKeyFieldNumber = 1;
  const ::std::string& synckey() const;
  void set_synckey(const ::std::string& value);
  #if LANG_CXX11
  void set_synckey(::std::string&& value);
  #endif
  void set_synckey(const char* value);
  void set_synckey(const void* value, size_t size);
  ::std::string* mutable_synckey();
  ::std::string* release_synckey();
  void set_allocated_synckey(::std::string* synckey);

  // @@protoc_insertion_point(class_scope:g.NeedSyncPush)
 private:
  void set_has_synckey();
  void clear_has_synckey();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr synckey_;
  friend struct  protobuf_g_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseReq

// optional string deviceId = 1;
inline bool BaseReq::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseReq::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseReq::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseReq::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
inline const ::std::string& BaseReq::deviceid() const {
  // @@protoc_insertion_point(field_get:g.BaseReq.deviceId)
  return deviceid_.GetNoArena();
}
inline void BaseReq::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.BaseReq.deviceId)
}
#if LANG_CXX11
inline void BaseReq::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.BaseReq.deviceId)
}
#endif
inline void BaseReq::set_deviceid(const char* value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.BaseReq.deviceId)
}
inline void BaseReq::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.BaseReq.deviceId)
}
inline ::std::string* BaseReq::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:g.BaseReq.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseReq::release_deviceid() {
  // @@protoc_insertion_point(field_release:g.BaseReq.deviceId)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:g.BaseReq.deviceId)
}

// -------------------------------------------------------------------

// BaseResp

// optional int32 errCode = 1;
inline bool BaseResp::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BaseResp::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BaseResp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BaseResp::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
inline ::google::protobuf::int32 BaseResp::errcode() const {
  // @@protoc_insertion_point(field_get:g.BaseResp.errCode)
  return errcode_;
}
inline void BaseResp::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:g.BaseResp.errCode)
}

// optional string errMsg = 2;
inline bool BaseResp::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BaseResp::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BaseResp::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BaseResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
inline const ::std::string& BaseResp::errmsg() const {
  // @@protoc_insertion_point(field_get:g.BaseResp.errMsg)
  return errmsg_.GetNoArena();
}
inline void BaseResp::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.BaseResp.errMsg)
}
#if LANG_CXX11
inline void BaseResp::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.BaseResp.errMsg)
}
#endif
inline void BaseResp::set_errmsg(const char* value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.BaseResp.errMsg)
}
inline void BaseResp::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.BaseResp.errMsg)
}
inline ::std::string* BaseResp::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:g.BaseResp.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BaseResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:g.BaseResp.errMsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BaseResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:g.BaseResp.errMsg)
}

// -------------------------------------------------------------------

// RegisterReq

// optional .g.BaseReq baseReq = 1;
inline bool RegisterReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RegisterReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RegisterReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RegisterReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& RegisterReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* RegisterReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* RegisterReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void RegisterReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.baseReq)
}

// optional string userName = 2;
inline bool RegisterReq::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterReq::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& RegisterReq::username() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.userName)
  return username_.GetNoArena();
}
inline void RegisterReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.userName)
}
#if LANG_CXX11
inline void RegisterReq::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.userName)
}
#endif
inline void RegisterReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.userName)
}
inline void RegisterReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.userName)
}
inline ::std::string* RegisterReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_username() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.userName)
}

// optional bytes pass = 3;
inline bool RegisterReq::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RegisterReq::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RegisterReq::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RegisterReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
inline const ::std::string& RegisterReq::pass() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.pass)
  return pass_.GetNoArena();
}
inline void RegisterReq::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.pass)
}
#if LANG_CXX11
inline void RegisterReq::set_pass(::std::string&& value) {
  set_has_pass();
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.pass)
}
#endif
inline void RegisterReq::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.pass)
}
inline void RegisterReq::set_pass(const void* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.pass)
}
inline ::std::string* RegisterReq::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_pass() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.pass)
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.pass)
}

// optional string qq = 4;
inline bool RegisterReq::has_qq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RegisterReq::set_has_qq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RegisterReq::clear_has_qq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RegisterReq::clear_qq() {
  qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qq();
}
inline const ::std::string& RegisterReq::qq() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.qq)
  return qq_.GetNoArena();
}
inline void RegisterReq::set_qq(const ::std::string& value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.qq)
}
#if LANG_CXX11
inline void RegisterReq::set_qq(::std::string&& value) {
  set_has_qq();
  qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.qq)
}
#endif
inline void RegisterReq::set_qq(const char* value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.qq)
}
inline void RegisterReq::set_qq(const char* value, size_t size) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.qq)
}
inline ::std::string* RegisterReq::mutable_qq() {
  set_has_qq();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.qq)
  return qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_qq() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.qq)
  clear_has_qq();
  return qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_qq(::std::string* qq) {
  if (qq != NULL) {
    set_has_qq();
  } else {
    clear_has_qq();
  }
  qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qq);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.qq)
}

// optional string email = 5;
inline bool RegisterReq::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RegisterReq::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RegisterReq::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RegisterReq::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& RegisterReq::email() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.email)
  return email_.GetNoArena();
}
inline void RegisterReq::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.email)
}
#if LANG_CXX11
inline void RegisterReq::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.email)
}
#endif
inline void RegisterReq::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.email)
}
inline void RegisterReq::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.email)
}
inline ::std::string* RegisterReq::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterReq::release_email() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterReq::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.email)
}

// -------------------------------------------------------------------

// RegisterResp

// optional .g.BaseResp baseResp = 1;
inline bool RegisterResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RegisterResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RegisterResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RegisterResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& RegisterResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.RegisterResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* RegisterResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.RegisterResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* RegisterResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.RegisterResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void RegisterResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.RegisterResp.baseResp)
}

// -------------------------------------------------------------------

// LoginReq

// optional .g.BaseReq baseReq = 1;
inline bool LoginReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& LoginReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.LoginReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* LoginReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.LoginReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* LoginReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.LoginReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void LoginReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LoginReq.baseReq)
}

// optional string userName = 2;
inline bool LoginReq::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginReq::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& LoginReq::username() const {
  // @@protoc_insertion_point(field_get:g.LoginReq.userName)
  return username_.GetNoArena();
}
inline void LoginReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.LoginReq.userName)
}
#if LANG_CXX11
inline void LoginReq::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.LoginReq.userName)
}
#endif
inline void LoginReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.LoginReq.userName)
}
inline void LoginReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.LoginReq.userName)
}
inline ::std::string* LoginReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.LoginReq.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_username() {
  // @@protoc_insertion_point(field_release:g.LoginReq.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.LoginReq.userName)
}

// optional bytes pass = 3;
inline bool LoginReq::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginReq::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginReq::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
inline const ::std::string& LoginReq::pass() const {
  // @@protoc_insertion_point(field_get:g.LoginReq.pass)
  return pass_.GetNoArena();
}
inline void LoginReq::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.LoginReq.pass)
}
#if LANG_CXX11
inline void LoginReq::set_pass(::std::string&& value) {
  set_has_pass();
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.LoginReq.pass)
}
#endif
inline void LoginReq::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.LoginReq.pass)
}
inline void LoginReq::set_pass(const void* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.LoginReq.pass)
}
inline ::std::string* LoginReq::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:g.LoginReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginReq::release_pass() {
  // @@protoc_insertion_point(field_release:g.LoginReq.pass)
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:g.LoginReq.pass)
}

// -------------------------------------------------------------------

// LoginResp

// optional .g.BaseResp baseResp = 1;
inline bool LoginResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& LoginResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.LoginResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* LoginResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.LoginResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* LoginResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.LoginResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void LoginResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LoginResp.baseResp)
}

// -------------------------------------------------------------------

// LogoutReq

// optional .g.BaseReq baseReq = 1;
inline bool LogoutReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& LogoutReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.LogoutReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* LogoutReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.LogoutReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* LogoutReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.LogoutReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void LogoutReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LogoutReq.baseReq)
}

// -------------------------------------------------------------------

// LogoutResp

// optional .g.BaseResp baseResp = 1;
inline bool LogoutResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogoutResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogoutResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogoutResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& LogoutResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.LogoutResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* LogoutResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.LogoutResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* LogoutResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.LogoutResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void LogoutResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LogoutResp.baseResp)
}

// -------------------------------------------------------------------

// HeartBeatReq

// optional .g.BaseReq baseReq = 1;
inline bool HeartBeatReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& HeartBeatReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.HeartBeatReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* HeartBeatReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.HeartBeatReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* HeartBeatReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.HeartBeatReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void HeartBeatReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.HeartBeatReq.baseReq)
}

// -------------------------------------------------------------------

// HeartBeatResp

// optional .g.BaseResp baseResp = 1;
inline bool HeartBeatResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HeartBeatResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HeartBeatResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HeartBeatResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& HeartBeatResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.HeartBeatResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* HeartBeatResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.HeartBeatResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* HeartBeatResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.HeartBeatResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void HeartBeatResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.HeartBeatResp.baseResp)
}

// -------------------------------------------------------------------

// AddContactCmd

// optional int64 serverId = 1;
inline bool AddContactCmd::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AddContactCmd::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AddContactCmd::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AddContactCmd::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 AddContactCmd::serverid() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.serverId)
  return serverid_;
}
inline void AddContactCmd::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.AddContactCmd.serverId)
}

// optional string userName = 2;
inline bool AddContactCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddContactCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddContactCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddContactCmd::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& AddContactCmd::username() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.userName)
  return username_.GetNoArena();
}
inline void AddContactCmd::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.AddContactCmd.userName)
}
#if LANG_CXX11
inline void AddContactCmd::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.AddContactCmd.userName)
}
#endif
inline void AddContactCmd::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.AddContactCmd.userName)
}
inline void AddContactCmd::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.AddContactCmd.userName)
}
inline ::std::string* AddContactCmd::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.AddContactCmd.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContactCmd::release_username() {
  // @@protoc_insertion_point(field_release:g.AddContactCmd.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContactCmd::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.AddContactCmd.userName)
}

// optional string nickName = 3;
inline bool AddContactCmd::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddContactCmd::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddContactCmd::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddContactCmd::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& AddContactCmd::nickname() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.nickName)
  return nickname_.GetNoArena();
}
inline void AddContactCmd::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.AddContactCmd.nickName)
}
#if LANG_CXX11
inline void AddContactCmd::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.AddContactCmd.nickName)
}
#endif
inline void AddContactCmd::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.AddContactCmd.nickName)
}
inline void AddContactCmd::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.AddContactCmd.nickName)
}
inline ::std::string* AddContactCmd::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:g.AddContactCmd.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContactCmd::release_nickname() {
  // @@protoc_insertion_point(field_release:g.AddContactCmd.nickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContactCmd::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:g.AddContactCmd.nickName)
}

// optional string headImgUrl = 4;
inline bool AddContactCmd::has_headimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AddContactCmd::set_has_headimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AddContactCmd::clear_has_headimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AddContactCmd::clear_headimgurl() {
  headimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimgurl();
}
inline const ::std::string& AddContactCmd::headimgurl() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.headImgUrl)
  return headimgurl_.GetNoArena();
}
inline void AddContactCmd::set_headimgurl(const ::std::string& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.AddContactCmd.headImgUrl)
}
#if LANG_CXX11
inline void AddContactCmd::set_headimgurl(::std::string&& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.AddContactCmd.headImgUrl)
}
#endif
inline void AddContactCmd::set_headimgurl(const char* value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.AddContactCmd.headImgUrl)
}
inline void AddContactCmd::set_headimgurl(const char* value, size_t size) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.AddContactCmd.headImgUrl)
}
inline ::std::string* AddContactCmd::mutable_headimgurl() {
  set_has_headimgurl();
  // @@protoc_insertion_point(field_mutable:g.AddContactCmd.headImgUrl)
  return headimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContactCmd::release_headimgurl() {
  // @@protoc_insertion_point(field_release:g.AddContactCmd.headImgUrl)
  clear_has_headimgurl();
  return headimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContactCmd::set_allocated_headimgurl(::std::string* headimgurl) {
  if (headimgurl != NULL) {
    set_has_headimgurl();
  } else {
    clear_has_headimgurl();
  }
  headimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimgurl);
  // @@protoc_insertion_point(field_set_allocated:g.AddContactCmd.headImgUrl)
}

// -------------------------------------------------------------------

// DelContactCmd

// optional string userName = 1;
inline bool DelContactCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DelContactCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DelContactCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DelContactCmd::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& DelContactCmd::username() const {
  // @@protoc_insertion_point(field_get:g.DelContactCmd.userName)
  return username_.GetNoArena();
}
inline void DelContactCmd::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.DelContactCmd.userName)
}
#if LANG_CXX11
inline void DelContactCmd::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.DelContactCmd.userName)
}
#endif
inline void DelContactCmd::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.DelContactCmd.userName)
}
inline void DelContactCmd::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.DelContactCmd.userName)
}
inline ::std::string* DelContactCmd::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.DelContactCmd.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelContactCmd::release_username() {
  // @@protoc_insertion_point(field_release:g.DelContactCmd.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelContactCmd::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.DelContactCmd.userName)
}

// -------------------------------------------------------------------

// UpdateAccountCmd

// optional string userName = 1;
inline bool UpdateAccountCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateAccountCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateAccountCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateAccountCmd::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& UpdateAccountCmd::username() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.userName)
  return username_.GetNoArena();
}
inline void UpdateAccountCmd::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.userName)
}
#if LANG_CXX11
inline void UpdateAccountCmd::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.userName)
}
#endif
inline void UpdateAccountCmd::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.userName)
}
inline void UpdateAccountCmd::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.userName)
}
inline ::std::string* UpdateAccountCmd::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAccountCmd::release_username() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAccountCmd::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.userName)
}

// optional string nickName = 2;
inline bool UpdateAccountCmd::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateAccountCmd::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateAccountCmd::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateAccountCmd::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& UpdateAccountCmd::nickname() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.nickName)
  return nickname_.GetNoArena();
}
inline void UpdateAccountCmd::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.nickName)
}
#if LANG_CXX11
inline void UpdateAccountCmd::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.nickName)
}
#endif
inline void UpdateAccountCmd::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.nickName)
}
inline void UpdateAccountCmd::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.nickName)
}
inline ::std::string* UpdateAccountCmd::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAccountCmd::release_nickname() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.nickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAccountCmd::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.nickName)
}

// optional string headImgUrl = 3;
inline bool UpdateAccountCmd::has_headimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateAccountCmd::set_has_headimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateAccountCmd::clear_has_headimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateAccountCmd::clear_headimgurl() {
  headimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimgurl();
}
inline const ::std::string& UpdateAccountCmd::headimgurl() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.headImgUrl)
  return headimgurl_.GetNoArena();
}
inline void UpdateAccountCmd::set_headimgurl(const ::std::string& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.headImgUrl)
}
#if LANG_CXX11
inline void UpdateAccountCmd::set_headimgurl(::std::string&& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.headImgUrl)
}
#endif
inline void UpdateAccountCmd::set_headimgurl(const char* value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.headImgUrl)
}
inline void UpdateAccountCmd::set_headimgurl(const char* value, size_t size) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.headImgUrl)
}
inline ::std::string* UpdateAccountCmd::mutable_headimgurl() {
  set_has_headimgurl();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.headImgUrl)
  return headimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAccountCmd::release_headimgurl() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.headImgUrl)
  clear_has_headimgurl();
  return headimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAccountCmd::set_allocated_headimgurl(::std::string* headimgurl) {
  if (headimgurl != NULL) {
    set_has_headimgurl();
  } else {
    clear_has_headimgurl();
  }
  headimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimgurl);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.headImgUrl)
}

// optional string qq = 4;
inline bool UpdateAccountCmd::has_qq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UpdateAccountCmd::set_has_qq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UpdateAccountCmd::clear_has_qq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UpdateAccountCmd::clear_qq() {
  qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qq();
}
inline const ::std::string& UpdateAccountCmd::qq() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.qq)
  return qq_.GetNoArena();
}
inline void UpdateAccountCmd::set_qq(const ::std::string& value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.qq)
}
#if LANG_CXX11
inline void UpdateAccountCmd::set_qq(::std::string&& value) {
  set_has_qq();
  qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.qq)
}
#endif
inline void UpdateAccountCmd::set_qq(const char* value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.qq)
}
inline void UpdateAccountCmd::set_qq(const char* value, size_t size) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.qq)
}
inline ::std::string* UpdateAccountCmd::mutable_qq() {
  set_has_qq();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.qq)
  return qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAccountCmd::release_qq() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.qq)
  clear_has_qq();
  return qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAccountCmd::set_allocated_qq(::std::string* qq) {
  if (qq != NULL) {
    set_has_qq();
  } else {
    clear_has_qq();
  }
  qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qq);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.qq)
}

// optional string email = 5;
inline bool UpdateAccountCmd::has_email() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void UpdateAccountCmd::set_has_email() {
  _has_bits_[0] |= 0x00000010u;
}
inline void UpdateAccountCmd::clear_has_email() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void UpdateAccountCmd::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
inline const ::std::string& UpdateAccountCmd::email() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.email)
  return email_.GetNoArena();
}
inline void UpdateAccountCmd::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.email)
}
#if LANG_CXX11
inline void UpdateAccountCmd::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.email)
}
#endif
inline void UpdateAccountCmd::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.email)
}
inline void UpdateAccountCmd::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.email)
}
inline ::std::string* UpdateAccountCmd::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateAccountCmd::release_email() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateAccountCmd::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.email)
}

// -------------------------------------------------------------------

// InitReq

// optional .g.BaseReq baseReq = 1;
inline bool InitReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& InitReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.InitReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* InitReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.InitReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* InitReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.InitReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void InitReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.InitReq.baseReq)
}

// optional bytes syncKey = 2;
inline bool InitReq::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitReq::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitReq::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitReq::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
inline const ::std::string& InitReq::synckey() const {
  // @@protoc_insertion_point(field_get:g.InitReq.syncKey)
  return synckey_.GetNoArena();
}
inline void InitReq::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.InitReq.syncKey)
}
#if LANG_CXX11
inline void InitReq::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.InitReq.syncKey)
}
#endif
inline void InitReq::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.InitReq.syncKey)
}
inline void InitReq::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.InitReq.syncKey)
}
inline ::std::string* InitReq::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.InitReq.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitReq::release_synckey() {
  // @@protoc_insertion_point(field_release:g.InitReq.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitReq::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.InitReq.syncKey)
}

// -------------------------------------------------------------------

// InitResp

// optional .g.BaseResp baseResp = 1;
inline bool InitResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InitResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InitResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InitResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& InitResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.InitResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* InitResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.InitResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* InitResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.InitResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void InitResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.InitResp.baseResp)
}

// optional bytes syncKey = 2;
inline bool InitResp::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InitResp::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InitResp::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InitResp::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
inline const ::std::string& InitResp::synckey() const {
  // @@protoc_insertion_point(field_get:g.InitResp.syncKey)
  return synckey_.GetNoArena();
}
inline void InitResp::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.InitResp.syncKey)
}
#if LANG_CXX11
inline void InitResp::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.InitResp.syncKey)
}
#endif
inline void InitResp::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.InitResp.syncKey)
}
inline void InitResp::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.InitResp.syncKey)
}
inline ::std::string* InitResp::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.InitResp.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InitResp::release_synckey() {
  // @@protoc_insertion_point(field_release:g.InitResp.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InitResp::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.InitResp.syncKey)
}

// optional int32 initedPercent = 3;
inline bool InitResp::has_initedpercent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InitResp::set_has_initedpercent() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InitResp::clear_has_initedpercent() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InitResp::clear_initedpercent() {
  initedpercent_ = 0;
  clear_has_initedpercent();
}
inline ::google::protobuf::int32 InitResp::initedpercent() const {
  // @@protoc_insertion_point(field_get:g.InitResp.initedPercent)
  return initedpercent_;
}
inline void InitResp::set_initedpercent(::google::protobuf::int32 value) {
  set_has_initedpercent();
  initedpercent_ = value;
  // @@protoc_insertion_point(field_set:g.InitResp.initedPercent)
}

// optional .g.UpdateAccountCmd updateAccountCmd = 4;
inline bool InitResp::has_updateaccountcmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InitResp::set_has_updateaccountcmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InitResp::clear_has_updateaccountcmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InitResp::clear_updateaccountcmd() {
  if (updateaccountcmd_ != NULL) updateaccountcmd_->::g::UpdateAccountCmd::Clear();
  clear_has_updateaccountcmd();
}
inline const ::g::UpdateAccountCmd& InitResp::updateaccountcmd() const {
  // @@protoc_insertion_point(field_get:g.InitResp.updateAccountCmd)
  return updateaccountcmd_ != NULL ? *updateaccountcmd_
                         : *::g::UpdateAccountCmd::internal_default_instance();
}
inline ::g::UpdateAccountCmd* InitResp::mutable_updateaccountcmd() {
  set_has_updateaccountcmd();
  if (updateaccountcmd_ == NULL) {
    updateaccountcmd_ = new ::g::UpdateAccountCmd;
  }
  // @@protoc_insertion_point(field_mutable:g.InitResp.updateAccountCmd)
  return updateaccountcmd_;
}
inline ::g::UpdateAccountCmd* InitResp::release_updateaccountcmd() {
  // @@protoc_insertion_point(field_release:g.InitResp.updateAccountCmd)
  clear_has_updateaccountcmd();
  ::g::UpdateAccountCmd* temp = updateaccountcmd_;
  updateaccountcmd_ = NULL;
  return temp;
}
inline void InitResp::set_allocated_updateaccountcmd(::g::UpdateAccountCmd* updateaccountcmd) {
  delete updateaccountcmd_;
  updateaccountcmd_ = updateaccountcmd;
  if (updateaccountcmd) {
    set_has_updateaccountcmd();
  } else {
    clear_has_updateaccountcmd();
  }
  // @@protoc_insertion_point(field_set_allocated:g.InitResp.updateAccountCmd)
}

// repeated .g.AddContactCmd addContactCmds = 5;
inline int InitResp::addcontactcmds_size() const {
  return addcontactcmds_.size();
}
inline void InitResp::clear_addcontactcmds() {
  addcontactcmds_.Clear();
}
inline const ::g::AddContactCmd& InitResp::addcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.InitResp.addContactCmds)
  return addcontactcmds_.Get(index);
}
inline ::g::AddContactCmd* InitResp::mutable_addcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.InitResp.addContactCmds)
  return addcontactcmds_.Mutable(index);
}
inline ::g::AddContactCmd* InitResp::add_addcontactcmds() {
  // @@protoc_insertion_point(field_add:g.InitResp.addContactCmds)
  return addcontactcmds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >*
InitResp::mutable_addcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.InitResp.addContactCmds)
  return &addcontactcmds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >&
InitResp::addcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.InitResp.addContactCmds)
  return addcontactcmds_;
}

// repeated .g.DelContactCmd delContactCmds = 6;
inline int InitResp::delcontactcmds_size() const {
  return delcontactcmds_.size();
}
inline void InitResp::clear_delcontactcmds() {
  delcontactcmds_.Clear();
}
inline const ::g::DelContactCmd& InitResp::delcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.InitResp.delContactCmds)
  return delcontactcmds_.Get(index);
}
inline ::g::DelContactCmd* InitResp::mutable_delcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.InitResp.delContactCmds)
  return delcontactcmds_.Mutable(index);
}
inline ::g::DelContactCmd* InitResp::add_delcontactcmds() {
  // @@protoc_insertion_point(field_add:g.InitResp.delContactCmds)
  return delcontactcmds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >*
InitResp::mutable_delcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.InitResp.delContactCmds)
  return &delcontactcmds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >&
InitResp::delcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.InitResp.delContactCmds)
  return delcontactcmds_;
}

// repeated .g.UpdateAccountCmd updateContactCmds = 7;
inline int InitResp::updatecontactcmds_size() const {
  return updatecontactcmds_.size();
}
inline void InitResp::clear_updatecontactcmds() {
  updatecontactcmds_.Clear();
}
inline const ::g::UpdateAccountCmd& InitResp::updatecontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.InitResp.updateContactCmds)
  return updatecontactcmds_.Get(index);
}
inline ::g::UpdateAccountCmd* InitResp::mutable_updatecontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.InitResp.updateContactCmds)
  return updatecontactcmds_.Mutable(index);
}
inline ::g::UpdateAccountCmd* InitResp::add_updatecontactcmds() {
  // @@protoc_insertion_point(field_add:g.InitResp.updateContactCmds)
  return updatecontactcmds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >*
InitResp::mutable_updatecontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.InitResp.updateContactCmds)
  return &updatecontactcmds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >&
InitResp::updatecontactcmds() const {
  // @@protoc_insertion_point(field_list:g.InitResp.updateContactCmds)
  return updatecontactcmds_;
}

// -------------------------------------------------------------------

// SyncReq

// optional .g.BaseReq baseReq = 1;
inline bool SyncReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& SyncReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SyncReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* SyncReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SyncReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* SyncReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SyncReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void SyncReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SyncReq.baseReq)
}

// optional bytes syncKey = 2;
inline bool SyncReq::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncReq::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncReq::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncReq::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
inline const ::std::string& SyncReq::synckey() const {
  // @@protoc_insertion_point(field_get:g.SyncReq.syncKey)
  return synckey_.GetNoArena();
}
inline void SyncReq::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SyncReq.syncKey)
}
#if LANG_CXX11
inline void SyncReq::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SyncReq.syncKey)
}
#endif
inline void SyncReq::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SyncReq.syncKey)
}
inline void SyncReq::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SyncReq.syncKey)
}
inline ::std::string* SyncReq::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.SyncReq.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncReq::release_synckey() {
  // @@protoc_insertion_point(field_release:g.SyncReq.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncReq::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.SyncReq.syncKey)
}

// -------------------------------------------------------------------

// SyncResp

// optional .g.BaseResp baseResp = 1;
inline bool SyncResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SyncResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SyncResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SyncResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& SyncResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SyncResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* SyncResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SyncResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* SyncResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SyncResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void SyncResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SyncResp.baseResp)
}

// optional bytes syncKey = 2;
inline bool SyncResp::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SyncResp::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SyncResp::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SyncResp::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
inline const ::std::string& SyncResp::synckey() const {
  // @@protoc_insertion_point(field_get:g.SyncResp.syncKey)
  return synckey_.GetNoArena();
}
inline void SyncResp::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SyncResp.syncKey)
}
#if LANG_CXX11
inline void SyncResp::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SyncResp.syncKey)
}
#endif
inline void SyncResp::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SyncResp.syncKey)
}
inline void SyncResp::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SyncResp.syncKey)
}
inline ::std::string* SyncResp::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.SyncResp.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SyncResp::release_synckey() {
  // @@protoc_insertion_point(field_release:g.SyncResp.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SyncResp::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.SyncResp.syncKey)
}

// optional .g.UpdateAccountCmd updateAccountCmd = 3;
inline bool SyncResp::has_updateaccountcmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SyncResp::set_has_updateaccountcmd() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SyncResp::clear_has_updateaccountcmd() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SyncResp::clear_updateaccountcmd() {
  if (updateaccountcmd_ != NULL) updateaccountcmd_->::g::UpdateAccountCmd::Clear();
  clear_has_updateaccountcmd();
}
inline const ::g::UpdateAccountCmd& SyncResp::updateaccountcmd() const {
  // @@protoc_insertion_point(field_get:g.SyncResp.updateAccountCmd)
  return updateaccountcmd_ != NULL ? *updateaccountcmd_
                         : *::g::UpdateAccountCmd::internal_default_instance();
}
inline ::g::UpdateAccountCmd* SyncResp::mutable_updateaccountcmd() {
  set_has_updateaccountcmd();
  if (updateaccountcmd_ == NULL) {
    updateaccountcmd_ = new ::g::UpdateAccountCmd;
  }
  // @@protoc_insertion_point(field_mutable:g.SyncResp.updateAccountCmd)
  return updateaccountcmd_;
}
inline ::g::UpdateAccountCmd* SyncResp::release_updateaccountcmd() {
  // @@protoc_insertion_point(field_release:g.SyncResp.updateAccountCmd)
  clear_has_updateaccountcmd();
  ::g::UpdateAccountCmd* temp = updateaccountcmd_;
  updateaccountcmd_ = NULL;
  return temp;
}
inline void SyncResp::set_allocated_updateaccountcmd(::g::UpdateAccountCmd* updateaccountcmd) {
  delete updateaccountcmd_;
  updateaccountcmd_ = updateaccountcmd;
  if (updateaccountcmd) {
    set_has_updateaccountcmd();
  } else {
    clear_has_updateaccountcmd();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SyncResp.updateAccountCmd)
}

// repeated .g.AddContactCmd addContactCmds = 4;
inline int SyncResp::addcontactcmds_size() const {
  return addcontactcmds_.size();
}
inline void SyncResp::clear_addcontactcmds() {
  addcontactcmds_.Clear();
}
inline const ::g::AddContactCmd& SyncResp::addcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.SyncResp.addContactCmds)
  return addcontactcmds_.Get(index);
}
inline ::g::AddContactCmd* SyncResp::mutable_addcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.SyncResp.addContactCmds)
  return addcontactcmds_.Mutable(index);
}
inline ::g::AddContactCmd* SyncResp::add_addcontactcmds() {
  // @@protoc_insertion_point(field_add:g.SyncResp.addContactCmds)
  return addcontactcmds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >*
SyncResp::mutable_addcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.SyncResp.addContactCmds)
  return &addcontactcmds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >&
SyncResp::addcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.SyncResp.addContactCmds)
  return addcontactcmds_;
}

// repeated .g.DelContactCmd delContactCmds = 5;
inline int SyncResp::delcontactcmds_size() const {
  return delcontactcmds_.size();
}
inline void SyncResp::clear_delcontactcmds() {
  delcontactcmds_.Clear();
}
inline const ::g::DelContactCmd& SyncResp::delcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.SyncResp.delContactCmds)
  return delcontactcmds_.Get(index);
}
inline ::g::DelContactCmd* SyncResp::mutable_delcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.SyncResp.delContactCmds)
  return delcontactcmds_.Mutable(index);
}
inline ::g::DelContactCmd* SyncResp::add_delcontactcmds() {
  // @@protoc_insertion_point(field_add:g.SyncResp.delContactCmds)
  return delcontactcmds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >*
SyncResp::mutable_delcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.SyncResp.delContactCmds)
  return &delcontactcmds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >&
SyncResp::delcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.SyncResp.delContactCmds)
  return delcontactcmds_;
}

// repeated .g.UpdateAccountCmd updateContactCmds = 6;
inline int SyncResp::updatecontactcmds_size() const {
  return updatecontactcmds_.size();
}
inline void SyncResp::clear_updatecontactcmds() {
  updatecontactcmds_.Clear();
}
inline const ::g::UpdateAccountCmd& SyncResp::updatecontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.SyncResp.updateContactCmds)
  return updatecontactcmds_.Get(index);
}
inline ::g::UpdateAccountCmd* SyncResp::mutable_updatecontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.SyncResp.updateContactCmds)
  return updatecontactcmds_.Mutable(index);
}
inline ::g::UpdateAccountCmd* SyncResp::add_updatecontactcmds() {
  // @@protoc_insertion_point(field_add:g.SyncResp.updateContactCmds)
  return updatecontactcmds_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >*
SyncResp::mutable_updatecontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.SyncResp.updateContactCmds)
  return &updatecontactcmds_;
}
inline const ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >&
SyncResp::updatecontactcmds() const {
  // @@protoc_insertion_point(field_list:g.SyncResp.updateContactCmds)
  return updatecontactcmds_;
}

// -------------------------------------------------------------------

// SendTextMsgReq

// optional .g.BaseReq baseReq = 1;
inline bool SendTextMsgReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendTextMsgReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendTextMsgReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendTextMsgReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& SendTextMsgReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* SendTextMsgReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* SendTextMsgReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void SendTextMsgReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.baseReq)
}

// optional int64 clientId = 2;
inline bool SendTextMsgReq::has_clientid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendTextMsgReq::set_has_clientid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendTextMsgReq::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendTextMsgReq::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::int64 SendTextMsgReq::clientid() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.clientId)
  return clientid_;
}
inline void SendTextMsgReq::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.clientId)
}

// optional string fromUserName = 3;
inline bool SendTextMsgReq::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendTextMsgReq::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendTextMsgReq::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendTextMsgReq::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
inline const ::std::string& SendTextMsgReq::fromusername() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.fromUserName)
  return fromusername_.GetNoArena();
}
inline void SendTextMsgReq::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.fromUserName)
}
#if LANG_CXX11
inline void SendTextMsgReq::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendTextMsgReq.fromUserName)
}
#endif
inline void SendTextMsgReq::set_fromusername(const char* value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendTextMsgReq.fromUserName)
}
inline void SendTextMsgReq::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendTextMsgReq.fromUserName)
}
inline ::std::string* SendTextMsgReq::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.fromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMsgReq::release_fromusername() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.fromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMsgReq::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.fromUserName)
}

// optional string toUserName = 4;
inline bool SendTextMsgReq::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendTextMsgReq::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendTextMsgReq::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendTextMsgReq::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
inline const ::std::string& SendTextMsgReq::tousername() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.toUserName)
  return tousername_.GetNoArena();
}
inline void SendTextMsgReq::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.toUserName)
}
#if LANG_CXX11
inline void SendTextMsgReq::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendTextMsgReq.toUserName)
}
#endif
inline void SendTextMsgReq::set_tousername(const char* value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendTextMsgReq.toUserName)
}
inline void SendTextMsgReq::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendTextMsgReq.toUserName)
}
inline ::std::string* SendTextMsgReq::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.toUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMsgReq::release_tousername() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.toUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMsgReq::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.toUserName)
}

// optional string text = 5;
inline bool SendTextMsgReq::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendTextMsgReq::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendTextMsgReq::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendTextMsgReq::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& SendTextMsgReq::text() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.text)
  return text_.GetNoArena();
}
inline void SendTextMsgReq::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.text)
}
#if LANG_CXX11
inline void SendTextMsgReq::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendTextMsgReq.text)
}
#endif
inline void SendTextMsgReq::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendTextMsgReq.text)
}
inline void SendTextMsgReq::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendTextMsgReq.text)
}
inline ::std::string* SendTextMsgReq::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMsgReq::release_text() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMsgReq::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.text)
}

// -------------------------------------------------------------------

// SendTextMsgResp

// optional .g.BaseResp baseResp = 1;
inline bool SendTextMsgResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendTextMsgResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendTextMsgResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendTextMsgResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& SendTextMsgResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* SendTextMsgResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* SendTextMsgResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void SendTextMsgResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgResp.baseResp)
}

// optional int64 serverId = 2;
inline bool SendTextMsgResp::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendTextMsgResp::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendTextMsgResp::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendTextMsgResp::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 SendTextMsgResp::serverid() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgResp.serverId)
  return serverid_;
}
inline void SendTextMsgResp::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.SendTextMsgResp.serverId)
}

// -------------------------------------------------------------------

// SendVoiceMsgReq

// optional .g.BaseReq baseReq = 1;
inline bool SendVoiceMsgReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendVoiceMsgReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendVoiceMsgReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendVoiceMsgReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& SendVoiceMsgReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* SendVoiceMsgReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SendVoiceMsgReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* SendVoiceMsgReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SendVoiceMsgReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void SendVoiceMsgReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendVoiceMsgReq.baseReq)
}

// optional int64 clientId = 2;
inline bool SendVoiceMsgReq::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendVoiceMsgReq::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendVoiceMsgReq::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendVoiceMsgReq::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::int64 SendVoiceMsgReq::clientid() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.clientId)
  return clientid_;
}
inline void SendVoiceMsgReq::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.clientId)
}

// optional int32 totalLen = 3;
inline bool SendVoiceMsgReq::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendVoiceMsgReq::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendVoiceMsgReq::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendVoiceMsgReq::clear_totallen() {
  totallen_ = 0;
  clear_has_totallen();
}
inline ::google::protobuf::int32 SendVoiceMsgReq::totallen() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.totalLen)
  return totallen_;
}
inline void SendVoiceMsgReq::set_totallen(::google::protobuf::int32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.totalLen)
}

// optional int32 dataOffset = 4;
inline bool SendVoiceMsgReq::has_dataoffset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendVoiceMsgReq::set_has_dataoffset() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendVoiceMsgReq::clear_has_dataoffset() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendVoiceMsgReq::clear_dataoffset() {
  dataoffset_ = 0;
  clear_has_dataoffset();
}
inline ::google::protobuf::int32 SendVoiceMsgReq::dataoffset() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.dataOffset)
  return dataoffset_;
}
inline void SendVoiceMsgReq::set_dataoffset(::google::protobuf::int32 value) {
  set_has_dataoffset();
  dataoffset_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.dataOffset)
}

// optional bytes data = 5;
inline bool SendVoiceMsgReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendVoiceMsgReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendVoiceMsgReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendVoiceMsgReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& SendVoiceMsgReq::data() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.data)
  return data_.GetNoArena();
}
inline void SendVoiceMsgReq::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.data)
}
#if LANG_CXX11
inline void SendVoiceMsgReq::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendVoiceMsgReq.data)
}
#endif
inline void SendVoiceMsgReq::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendVoiceMsgReq.data)
}
inline void SendVoiceMsgReq::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendVoiceMsgReq.data)
}
inline ::std::string* SendVoiceMsgReq::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:g.SendVoiceMsgReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendVoiceMsgReq::release_data() {
  // @@protoc_insertion_point(field_release:g.SendVoiceMsgReq.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendVoiceMsgReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:g.SendVoiceMsgReq.data)
}

// -------------------------------------------------------------------

// SendVoiceMsgResp

// optional .g.BaseResp baseResp = 1;
inline bool SendVoiceMsgResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendVoiceMsgResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendVoiceMsgResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendVoiceMsgResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& SendVoiceMsgResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* SendVoiceMsgResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SendVoiceMsgResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* SendVoiceMsgResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SendVoiceMsgResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void SendVoiceMsgResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendVoiceMsgResp.baseResp)
}

// optional int64 serverId = 2;
inline bool SendVoiceMsgResp::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendVoiceMsgResp::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendVoiceMsgResp::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendVoiceMsgResp::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 SendVoiceMsgResp::serverid() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgResp.serverId)
  return serverid_;
}
inline void SendVoiceMsgResp::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgResp.serverId)
}

// -------------------------------------------------------------------

// SendImageMsgReq

// optional .g.BaseReq baseReq = 1;
inline bool SendImageMsgReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SendImageMsgReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SendImageMsgReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SendImageMsgReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
inline const ::g::BaseReq& SendImageMsgReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
inline ::g::BaseReq* SendImageMsgReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgReq.baseReq)
  return basereq_;
}
inline ::g::BaseReq* SendImageMsgReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
inline void SendImageMsgReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgReq.baseReq)
}

// optional int64 clientId = 2;
inline bool SendImageMsgReq::has_clientid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SendImageMsgReq::set_has_clientid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SendImageMsgReq::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SendImageMsgReq::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
inline ::google::protobuf::int64 SendImageMsgReq::clientid() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.clientId)
  return clientid_;
}
inline void SendImageMsgReq::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.clientId)
}

// optional int32 totalLen = 3;
inline bool SendImageMsgReq::has_totallen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SendImageMsgReq::set_has_totallen() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SendImageMsgReq::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SendImageMsgReq::clear_totallen() {
  totallen_ = 0;
  clear_has_totallen();
}
inline ::google::protobuf::int32 SendImageMsgReq::totallen() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.totalLen)
  return totallen_;
}
inline void SendImageMsgReq::set_totallen(::google::protobuf::int32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.totalLen)
}

// optional int32 dataOffset = 4;
inline bool SendImageMsgReq::has_dataoffset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SendImageMsgReq::set_has_dataoffset() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SendImageMsgReq::clear_has_dataoffset() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SendImageMsgReq::clear_dataoffset() {
  dataoffset_ = 0;
  clear_has_dataoffset();
}
inline ::google::protobuf::int32 SendImageMsgReq::dataoffset() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.dataOffset)
  return dataoffset_;
}
inline void SendImageMsgReq::set_dataoffset(::google::protobuf::int32 value) {
  set_has_dataoffset();
  dataoffset_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.dataOffset)
}

// optional bytes data = 5;
inline bool SendImageMsgReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendImageMsgReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendImageMsgReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendImageMsgReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
inline const ::std::string& SendImageMsgReq::data() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.data)
  return data_.GetNoArena();
}
inline void SendImageMsgReq::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.data)
}
#if LANG_CXX11
inline void SendImageMsgReq::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendImageMsgReq.data)
}
#endif
inline void SendImageMsgReq::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendImageMsgReq.data)
}
inline void SendImageMsgReq::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendImageMsgReq.data)
}
inline ::std::string* SendImageMsgReq::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendImageMsgReq::release_data() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgReq.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendImageMsgReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgReq.data)
}

// optional string imageFileName = 6;
inline bool SendImageMsgReq::has_imagefilename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendImageMsgReq::set_has_imagefilename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendImageMsgReq::clear_has_imagefilename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendImageMsgReq::clear_imagefilename() {
  imagefilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imagefilename();
}
inline const ::std::string& SendImageMsgReq::imagefilename() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.imageFileName)
  return imagefilename_.GetNoArena();
}
inline void SendImageMsgReq::set_imagefilename(const ::std::string& value) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.imageFileName)
}
#if LANG_CXX11
inline void SendImageMsgReq::set_imagefilename(::std::string&& value) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendImageMsgReq.imageFileName)
}
#endif
inline void SendImageMsgReq::set_imagefilename(const char* value) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendImageMsgReq.imageFileName)
}
inline void SendImageMsgReq::set_imagefilename(const char* value, size_t size) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendImageMsgReq.imageFileName)
}
inline ::std::string* SendImageMsgReq::mutable_imagefilename() {
  set_has_imagefilename();
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgReq.imageFileName)
  return imagefilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendImageMsgReq::release_imagefilename() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgReq.imageFileName)
  clear_has_imagefilename();
  return imagefilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendImageMsgReq::set_allocated_imagefilename(::std::string* imagefilename) {
  if (imagefilename != NULL) {
    set_has_imagefilename();
  } else {
    clear_has_imagefilename();
  }
  imagefilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagefilename);
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgReq.imageFileName)
}

// -------------------------------------------------------------------

// SendImageMsgResp

// optional .g.BaseResp baseResp = 1;
inline bool SendImageMsgResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendImageMsgResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendImageMsgResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendImageMsgResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
inline const ::g::BaseResp& SendImageMsgResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
inline ::g::BaseResp* SendImageMsgResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgResp.baseResp)
  return baseresp_;
}
inline ::g::BaseResp* SendImageMsgResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
inline void SendImageMsgResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgResp.baseResp)
}

// optional int64 serverId = 2;
inline bool SendImageMsgResp::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SendImageMsgResp::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SendImageMsgResp::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SendImageMsgResp::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
inline ::google::protobuf::int64 SendImageMsgResp::serverid() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgResp.serverId)
  return serverid_;
}
inline void SendImageMsgResp::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgResp.serverId)
}

// -------------------------------------------------------------------

// NeedSyncPush

// optional bytes syncKey = 1;
inline bool NeedSyncPush::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NeedSyncPush::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NeedSyncPush::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NeedSyncPush::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
inline const ::std::string& NeedSyncPush::synckey() const {
  // @@protoc_insertion_point(field_get:g.NeedSyncPush.syncKey)
  return synckey_.GetNoArena();
}
inline void NeedSyncPush::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.NeedSyncPush.syncKey)
}
#if LANG_CXX11
inline void NeedSyncPush::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.NeedSyncPush.syncKey)
}
#endif
inline void NeedSyncPush::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.NeedSyncPush.syncKey)
}
inline void NeedSyncPush::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.NeedSyncPush.syncKey)
}
inline ::std::string* NeedSyncPush::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.NeedSyncPush.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NeedSyncPush::release_synckey() {
  // @@protoc_insertion_point(field_release:g.NeedSyncPush.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NeedSyncPush::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.NeedSyncPush.syncKey)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace g

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::g::EReqCmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::g::EReqCmdType>() {
  return ::g::EReqCmdType_descriptor();
}
template <> struct is_proto_enum< ::g::ERespCmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::g::ERespCmdType>() {
  return ::g::ERespCmdType_descriptor();
}
template <> struct is_proto_enum< ::g::EPushCmdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::g::EPushCmdType>() {
  return ::g::EPushCmdType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_g_2eproto__INCLUDED
