// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: g.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "g.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace g {
class BaseReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BaseReq> {
} _BaseReq_default_instance_;
class BaseRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BaseResp> {
} _BaseResp_default_instance_;
class RegisterReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterReq> {
} _RegisterReq_default_instance_;
class RegisterRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterResp> {
} _RegisterResp_default_instance_;
class LoginReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReq> {
} _LoginReq_default_instance_;
class LoginRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginResp> {
} _LoginResp_default_instance_;
class LogoutReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutReq> {
} _LogoutReq_default_instance_;
class LogoutRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LogoutResp> {
} _LogoutResp_default_instance_;
class HeartBeatReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeartBeatReq> {
} _HeartBeatReq_default_instance_;
class HeartBeatRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HeartBeatResp> {
} _HeartBeatResp_default_instance_;
class AddContactCmdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddContactCmd> {
} _AddContactCmd_default_instance_;
class DelContactCmdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DelContactCmd> {
} _DelContactCmd_default_instance_;
class UpdateAccountCmdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateAccountCmd> {
} _UpdateAccountCmd_default_instance_;
class InitReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InitReq> {
} _InitReq_default_instance_;
class InitRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InitResp> {
} _InitResp_default_instance_;
class SyncReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SyncReq> {
} _SyncReq_default_instance_;
class SyncRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SyncResp> {
} _SyncResp_default_instance_;
class SendTextMsgReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendTextMsgReq> {
} _SendTextMsgReq_default_instance_;
class SendTextMsgRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendTextMsgResp> {
} _SendTextMsgResp_default_instance_;
class SendVoiceMsgReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendVoiceMsgReq> {
} _SendVoiceMsgReq_default_instance_;
class SendVoiceMsgRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendVoiceMsgResp> {
} _SendVoiceMsgResp_default_instance_;
class SendImageMsgReqDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendImageMsgReq> {
} _SendImageMsgReq_default_instance_;
class SendImageMsgRespDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SendImageMsgResp> {
} _SendImageMsgResp_default_instance_;
class NeedSyncPushDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NeedSyncPush> {
} _NeedSyncPush_default_instance_;

namespace protobuf_g_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseReq, deviceid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, errcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BaseResp, errmsg_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, pass_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, qq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReq, email_),
  4,
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterResp, baseresp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReq, pass_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResp, baseresp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutReq, basereq_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogoutResp, baseresp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatReq, basereq_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeartBeatResp, baseresp_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddContactCmd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddContactCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddContactCmd, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddContactCmd, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddContactCmd, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddContactCmd, headimgurl_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelContactCmd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelContactCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DelContactCmd, username_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, headimgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, qq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateAccountCmd, email_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitReq, synckey_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, baseresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, synckey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, initedpercent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, updateaccountcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, addcontactcmds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, delcontactcmds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InitResp, updatecontactcmds_),
  1,
  0,
  3,
  2,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncReq, synckey_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, baseresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, synckey_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, updateaccountcmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, addcontactcmds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, delcontactcmds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SyncResp, updatecontactcmds_),
  1,
  0,
  2,
  ~0u,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, fromusername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, tousername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgReq, text_),
  3,
  4,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgResp, baseresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendTextMsgResp, serverid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, totallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, dataoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgReq, data_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgResp, baseresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendVoiceMsgResp, serverid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, basereq_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, totallen_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, dataoffset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgReq, imagefilename_),
  2,
  3,
  4,
  5,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgResp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgResp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgResp, baseresp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendImageMsgResp, serverid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedSyncPush, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedSyncPush, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NeedSyncPush, synckey_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 5, sizeof(BaseReq)},
  { 6, 12, sizeof(BaseResp)},
  { 14, 23, sizeof(RegisterReq)},
  { 28, 33, sizeof(RegisterResp)},
  { 34, 41, sizeof(LoginReq)},
  { 44, 49, sizeof(LoginResp)},
  { 50, 55, sizeof(LogoutReq)},
  { 56, 61, sizeof(LogoutResp)},
  { 62, 67, sizeof(HeartBeatReq)},
  { 68, 73, sizeof(HeartBeatResp)},
  { 74, 82, sizeof(AddContactCmd)},
  { 86, 91, sizeof(DelContactCmd)},
  { 92, 101, sizeof(UpdateAccountCmd)},
  { 106, 112, sizeof(InitReq)},
  { 114, 125, sizeof(InitResp)},
  { 132, 138, sizeof(SyncReq)},
  { 140, 150, sizeof(SyncResp)},
  { 156, 165, sizeof(SendTextMsgReq)},
  { 170, 176, sizeof(SendTextMsgResp)},
  { 178, 187, sizeof(SendVoiceMsgReq)},
  { 192, 198, sizeof(SendVoiceMsgResp)},
  { 200, 210, sizeof(SendImageMsgReq)},
  { 216, 222, sizeof(SendImageMsgResp)},
  { 224, 229, sizeof(NeedSyncPush)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BaseResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LogoutResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartBeatReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HeartBeatResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddContactCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DelContactCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateAccountCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InitReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InitResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SyncResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendTextMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendTextMsgResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendVoiceMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendVoiceMsgResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendImageMsgReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SendImageMsgResp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NeedSyncPush_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "g.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

}  // namespace

void TableStruct::Shutdown() {
  _BaseReq_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _BaseResp_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RegisterReq_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RegisterResp_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LoginReq_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LoginResp_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _LogoutReq_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _LogoutResp_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _HeartBeatReq_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _HeartBeatResp_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _AddContactCmd_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _DelContactCmd_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _UpdateAccountCmd_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _InitReq_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _InitResp_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _SyncReq_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _SyncResp_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _SendTextMsgReq_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _SendTextMsgResp_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _SendVoiceMsgReq_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _SendVoiceMsgResp_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _SendImageMsgReq_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _SendImageMsgResp_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _NeedSyncPush_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _BaseReq_default_instance_.DefaultConstruct();
  _BaseResp_default_instance_.DefaultConstruct();
  _RegisterReq_default_instance_.DefaultConstruct();
  _RegisterResp_default_instance_.DefaultConstruct();
  _LoginReq_default_instance_.DefaultConstruct();
  _LoginResp_default_instance_.DefaultConstruct();
  _LogoutReq_default_instance_.DefaultConstruct();
  _LogoutResp_default_instance_.DefaultConstruct();
  _HeartBeatReq_default_instance_.DefaultConstruct();
  _HeartBeatResp_default_instance_.DefaultConstruct();
  _AddContactCmd_default_instance_.DefaultConstruct();
  _DelContactCmd_default_instance_.DefaultConstruct();
  _UpdateAccountCmd_default_instance_.DefaultConstruct();
  _InitReq_default_instance_.DefaultConstruct();
  _InitResp_default_instance_.DefaultConstruct();
  _SyncReq_default_instance_.DefaultConstruct();
  _SyncResp_default_instance_.DefaultConstruct();
  _SendTextMsgReq_default_instance_.DefaultConstruct();
  _SendTextMsgResp_default_instance_.DefaultConstruct();
  _SendVoiceMsgReq_default_instance_.DefaultConstruct();
  _SendVoiceMsgResp_default_instance_.DefaultConstruct();
  _SendImageMsgReq_default_instance_.DefaultConstruct();
  _SendImageMsgResp_default_instance_.DefaultConstruct();
  _NeedSyncPush_default_instance_.DefaultConstruct();
  _RegisterReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _RegisterResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _LoginReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _LoginResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _LogoutReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _LogoutResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _HeartBeatReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _HeartBeatResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _InitReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _InitResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _InitResp_default_instance_.get_mutable()->updateaccountcmd_ = const_cast< ::g::UpdateAccountCmd*>(
      ::g::UpdateAccountCmd::internal_default_instance());
  _SyncReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _SyncResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _SyncResp_default_instance_.get_mutable()->updateaccountcmd_ = const_cast< ::g::UpdateAccountCmd*>(
      ::g::UpdateAccountCmd::internal_default_instance());
  _SendTextMsgReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _SendTextMsgResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _SendVoiceMsgReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _SendVoiceMsgResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
  _SendImageMsgReq_default_instance_.get_mutable()->basereq_ = const_cast< ::g::BaseReq*>(
      ::g::BaseReq::internal_default_instance());
  _SendImageMsgResp_default_instance_.get_mutable()->baseresp_ = const_cast< ::g::BaseResp*>(
      ::g::BaseResp::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\007g.proto\022\001g\"\033\n\007BaseReq\022\020\n\010deviceId\030\001 \001("
      "\t\"+\n\010BaseResp\022\017\n\007errCode\030\001 \001(\005\022\016\n\006errMsg"
      "\030\002 \001(\t\"e\n\013RegisterReq\022\033\n\007baseReq\030\001 \001(\0132\n"
      ".g.BaseReq\022\020\n\010userName\030\002 \001(\t\022\014\n\004pass\030\003 \001"
      "(\014\022\n\n\002qq\030\004 \001(\t\022\r\n\005email\030\005 \001(\t\"-\n\014Registe"
      "rResp\022\035\n\010baseResp\030\001 \001(\0132\013.g.BaseResp\"G\n\010"
      "LoginReq\022\033\n\007baseReq\030\001 \001(\0132\n.g.BaseReq\022\020\n"
      "\010userName\030\002 \001(\t\022\014\n\004pass\030\003 \001(\014\"*\n\tLoginRe"
      "sp\022\035\n\010baseResp\030\001 \001(\0132\013.g.BaseResp\"(\n\tLog"
      "outReq\022\033\n\007baseReq\030\001 \001(\0132\n.g.BaseReq\"+\n\nL"
      "ogoutResp\022\035\n\010baseResp\030\001 \001(\0132\013.g.BaseResp"
      "\"+\n\014HeartBeatReq\022\033\n\007baseReq\030\001 \001(\0132\n.g.Ba"
      "seReq\".\n\rHeartBeatResp\022\035\n\010baseResp\030\001 \001(\013"
      "2\013.g.BaseResp\"Y\n\rAddContactCmd\022\020\n\010server"
      "Id\030\001 \001(\003\022\020\n\010userName\030\002 \001(\t\022\020\n\010nickName\030\003"
      " \001(\t\022\022\n\nheadImgUrl\030\004 \001(\t\"!\n\rDelContactCm"
      "d\022\020\n\010userName\030\001 \001(\t\"e\n\020UpdateAccountCmd\022"
      "\020\n\010userName\030\001 \001(\t\022\020\n\010nickName\030\002 \001(\t\022\022\n\nh"
      "eadImgUrl\030\003 \001(\t\022\n\n\002qq\030\004 \001(\t\022\r\n\005email\030\005 \001"
      "(\t\"7\n\007InitReq\022\033\n\007baseReq\030\001 \001(\0132\n.g.BaseR"
      "eq\022\017\n\007syncKey\030\002 \001(\014\"\204\002\n\010InitResp\022\035\n\010base"
      "Resp\030\001 \001(\0132\013.g.BaseResp\022\017\n\007syncKey\030\002 \001(\014"
      "\022\025\n\rinitedPercent\030\003 \001(\005\022-\n\020updateAccount"
      "Cmd\030\004 \001(\0132\023.g.UpdateAccountCmd\022(\n\016addCon"
      "tactCmds\030\005 \003(\0132\020.g.AddContactCmd\022(\n\016delC"
      "ontactCmds\030\006 \003(\0132\020.g.DelContactCmd\022.\n\021up"
      "dateContactCmds\030\007 \003(\0132\023.g.UpdateAccountC"
      "md\"7\n\007SyncReq\022\033\n\007baseReq\030\001 \001(\0132\n.g.BaseR"
      "eq\022\017\n\007syncKey\030\002 \001(\014\"\355\001\n\010SyncResp\022\035\n\010base"
      "Resp\030\001 \001(\0132\013.g.BaseResp\022\017\n\007syncKey\030\002 \001(\014"
      "\022-\n\020updateAccountCmd\030\003 \001(\0132\023.g.UpdateAcc"
      "ountCmd\022(\n\016addContactCmds\030\004 \003(\0132\020.g.AddC"
      "ontactCmd\022(\n\016delContactCmds\030\005 \003(\0132\020.g.De"
      "lContactCmd\022.\n\021updateContactCmds\030\006 \003(\0132\023"
      ".g.UpdateAccountCmd\"w\n\016SendTextMsgReq\022\033\n"
      "\007baseReq\030\001 \001(\0132\n.g.BaseReq\022\020\n\010clientId\030\002"
      " \001(\003\022\024\n\014fromUserName\030\003 \001(\t\022\022\n\ntoUserName"
      "\030\004 \001(\t\022\014\n\004text\030\005 \001(\t\"B\n\017SendTextMsgResp\022"
      "\035\n\010baseResp\030\001 \001(\0132\013.g.BaseResp\022\020\n\010server"
      "Id\030\002 \001(\003\"t\n\017SendVoiceMsgReq\022\033\n\007baseReq\030\001"
      " \001(\0132\n.g.BaseReq\022\020\n\010clientId\030\002 \001(\003\022\020\n\010to"
      "talLen\030\003 \001(\005\022\022\n\ndataOffset\030\004 \001(\005\022\014\n\004data"
      "\030\005 \001(\014\"C\n\020SendVoiceMsgResp\022\035\n\010baseResp\030\001"
      " \001(\0132\013.g.BaseResp\022\020\n\010serverId\030\002 \001(\003\"\213\001\n\017"
      "SendImageMsgReq\022\033\n\007baseReq\030\001 \001(\0132\n.g.Bas"
      "eReq\022\020\n\010clientId\030\002 \001(\003\022\020\n\010totalLen\030\003 \001(\005"
      "\022\022\n\ndataOffset\030\004 \001(\005\022\014\n\004data\030\005 \001(\014\022\025\n\rim"
      "ageFileName\030\006 \001(\t\"C\n\020SendImageMsgResp\022\035\n"
      "\010baseResp\030\001 \001(\0132\013.g.BaseResp\022\020\n\010serverId"
      "\030\002 \001(\003\"\037\n\014NeedSyncPush\022\017\n\007syncKey\030\001 \001(\014*"
      "\331\001\n\013EReqCmdType\022\030\n\024EReqCmdType_register\020"
      "\001\022\025\n\021EReqCmdType_login\020\002\022\026\n\022EReqCmdType_"
      "logout\020\003\022\024\n\020EReqCmdType_init\020\004\022\024\n\020EReqCm"
      "dType_sync\020\005\022\033\n\027EReqCmdType_sendTextMsg\020"
      "\006\022\034\n\030EReqCmdType_sendVoiceMsg\020\007\022\032\n\026EReqC"
      "mdType_sendImgMsg\020\010*\352\001\n\014ERespCmdType\022\032\n\025"
      "ERespCmdType_register\020\221N\022\027\n\022ERespCmdType"
      "_login\020\222N\022\030\n\023ERespCmdType_logout\020\223N\022\026\n\021E"
      "RespCmdType_init\020\224N\022\026\n\021ERespCmdType_sync"
      "\020\225N\022\035\n\030ERespCmdType_sendTextMsg\020\226N\022\036\n\031ER"
      "espCmdType_sendVoiceMsg\020\227N\022\034\n\027ERespCmdTy"
      "pe_sendImgMsg\020\230N*+\n\014EPushCmdType\022\033\n\025EPus"
      "hCmdType_needSync\020\241\234\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2501);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "g.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_g_2eproto

const ::google::protobuf::EnumDescriptor* EReqCmdType_descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_enum_descriptors[0];
}
bool EReqCmdType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* ERespCmdType_descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_enum_descriptors[1];
}
bool ERespCmdType_IsValid(int value) {
  switch (value) {
    case 10001:
    case 10002:
    case 10003:
    case 10004:
    case 10005:
    case 10006:
    case 10007:
    case 10008:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EPushCmdType_descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_enum_descriptors[2];
}
bool EPushCmdType_IsValid(int value) {
  switch (value) {
    case 20001:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseReq::kDeviceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseReq::BaseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.BaseReq)
}
BaseReq::BaseReq(const BaseReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_deviceid()) {
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
  // @@protoc_insertion_point(copy_constructor:g.BaseReq)
}

void BaseReq::SharedCtor() {
  _cached_size_ = 0;
  deviceid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BaseReq::~BaseReq() {
  // @@protoc_insertion_point(destructor:g.BaseReq)
  SharedDtor();
}

void BaseReq::SharedDtor() {
  deviceid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BaseReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[0].descriptor;
}

const BaseReq& BaseReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseReq* BaseReq::New(::google::protobuf::Arena* arena) const {
  BaseReq* n = new BaseReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.BaseReq)
  if (has_deviceid()) {
    GOOGLE_DCHECK(!deviceid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*deviceid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.BaseReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string deviceId = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deviceid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->deviceid().data(), this->deviceid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.BaseReq.deviceId");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.BaseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.BaseReq)
  return false;
#undef DO_
}

void BaseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.BaseReq)
  // optional string deviceId = 1;
  if (has_deviceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.BaseReq.deviceId");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deviceid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.BaseReq)
}

::google::protobuf::uint8* BaseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.BaseReq)
  // optional string deviceId = 1;
  if (has_deviceid()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->deviceid().data(), this->deviceid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.BaseReq.deviceId");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deviceid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.BaseReq)
  return target;
}

size_t BaseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.BaseReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string deviceId = 1;
  if (has_deviceid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deviceid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.BaseReq)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.BaseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.BaseReq)
    MergeFrom(*source);
  }
}

void BaseReq::MergeFrom(const BaseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.BaseReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_deviceid()) {
    set_has_deviceid();
    deviceid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deviceid_);
  }
}

void BaseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.BaseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseReq::CopyFrom(const BaseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.BaseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseReq::IsInitialized() const {
  return true;
}

void BaseReq::Swap(BaseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseReq::InternalSwap(BaseReq* other) {
  deviceid_.Swap(&other->deviceid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseReq

// optional string deviceId = 1;
bool BaseReq::has_deviceid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseReq::set_has_deviceid() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseReq::clear_has_deviceid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseReq::clear_deviceid() {
  deviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_deviceid();
}
const ::std::string& BaseReq::deviceid() const {
  // @@protoc_insertion_point(field_get:g.BaseReq.deviceId)
  return deviceid_.GetNoArena();
}
void BaseReq::set_deviceid(const ::std::string& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.BaseReq.deviceId)
}
#if LANG_CXX11
void BaseReq::set_deviceid(::std::string&& value) {
  set_has_deviceid();
  deviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.BaseReq.deviceId)
}
#endif
void BaseReq::set_deviceid(const char* value) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.BaseReq.deviceId)
}
void BaseReq::set_deviceid(const char* value, size_t size) {
  set_has_deviceid();
  deviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.BaseReq.deviceId)
}
::std::string* BaseReq::mutable_deviceid() {
  set_has_deviceid();
  // @@protoc_insertion_point(field_mutable:g.BaseReq.deviceId)
  return deviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BaseReq::release_deviceid() {
  // @@protoc_insertion_point(field_release:g.BaseReq.deviceId)
  clear_has_deviceid();
  return deviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BaseReq::set_allocated_deviceid(::std::string* deviceid) {
  if (deviceid != NULL) {
    set_has_deviceid();
  } else {
    clear_has_deviceid();
  }
  deviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deviceid);
  // @@protoc_insertion_point(field_set_allocated:g.BaseReq.deviceId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BaseResp::kErrCodeFieldNumber;
const int BaseResp::kErrMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BaseResp::BaseResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.BaseResp)
}
BaseResp::BaseResp(const BaseResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_errmsg()) {
    errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
  }
  errcode_ = from.errcode_;
  // @@protoc_insertion_point(copy_constructor:g.BaseResp)
}

void BaseResp::SharedCtor() {
  _cached_size_ = 0;
  errmsg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  errcode_ = 0;
}

BaseResp::~BaseResp() {
  // @@protoc_insertion_point(destructor:g.BaseResp)
  SharedDtor();
}

void BaseResp::SharedDtor() {
  errmsg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BaseResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BaseResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[1].descriptor;
}

const BaseResp& BaseResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

BaseResp* BaseResp::New(::google::protobuf::Arena* arena) const {
  BaseResp* n = new BaseResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BaseResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.BaseResp)
  if (has_errmsg()) {
    GOOGLE_DCHECK(!errmsg_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*errmsg_.UnsafeRawStringPointer())->clear();
  }
  errcode_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BaseResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.BaseResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 errCode = 1;
      case 1: {
        if (tag == 8u) {
          set_has_errcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string errMsg = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_errmsg()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->errmsg().data(), this->errmsg().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.BaseResp.errMsg");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.BaseResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.BaseResp)
  return false;
#undef DO_
}

void BaseResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.BaseResp)
  // optional int32 errCode = 1;
  if (has_errcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errcode(), output);
  }

  // optional string errMsg = 2;
  if (has_errmsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.BaseResp.errMsg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->errmsg(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.BaseResp)
}

::google::protobuf::uint8* BaseResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.BaseResp)
  // optional int32 errCode = 1;
  if (has_errcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errcode(), target);
  }

  // optional string errMsg = 2;
  if (has_errmsg()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->errmsg().data(), this->errmsg().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.BaseResp.errMsg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->errmsg(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.BaseResp)
  return target;
}

size_t BaseResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.BaseResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string errMsg = 2;
    if (has_errmsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->errmsg());
    }

    // optional int32 errCode = 1;
    if (has_errcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->errcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BaseResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.BaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  const BaseResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BaseResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.BaseResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.BaseResp)
    MergeFrom(*source);
  }
}

void BaseResp::MergeFrom(const BaseResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.BaseResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_errmsg()) {
      set_has_errmsg();
      errmsg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.errmsg_);
    }
    if (from.has_errcode()) {
      set_errcode(from.errcode());
    }
  }
}

void BaseResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.BaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BaseResp::CopyFrom(const BaseResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.BaseResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BaseResp::IsInitialized() const {
  return true;
}

void BaseResp::Swap(BaseResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BaseResp::InternalSwap(BaseResp* other) {
  errmsg_.Swap(&other->errmsg_);
  std::swap(errcode_, other->errcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BaseResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BaseResp

// optional int32 errCode = 1;
bool BaseResp::has_errcode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BaseResp::set_has_errcode() {
  _has_bits_[0] |= 0x00000002u;
}
void BaseResp::clear_has_errcode() {
  _has_bits_[0] &= ~0x00000002u;
}
void BaseResp::clear_errcode() {
  errcode_ = 0;
  clear_has_errcode();
}
::google::protobuf::int32 BaseResp::errcode() const {
  // @@protoc_insertion_point(field_get:g.BaseResp.errCode)
  return errcode_;
}
void BaseResp::set_errcode(::google::protobuf::int32 value) {
  set_has_errcode();
  errcode_ = value;
  // @@protoc_insertion_point(field_set:g.BaseResp.errCode)
}

// optional string errMsg = 2;
bool BaseResp::has_errmsg() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BaseResp::set_has_errmsg() {
  _has_bits_[0] |= 0x00000001u;
}
void BaseResp::clear_has_errmsg() {
  _has_bits_[0] &= ~0x00000001u;
}
void BaseResp::clear_errmsg() {
  errmsg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_errmsg();
}
const ::std::string& BaseResp::errmsg() const {
  // @@protoc_insertion_point(field_get:g.BaseResp.errMsg)
  return errmsg_.GetNoArena();
}
void BaseResp::set_errmsg(const ::std::string& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.BaseResp.errMsg)
}
#if LANG_CXX11
void BaseResp::set_errmsg(::std::string&& value) {
  set_has_errmsg();
  errmsg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.BaseResp.errMsg)
}
#endif
void BaseResp::set_errmsg(const char* value) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.BaseResp.errMsg)
}
void BaseResp::set_errmsg(const char* value, size_t size) {
  set_has_errmsg();
  errmsg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.BaseResp.errMsg)
}
::std::string* BaseResp::mutable_errmsg() {
  set_has_errmsg();
  // @@protoc_insertion_point(field_mutable:g.BaseResp.errMsg)
  return errmsg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BaseResp::release_errmsg() {
  // @@protoc_insertion_point(field_release:g.BaseResp.errMsg)
  clear_has_errmsg();
  return errmsg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BaseResp::set_allocated_errmsg(::std::string* errmsg) {
  if (errmsg != NULL) {
    set_has_errmsg();
  } else {
    clear_has_errmsg();
  }
  errmsg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errmsg);
  // @@protoc_insertion_point(field_set_allocated:g.BaseResp.errMsg)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterReq::kBaseReqFieldNumber;
const int RegisterReq::kUserNameFieldNumber;
const int RegisterReq::kPassFieldNumber;
const int RegisterReq::kQqFieldNumber;
const int RegisterReq::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterReq::RegisterReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.RegisterReq)
}
RegisterReq::RegisterReq(const RegisterReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pass()) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qq()) {
    qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qq_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.RegisterReq)
}

void RegisterReq::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basereq_ = NULL;
}

RegisterReq::~RegisterReq() {
  // @@protoc_insertion_point(destructor:g.RegisterReq)
  SharedDtor();
}

void RegisterReq::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void RegisterReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[2].descriptor;
}

const RegisterReq& RegisterReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterReq* RegisterReq::New(::google::protobuf::Arena* arena) const {
  RegisterReq* n = new RegisterReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.RegisterReq)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_pass()) {
      GOOGLE_DCHECK(!pass_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pass_.UnsafeRawStringPointer())->clear();
    }
    if (has_qq()) {
      GOOGLE_DCHECK(!qq_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*qq_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.RegisterReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.RegisterReq.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pass = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string qq = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qq().data(), this->qq().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.RegisterReq.qq");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.RegisterReq.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.RegisterReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.RegisterReq)
  return false;
#undef DO_
}

void RegisterReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.RegisterReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional string userName = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.RegisterReq.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional bytes pass = 3;
  if (has_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pass(), output);
  }

  // optional string qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.RegisterReq.qq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->qq(), output);
  }

  // optional string email = 5;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.RegisterReq.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.RegisterReq)
}

::google::protobuf::uint8* RegisterReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.RegisterReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional string userName = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.RegisterReq.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional bytes pass = 3;
  if (has_pass()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pass(), target);
  }

  // optional string qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.RegisterReq.qq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->qq(), target);
  }

  // optional string email = 5;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.RegisterReq.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.RegisterReq)
  return target;
}

size_t RegisterReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.RegisterReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string userName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional bytes pass = 3;
    if (has_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pass());
    }

    // optional string qq = 4;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq());
    }

    // optional string email = 5;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.RegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.RegisterReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.RegisterReq)
    MergeFrom(*source);
  }
}

void RegisterReq::MergeFrom(const RegisterReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.RegisterReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_pass()) {
      set_has_pass();
      pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
    }
    if (from.has_qq()) {
      set_has_qq();
      qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qq_);
    }
    if (from.has_email()) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
  }
}

void RegisterReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.RegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterReq::CopyFrom(const RegisterReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.RegisterReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterReq::IsInitialized() const {
  return true;
}

void RegisterReq::Swap(RegisterReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterReq::InternalSwap(RegisterReq* other) {
  username_.Swap(&other->username_);
  pass_.Swap(&other->pass_);
  qq_.Swap(&other->qq_);
  email_.Swap(&other->email_);
  std::swap(basereq_, other->basereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterReq

// optional .g.BaseReq baseReq = 1;
bool RegisterReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void RegisterReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000010u;
}
void RegisterReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000010u;
}
void RegisterReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& RegisterReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* RegisterReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.baseReq)
  return basereq_;
}
::g::BaseReq* RegisterReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void RegisterReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.baseReq)
}

// optional string userName = 2;
bool RegisterReq::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterReq::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& RegisterReq::username() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.userName)
  return username_.GetNoArena();
}
void RegisterReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.userName)
}
#if LANG_CXX11
void RegisterReq::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.userName)
}
#endif
void RegisterReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.userName)
}
void RegisterReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.userName)
}
::std::string* RegisterReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterReq::release_username() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.userName)
}

// optional bytes pass = 3;
bool RegisterReq::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegisterReq::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
void RegisterReq::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegisterReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
const ::std::string& RegisterReq::pass() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.pass)
  return pass_.GetNoArena();
}
void RegisterReq::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.pass)
}
#if LANG_CXX11
void RegisterReq::set_pass(::std::string&& value) {
  set_has_pass();
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.pass)
}
#endif
void RegisterReq::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.pass)
}
void RegisterReq::set_pass(const void* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.pass)
}
::std::string* RegisterReq::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterReq::release_pass() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.pass)
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.pass)
}

// optional string qq = 4;
bool RegisterReq::has_qq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RegisterReq::set_has_qq() {
  _has_bits_[0] |= 0x00000004u;
}
void RegisterReq::clear_has_qq() {
  _has_bits_[0] &= ~0x00000004u;
}
void RegisterReq::clear_qq() {
  qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qq();
}
const ::std::string& RegisterReq::qq() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.qq)
  return qq_.GetNoArena();
}
void RegisterReq::set_qq(const ::std::string& value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.qq)
}
#if LANG_CXX11
void RegisterReq::set_qq(::std::string&& value) {
  set_has_qq();
  qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.qq)
}
#endif
void RegisterReq::set_qq(const char* value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.qq)
}
void RegisterReq::set_qq(const char* value, size_t size) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.qq)
}
::std::string* RegisterReq::mutable_qq() {
  set_has_qq();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.qq)
  return qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterReq::release_qq() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.qq)
  clear_has_qq();
  return qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterReq::set_allocated_qq(::std::string* qq) {
  if (qq != NULL) {
    set_has_qq();
  } else {
    clear_has_qq();
  }
  qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qq);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.qq)
}

// optional string email = 5;
bool RegisterReq::has_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RegisterReq::set_has_email() {
  _has_bits_[0] |= 0x00000008u;
}
void RegisterReq::clear_has_email() {
  _has_bits_[0] &= ~0x00000008u;
}
void RegisterReq::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& RegisterReq::email() const {
  // @@protoc_insertion_point(field_get:g.RegisterReq.email)
  return email_.GetNoArena();
}
void RegisterReq::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.RegisterReq.email)
}
#if LANG_CXX11
void RegisterReq::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.RegisterReq.email)
}
#endif
void RegisterReq::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.RegisterReq.email)
}
void RegisterReq::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.RegisterReq.email)
}
::std::string* RegisterReq::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:g.RegisterReq.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterReq::release_email() {
  // @@protoc_insertion_point(field_release:g.RegisterReq.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterReq::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:g.RegisterReq.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResp::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResp::RegisterResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.RegisterResp)
}
RegisterResp::RegisterResp(const RegisterResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.RegisterResp)
}

void RegisterResp::SharedCtor() {
  _cached_size_ = 0;
  baseresp_ = NULL;
}

RegisterResp::~RegisterResp() {
  // @@protoc_insertion_point(destructor:g.RegisterResp)
  SharedDtor();
}

void RegisterResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void RegisterResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[3].descriptor;
}

const RegisterResp& RegisterResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

RegisterResp* RegisterResp::New(::google::protobuf::Arena* arena) const {
  RegisterResp* n = new RegisterResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.RegisterResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.RegisterResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.RegisterResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.RegisterResp)
  return false;
#undef DO_
}

void RegisterResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.RegisterResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.RegisterResp)
}

::google::protobuf::uint8* RegisterResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.RegisterResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.RegisterResp)
  return target;
}

size_t RegisterResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.RegisterResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.RegisterResp)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.RegisterResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.RegisterResp)
    MergeFrom(*source);
  }
}

void RegisterResp::MergeFrom(const RegisterResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.RegisterResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
  }
}

void RegisterResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.RegisterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResp::CopyFrom(const RegisterResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.RegisterResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResp::IsInitialized() const {
  return true;
}

void RegisterResp::Swap(RegisterResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResp::InternalSwap(RegisterResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterResp

// optional .g.BaseResp baseResp = 1;
bool RegisterResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& RegisterResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.RegisterResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* RegisterResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.RegisterResp.baseResp)
  return baseresp_;
}
::g::BaseResp* RegisterResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.RegisterResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void RegisterResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.RegisterResp.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReq::kBaseReqFieldNumber;
const int LoginReq::kUserNameFieldNumber;
const int LoginReq::kPassFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReq::LoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.LoginReq)
}
LoginReq::LoginReq(const LoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pass()) {
    pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.LoginReq)
}

void LoginReq::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basereq_ = NULL;
}

LoginReq::~LoginReq() {
  // @@protoc_insertion_point(destructor:g.LoginReq)
  SharedDtor();
}

void LoginReq::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pass_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void LoginReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[4].descriptor;
}

const LoginReq& LoginReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginReq* LoginReq::New(::google::protobuf::Arena* arena) const {
  LoginReq* n = new LoginReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.LoginReq)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_pass()) {
      GOOGLE_DCHECK(!pass_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pass_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.LoginReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.LoginReq.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes pass = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pass()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.LoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.LoginReq)
  return false;
#undef DO_
}

void LoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.LoginReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional string userName = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.LoginReq.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional bytes pass = 3;
  if (has_pass()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pass(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.LoginReq)
}

::google::protobuf::uint8* LoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.LoginReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional string userName = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.LoginReq.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional bytes pass = 3;
  if (has_pass()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pass(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.LoginReq)
  return target;
}

size_t LoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.LoginReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string userName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional bytes pass = 3;
    if (has_pass()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->pass());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.LoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.LoginReq)
    MergeFrom(*source);
  }
}

void LoginReq::MergeFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.LoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_pass()) {
      set_has_pass();
      pass_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pass_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
  }
}

void LoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReq::CopyFrom(const LoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.LoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReq::IsInitialized() const {
  return true;
}

void LoginReq::Swap(LoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReq::InternalSwap(LoginReq* other) {
  username_.Swap(&other->username_);
  pass_.Swap(&other->pass_);
  std::swap(basereq_, other->basereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReq

// optional .g.BaseReq baseReq = 1;
bool LoginReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LoginReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000004u;
}
void LoginReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000004u;
}
void LoginReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& LoginReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.LoginReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* LoginReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.LoginReq.baseReq)
  return basereq_;
}
::g::BaseReq* LoginReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.LoginReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void LoginReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LoginReq.baseReq)
}

// optional string userName = 2;
bool LoginReq::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginReq::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginReq::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginReq::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& LoginReq::username() const {
  // @@protoc_insertion_point(field_get:g.LoginReq.userName)
  return username_.GetNoArena();
}
void LoginReq::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.LoginReq.userName)
}
#if LANG_CXX11
void LoginReq::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.LoginReq.userName)
}
#endif
void LoginReq::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.LoginReq.userName)
}
void LoginReq::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.LoginReq.userName)
}
::std::string* LoginReq::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.LoginReq.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_username() {
  // @@protoc_insertion_point(field_release:g.LoginReq.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.LoginReq.userName)
}

// optional bytes pass = 3;
bool LoginReq::has_pass() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginReq::set_has_pass() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginReq::clear_has_pass() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginReq::clear_pass() {
  pass_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pass();
}
const ::std::string& LoginReq::pass() const {
  // @@protoc_insertion_point(field_get:g.LoginReq.pass)
  return pass_.GetNoArena();
}
void LoginReq::set_pass(const ::std::string& value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.LoginReq.pass)
}
#if LANG_CXX11
void LoginReq::set_pass(::std::string&& value) {
  set_has_pass();
  pass_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.LoginReq.pass)
}
#endif
void LoginReq::set_pass(const char* value) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.LoginReq.pass)
}
void LoginReq::set_pass(const void* value, size_t size) {
  set_has_pass();
  pass_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.LoginReq.pass)
}
::std::string* LoginReq::mutable_pass() {
  set_has_pass();
  // @@protoc_insertion_point(field_mutable:g.LoginReq.pass)
  return pass_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReq::release_pass() {
  // @@protoc_insertion_point(field_release:g.LoginReq.pass)
  clear_has_pass();
  return pass_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReq::set_allocated_pass(::std::string* pass) {
  if (pass != NULL) {
    set_has_pass();
  } else {
    clear_has_pass();
  }
  pass_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pass);
  // @@protoc_insertion_point(field_set_allocated:g.LoginReq.pass)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResp::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResp::LoginResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.LoginResp)
}
LoginResp::LoginResp(const LoginResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.LoginResp)
}

void LoginResp::SharedCtor() {
  _cached_size_ = 0;
  baseresp_ = NULL;
}

LoginResp::~LoginResp() {
  // @@protoc_insertion_point(destructor:g.LoginResp)
  SharedDtor();
}

void LoginResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void LoginResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[5].descriptor;
}

const LoginResp& LoginResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginResp* LoginResp::New(::google::protobuf::Arena* arena) const {
  LoginResp* n = new LoginResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.LoginResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.LoginResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.LoginResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.LoginResp)
  return false;
#undef DO_
}

void LoginResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.LoginResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.LoginResp)
}

::google::protobuf::uint8* LoginResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.LoginResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.LoginResp)
  return target;
}

size_t LoginResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.LoginResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.LoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.LoginResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.LoginResp)
    MergeFrom(*source);
  }
}

void LoginResp::MergeFrom(const LoginResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.LoginResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
  }
}

void LoginResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.LoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResp::CopyFrom(const LoginResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.LoginResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResp::IsInitialized() const {
  return true;
}

void LoginResp::Swap(LoginResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResp::InternalSwap(LoginResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResp

// optional .g.BaseResp baseResp = 1;
bool LoginResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& LoginResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.LoginResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* LoginResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.LoginResp.baseResp)
  return baseresp_;
}
::g::BaseResp* LoginResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.LoginResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void LoginResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LoginResp.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutReq::kBaseReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutReq::LogoutReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.LogoutReq)
}
LogoutReq::LogoutReq(const LogoutReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.LogoutReq)
}

void LogoutReq::SharedCtor() {
  _cached_size_ = 0;
  basereq_ = NULL;
}

LogoutReq::~LogoutReq() {
  // @@protoc_insertion_point(destructor:g.LogoutReq)
  SharedDtor();
}

void LogoutReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void LogoutReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[6].descriptor;
}

const LogoutReq& LogoutReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutReq* LogoutReq::New(::google::protobuf::Arena* arena) const {
  LogoutReq* n = new LogoutReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.LogoutReq)
  if (has_basereq()) {
    GOOGLE_DCHECK(basereq_ != NULL);
    basereq_->::g::BaseReq::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogoutReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.LogoutReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.LogoutReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.LogoutReq)
  return false;
#undef DO_
}

void LogoutReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.LogoutReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.LogoutReq)
}

::google::protobuf::uint8* LogoutReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.LogoutReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.LogoutReq)
  return target;
}

size_t LogoutReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.LogoutReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basereq_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.LogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.LogoutReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.LogoutReq)
    MergeFrom(*source);
  }
}

void LogoutReq::MergeFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.LogoutReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basereq()) {
    mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
  }
}

void LogoutReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutReq::CopyFrom(const LogoutReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.LogoutReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutReq::IsInitialized() const {
  return true;
}

void LogoutReq::Swap(LogoutReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutReq::InternalSwap(LogoutReq* other) {
  std::swap(basereq_, other->basereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutReq

// optional .g.BaseReq baseReq = 1;
bool LogoutReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogoutReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000001u;
}
void LogoutReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogoutReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& LogoutReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.LogoutReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* LogoutReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.LogoutReq.baseReq)
  return basereq_;
}
::g::BaseReq* LogoutReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.LogoutReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void LogoutReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LogoutReq.baseReq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutResp::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutResp::LogoutResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.LogoutResp)
}
LogoutResp::LogoutResp(const LogoutResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.LogoutResp)
}

void LogoutResp::SharedCtor() {
  _cached_size_ = 0;
  baseresp_ = NULL;
}

LogoutResp::~LogoutResp() {
  // @@protoc_insertion_point(destructor:g.LogoutResp)
  SharedDtor();
}

void LogoutResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void LogoutResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[7].descriptor;
}

const LogoutResp& LogoutResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

LogoutResp* LogoutResp::New(::google::protobuf::Arena* arena) const {
  LogoutResp* n = new LogoutResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogoutResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.LogoutResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LogoutResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.LogoutResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.LogoutResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.LogoutResp)
  return false;
#undef DO_
}

void LogoutResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.LogoutResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.LogoutResp)
}

::google::protobuf::uint8* LogoutResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.LogoutResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.LogoutResp)
  return target;
}

size_t LogoutResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.LogoutResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.LogoutResp)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.LogoutResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.LogoutResp)
    MergeFrom(*source);
  }
}

void LogoutResp::MergeFrom(const LogoutResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.LogoutResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
  }
}

void LogoutResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.LogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutResp::CopyFrom(const LogoutResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.LogoutResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResp::IsInitialized() const {
  return true;
}

void LogoutResp::Swap(LogoutResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutResp::InternalSwap(LogoutResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogoutResp

// optional .g.BaseResp baseResp = 1;
bool LogoutResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LogoutResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void LogoutResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void LogoutResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& LogoutResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.LogoutResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* LogoutResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.LogoutResp.baseResp)
  return baseresp_;
}
::g::BaseResp* LogoutResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.LogoutResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void LogoutResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.LogoutResp.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartBeatReq::kBaseReqFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeatReq::HeartBeatReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.HeartBeatReq)
}
HeartBeatReq::HeartBeatReq(const HeartBeatReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.HeartBeatReq)
}

void HeartBeatReq::SharedCtor() {
  _cached_size_ = 0;
  basereq_ = NULL;
}

HeartBeatReq::~HeartBeatReq() {
  // @@protoc_insertion_point(destructor:g.HeartBeatReq)
  SharedDtor();
}

void HeartBeatReq::SharedDtor() {
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void HeartBeatReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[8].descriptor;
}

const HeartBeatReq& HeartBeatReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartBeatReq* HeartBeatReq::New(::google::protobuf::Arena* arena) const {
  HeartBeatReq* n = new HeartBeatReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.HeartBeatReq)
  if (has_basereq()) {
    GOOGLE_DCHECK(basereq_ != NULL);
    basereq_->::g::BaseReq::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeartBeatReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.HeartBeatReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.HeartBeatReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.HeartBeatReq)
  return false;
#undef DO_
}

void HeartBeatReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.HeartBeatReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.HeartBeatReq)
}

::google::protobuf::uint8* HeartBeatReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.HeartBeatReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.HeartBeatReq)
  return target;
}

size_t HeartBeatReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.HeartBeatReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->basereq_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.HeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeatReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.HeartBeatReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.HeartBeatReq)
    MergeFrom(*source);
  }
}

void HeartBeatReq::MergeFrom(const HeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.HeartBeatReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_basereq()) {
    mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
  }
}

void HeartBeatReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.HeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatReq::CopyFrom(const HeartBeatReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.HeartBeatReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatReq::IsInitialized() const {
  return true;
}

void HeartBeatReq::Swap(HeartBeatReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatReq::InternalSwap(HeartBeatReq* other) {
  std::swap(basereq_, other->basereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeatReq

// optional .g.BaseReq baseReq = 1;
bool HeartBeatReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HeartBeatReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000001u;
}
void HeartBeatReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000001u;
}
void HeartBeatReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& HeartBeatReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.HeartBeatReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* HeartBeatReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.HeartBeatReq.baseReq)
  return basereq_;
}
::g::BaseReq* HeartBeatReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.HeartBeatReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void HeartBeatReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.HeartBeatReq.baseReq)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartBeatResp::kBaseRespFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartBeatResp::HeartBeatResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.HeartBeatResp)
}
HeartBeatResp::HeartBeatResp(const HeartBeatResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.HeartBeatResp)
}

void HeartBeatResp::SharedCtor() {
  _cached_size_ = 0;
  baseresp_ = NULL;
}

HeartBeatResp::~HeartBeatResp() {
  // @@protoc_insertion_point(destructor:g.HeartBeatResp)
  SharedDtor();
}

void HeartBeatResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void HeartBeatResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeartBeatResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[9].descriptor;
}

const HeartBeatResp& HeartBeatResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

HeartBeatResp* HeartBeatResp::New(::google::protobuf::Arena* arena) const {
  HeartBeatResp* n = new HeartBeatResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeartBeatResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.HeartBeatResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HeartBeatResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.HeartBeatResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.HeartBeatResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.HeartBeatResp)
  return false;
#undef DO_
}

void HeartBeatResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.HeartBeatResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.HeartBeatResp)
}

::google::protobuf::uint8* HeartBeatResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.HeartBeatResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.HeartBeatResp)
  return target;
}

size_t HeartBeatResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.HeartBeatResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->baseresp_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeartBeatResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.HeartBeatResp)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartBeatResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartBeatResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.HeartBeatResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.HeartBeatResp)
    MergeFrom(*source);
  }
}

void HeartBeatResp::MergeFrom(const HeartBeatResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.HeartBeatResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
  }
}

void HeartBeatResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.HeartBeatResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartBeatResp::CopyFrom(const HeartBeatResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.HeartBeatResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartBeatResp::IsInitialized() const {
  return true;
}

void HeartBeatResp::Swap(HeartBeatResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartBeatResp::InternalSwap(HeartBeatResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeartBeatResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeartBeatResp

// optional .g.BaseResp baseResp = 1;
bool HeartBeatResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HeartBeatResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void HeartBeatResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void HeartBeatResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& HeartBeatResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.HeartBeatResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* HeartBeatResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.HeartBeatResp.baseResp)
  return baseresp_;
}
::g::BaseResp* HeartBeatResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.HeartBeatResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void HeartBeatResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.HeartBeatResp.baseResp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddContactCmd::kServerIdFieldNumber;
const int AddContactCmd::kUserNameFieldNumber;
const int AddContactCmd::kNickNameFieldNumber;
const int AddContactCmd::kHeadImgUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddContactCmd::AddContactCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.AddContactCmd)
}
AddContactCmd::AddContactCmd(const AddContactCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  headimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headimgurl()) {
    headimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimgurl_);
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:g.AddContactCmd)
}

void AddContactCmd::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serverid_ = GOOGLE_LONGLONG(0);
}

AddContactCmd::~AddContactCmd() {
  // @@protoc_insertion_point(destructor:g.AddContactCmd)
  SharedDtor();
}

void AddContactCmd::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddContactCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddContactCmd::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[10].descriptor;
}

const AddContactCmd& AddContactCmd::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddContactCmd* AddContactCmd::New(::google::protobuf::Arena* arena) const {
  AddContactCmd* n = new AddContactCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddContactCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:g.AddContactCmd)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_headimgurl()) {
      GOOGLE_DCHECK(!headimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*headimgurl_.UnsafeRawStringPointer())->clear();
    }
  }
  serverid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddContactCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.AddContactCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 serverId = 1;
      case 1: {
        if (tag == 8u) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string userName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.AddContactCmd.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.AddContactCmd.nickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headImgUrl = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headimgurl().data(), this->headimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.AddContactCmd.headImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.AddContactCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.AddContactCmd)
  return false;
#undef DO_
}

void AddContactCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.AddContactCmd)
  // optional int64 serverId = 1;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->serverid(), output);
  }

  // optional string userName = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.AddContactCmd.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->username(), output);
  }

  // optional string nickName = 3;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.AddContactCmd.nickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // optional string headImgUrl = 4;
  if (has_headimgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimgurl().data(), this->headimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.AddContactCmd.headImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->headimgurl(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.AddContactCmd)
}

::google::protobuf::uint8* AddContactCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.AddContactCmd)
  // optional int64 serverId = 1;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->serverid(), target);
  }

  // optional string userName = 2;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.AddContactCmd.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->username(), target);
  }

  // optional string nickName = 3;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.AddContactCmd.nickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // optional string headImgUrl = 4;
  if (has_headimgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimgurl().data(), this->headimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.AddContactCmd.headImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->headimgurl(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.AddContactCmd)
  return target;
}

size_t AddContactCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.AddContactCmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string userName = 2;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string nickName = 3;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string headImgUrl = 4;
    if (has_headimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headimgurl());
    }

    // optional int64 serverId = 1;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serverid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddContactCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.AddContactCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const AddContactCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddContactCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.AddContactCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.AddContactCmd)
    MergeFrom(*source);
  }
}

void AddContactCmd::MergeFrom(const AddContactCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.AddContactCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_headimgurl()) {
      set_has_headimgurl();
      headimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimgurl_);
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
}

void AddContactCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.AddContactCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddContactCmd::CopyFrom(const AddContactCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.AddContactCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddContactCmd::IsInitialized() const {
  return true;
}

void AddContactCmd::Swap(AddContactCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddContactCmd::InternalSwap(AddContactCmd* other) {
  username_.Swap(&other->username_);
  nickname_.Swap(&other->nickname_);
  headimgurl_.Swap(&other->headimgurl_);
  std::swap(serverid_, other->serverid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddContactCmd::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddContactCmd

// optional int64 serverId = 1;
bool AddContactCmd::has_serverid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void AddContactCmd::set_has_serverid() {
  _has_bits_[0] |= 0x00000008u;
}
void AddContactCmd::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000008u;
}
void AddContactCmd::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
::google::protobuf::int64 AddContactCmd::serverid() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.serverId)
  return serverid_;
}
void AddContactCmd::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.AddContactCmd.serverId)
}

// optional string userName = 2;
bool AddContactCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddContactCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void AddContactCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddContactCmd::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& AddContactCmd::username() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.userName)
  return username_.GetNoArena();
}
void AddContactCmd::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.AddContactCmd.userName)
}
#if LANG_CXX11
void AddContactCmd::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.AddContactCmd.userName)
}
#endif
void AddContactCmd::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.AddContactCmd.userName)
}
void AddContactCmd::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.AddContactCmd.userName)
}
::std::string* AddContactCmd::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.AddContactCmd.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddContactCmd::release_username() {
  // @@protoc_insertion_point(field_release:g.AddContactCmd.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddContactCmd::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.AddContactCmd.userName)
}

// optional string nickName = 3;
bool AddContactCmd::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddContactCmd::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void AddContactCmd::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddContactCmd::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& AddContactCmd::nickname() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.nickName)
  return nickname_.GetNoArena();
}
void AddContactCmd::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.AddContactCmd.nickName)
}
#if LANG_CXX11
void AddContactCmd::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.AddContactCmd.nickName)
}
#endif
void AddContactCmd::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.AddContactCmd.nickName)
}
void AddContactCmd::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.AddContactCmd.nickName)
}
::std::string* AddContactCmd::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:g.AddContactCmd.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddContactCmd::release_nickname() {
  // @@protoc_insertion_point(field_release:g.AddContactCmd.nickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddContactCmd::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:g.AddContactCmd.nickName)
}

// optional string headImgUrl = 4;
bool AddContactCmd::has_headimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AddContactCmd::set_has_headimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
void AddContactCmd::clear_has_headimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void AddContactCmd::clear_headimgurl() {
  headimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimgurl();
}
const ::std::string& AddContactCmd::headimgurl() const {
  // @@protoc_insertion_point(field_get:g.AddContactCmd.headImgUrl)
  return headimgurl_.GetNoArena();
}
void AddContactCmd::set_headimgurl(const ::std::string& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.AddContactCmd.headImgUrl)
}
#if LANG_CXX11
void AddContactCmd::set_headimgurl(::std::string&& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.AddContactCmd.headImgUrl)
}
#endif
void AddContactCmd::set_headimgurl(const char* value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.AddContactCmd.headImgUrl)
}
void AddContactCmd::set_headimgurl(const char* value, size_t size) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.AddContactCmd.headImgUrl)
}
::std::string* AddContactCmd::mutable_headimgurl() {
  set_has_headimgurl();
  // @@protoc_insertion_point(field_mutable:g.AddContactCmd.headImgUrl)
  return headimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddContactCmd::release_headimgurl() {
  // @@protoc_insertion_point(field_release:g.AddContactCmd.headImgUrl)
  clear_has_headimgurl();
  return headimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddContactCmd::set_allocated_headimgurl(::std::string* headimgurl) {
  if (headimgurl != NULL) {
    set_has_headimgurl();
  } else {
    clear_has_headimgurl();
  }
  headimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimgurl);
  // @@protoc_insertion_point(field_set_allocated:g.AddContactCmd.headImgUrl)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DelContactCmd::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DelContactCmd::DelContactCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.DelContactCmd)
}
DelContactCmd::DelContactCmd(const DelContactCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  // @@protoc_insertion_point(copy_constructor:g.DelContactCmd)
}

void DelContactCmd::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DelContactCmd::~DelContactCmd() {
  // @@protoc_insertion_point(destructor:g.DelContactCmd)
  SharedDtor();
}

void DelContactCmd::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DelContactCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DelContactCmd::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[11].descriptor;
}

const DelContactCmd& DelContactCmd::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

DelContactCmd* DelContactCmd::New(::google::protobuf::Arena* arena) const {
  DelContactCmd* n = new DelContactCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DelContactCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:g.DelContactCmd)
  if (has_username()) {
    GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*username_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DelContactCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.DelContactCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.DelContactCmd.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.DelContactCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.DelContactCmd)
  return false;
#undef DO_
}

void DelContactCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.DelContactCmd)
  // optional string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.DelContactCmd.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.DelContactCmd)
}

::google::protobuf::uint8* DelContactCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.DelContactCmd)
  // optional string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.DelContactCmd.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.DelContactCmd)
  return target;
}

size_t DelContactCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.DelContactCmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string userName = 1;
  if (has_username()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DelContactCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.DelContactCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const DelContactCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DelContactCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.DelContactCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.DelContactCmd)
    MergeFrom(*source);
  }
}

void DelContactCmd::MergeFrom(const DelContactCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.DelContactCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_username()) {
    set_has_username();
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
}

void DelContactCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.DelContactCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DelContactCmd::CopyFrom(const DelContactCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.DelContactCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DelContactCmd::IsInitialized() const {
  return true;
}

void DelContactCmd::Swap(DelContactCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DelContactCmd::InternalSwap(DelContactCmd* other) {
  username_.Swap(&other->username_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DelContactCmd::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DelContactCmd

// optional string userName = 1;
bool DelContactCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DelContactCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void DelContactCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void DelContactCmd::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& DelContactCmd::username() const {
  // @@protoc_insertion_point(field_get:g.DelContactCmd.userName)
  return username_.GetNoArena();
}
void DelContactCmd::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.DelContactCmd.userName)
}
#if LANG_CXX11
void DelContactCmd::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.DelContactCmd.userName)
}
#endif
void DelContactCmd::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.DelContactCmd.userName)
}
void DelContactCmd::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.DelContactCmd.userName)
}
::std::string* DelContactCmd::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.DelContactCmd.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* DelContactCmd::release_username() {
  // @@protoc_insertion_point(field_release:g.DelContactCmd.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void DelContactCmd::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.DelContactCmd.userName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateAccountCmd::kUserNameFieldNumber;
const int UpdateAccountCmd::kNickNameFieldNumber;
const int UpdateAccountCmd::kHeadImgUrlFieldNumber;
const int UpdateAccountCmd::kQqFieldNumber;
const int UpdateAccountCmd::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateAccountCmd::UpdateAccountCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.UpdateAccountCmd)
}
UpdateAccountCmd::UpdateAccountCmd(const UpdateAccountCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  headimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_headimgurl()) {
    headimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimgurl_);
  }
  qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_qq()) {
    qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qq_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  // @@protoc_insertion_point(copy_constructor:g.UpdateAccountCmd)
}

void UpdateAccountCmd::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qq_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UpdateAccountCmd::~UpdateAccountCmd() {
  // @@protoc_insertion_point(destructor:g.UpdateAccountCmd)
  SharedDtor();
}

void UpdateAccountCmd::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  headimgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  qq_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateAccountCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateAccountCmd::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[12].descriptor;
}

const UpdateAccountCmd& UpdateAccountCmd::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateAccountCmd* UpdateAccountCmd::New(::google::protobuf::Arena* arena) const {
  UpdateAccountCmd* n = new UpdateAccountCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateAccountCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:g.UpdateAccountCmd)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
    if (has_headimgurl()) {
      GOOGLE_DCHECK(!headimgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*headimgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_qq()) {
      GOOGLE_DCHECK(!qq_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*qq_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateAccountCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.UpdateAccountCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string userName = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.UpdateAccountCmd.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickName = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.UpdateAccountCmd.nickName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string headImgUrl = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_headimgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->headimgurl().data(), this->headimgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.UpdateAccountCmd.headImgUrl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string qq = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_qq()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->qq().data(), this->qq().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.UpdateAccountCmd.qq");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.UpdateAccountCmd.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.UpdateAccountCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.UpdateAccountCmd)
  return false;
#undef DO_
}

void UpdateAccountCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.UpdateAccountCmd)
  // optional string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // optional string nickName = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.nickName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  // optional string headImgUrl = 3;
  if (has_headimgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimgurl().data(), this->headimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.headImgUrl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->headimgurl(), output);
  }

  // optional string qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.qq");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->qq(), output);
  }

  // optional string email = 5;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.UpdateAccountCmd)
}

::google::protobuf::uint8* UpdateAccountCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.UpdateAccountCmd)
  // optional string userName = 1;
  if (has_username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // optional string nickName = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.nickName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  // optional string headImgUrl = 3;
  if (has_headimgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->headimgurl().data(), this->headimgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.headImgUrl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->headimgurl(), target);
  }

  // optional string qq = 4;
  if (has_qq()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->qq().data(), this->qq().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.qq");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->qq(), target);
  }

  // optional string email = 5;
  if (has_email()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.UpdateAccountCmd.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.UpdateAccountCmd)
  return target;
}

size_t UpdateAccountCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.UpdateAccountCmd)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string userName = 1;
    if (has_username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->username());
    }

    // optional string nickName = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional string headImgUrl = 3;
    if (has_headimgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->headimgurl());
    }

    // optional string qq = 4;
    if (has_qq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->qq());
    }

    // optional string email = 5;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateAccountCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.UpdateAccountCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateAccountCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateAccountCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.UpdateAccountCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.UpdateAccountCmd)
    MergeFrom(*source);
  }
}

void UpdateAccountCmd::MergeFrom(const UpdateAccountCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.UpdateAccountCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_username()) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_headimgurl()) {
      set_has_headimgurl();
      headimgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.headimgurl_);
    }
    if (from.has_qq()) {
      set_has_qq();
      qq_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.qq_);
    }
    if (from.has_email()) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
  }
}

void UpdateAccountCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.UpdateAccountCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateAccountCmd::CopyFrom(const UpdateAccountCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.UpdateAccountCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateAccountCmd::IsInitialized() const {
  return true;
}

void UpdateAccountCmd::Swap(UpdateAccountCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateAccountCmd::InternalSwap(UpdateAccountCmd* other) {
  username_.Swap(&other->username_);
  nickname_.Swap(&other->nickname_);
  headimgurl_.Swap(&other->headimgurl_);
  qq_.Swap(&other->qq_);
  email_.Swap(&other->email_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateAccountCmd::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateAccountCmd

// optional string userName = 1;
bool UpdateAccountCmd::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateAccountCmd::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateAccountCmd::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateAccountCmd::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& UpdateAccountCmd::username() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.userName)
  return username_.GetNoArena();
}
void UpdateAccountCmd::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.userName)
}
#if LANG_CXX11
void UpdateAccountCmd::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.userName)
}
#endif
void UpdateAccountCmd::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.userName)
}
void UpdateAccountCmd::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.userName)
}
::std::string* UpdateAccountCmd::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAccountCmd::release_username() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAccountCmd::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.userName)
}

// optional string nickName = 2;
bool UpdateAccountCmd::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateAccountCmd::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateAccountCmd::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateAccountCmd::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& UpdateAccountCmd::nickname() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.nickName)
  return nickname_.GetNoArena();
}
void UpdateAccountCmd::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.nickName)
}
#if LANG_CXX11
void UpdateAccountCmd::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.nickName)
}
#endif
void UpdateAccountCmd::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.nickName)
}
void UpdateAccountCmd::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.nickName)
}
::std::string* UpdateAccountCmd::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.nickName)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAccountCmd::release_nickname() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.nickName)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAccountCmd::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.nickName)
}

// optional string headImgUrl = 3;
bool UpdateAccountCmd::has_headimgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UpdateAccountCmd::set_has_headimgurl() {
  _has_bits_[0] |= 0x00000004u;
}
void UpdateAccountCmd::clear_has_headimgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
void UpdateAccountCmd::clear_headimgurl() {
  headimgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headimgurl();
}
const ::std::string& UpdateAccountCmd::headimgurl() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.headImgUrl)
  return headimgurl_.GetNoArena();
}
void UpdateAccountCmd::set_headimgurl(const ::std::string& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.headImgUrl)
}
#if LANG_CXX11
void UpdateAccountCmd::set_headimgurl(::std::string&& value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.headImgUrl)
}
#endif
void UpdateAccountCmd::set_headimgurl(const char* value) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.headImgUrl)
}
void UpdateAccountCmd::set_headimgurl(const char* value, size_t size) {
  set_has_headimgurl();
  headimgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.headImgUrl)
}
::std::string* UpdateAccountCmd::mutable_headimgurl() {
  set_has_headimgurl();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.headImgUrl)
  return headimgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAccountCmd::release_headimgurl() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.headImgUrl)
  clear_has_headimgurl();
  return headimgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAccountCmd::set_allocated_headimgurl(::std::string* headimgurl) {
  if (headimgurl != NULL) {
    set_has_headimgurl();
  } else {
    clear_has_headimgurl();
  }
  headimgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headimgurl);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.headImgUrl)
}

// optional string qq = 4;
bool UpdateAccountCmd::has_qq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UpdateAccountCmd::set_has_qq() {
  _has_bits_[0] |= 0x00000008u;
}
void UpdateAccountCmd::clear_has_qq() {
  _has_bits_[0] &= ~0x00000008u;
}
void UpdateAccountCmd::clear_qq() {
  qq_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_qq();
}
const ::std::string& UpdateAccountCmd::qq() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.qq)
  return qq_.GetNoArena();
}
void UpdateAccountCmd::set_qq(const ::std::string& value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.qq)
}
#if LANG_CXX11
void UpdateAccountCmd::set_qq(::std::string&& value) {
  set_has_qq();
  qq_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.qq)
}
#endif
void UpdateAccountCmd::set_qq(const char* value) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.qq)
}
void UpdateAccountCmd::set_qq(const char* value, size_t size) {
  set_has_qq();
  qq_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.qq)
}
::std::string* UpdateAccountCmd::mutable_qq() {
  set_has_qq();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.qq)
  return qq_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAccountCmd::release_qq() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.qq)
  clear_has_qq();
  return qq_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAccountCmd::set_allocated_qq(::std::string* qq) {
  if (qq != NULL) {
    set_has_qq();
  } else {
    clear_has_qq();
  }
  qq_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), qq);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.qq)
}

// optional string email = 5;
bool UpdateAccountCmd::has_email() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void UpdateAccountCmd::set_has_email() {
  _has_bits_[0] |= 0x00000010u;
}
void UpdateAccountCmd::clear_has_email() {
  _has_bits_[0] &= ~0x00000010u;
}
void UpdateAccountCmd::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& UpdateAccountCmd::email() const {
  // @@protoc_insertion_point(field_get:g.UpdateAccountCmd.email)
  return email_.GetNoArena();
}
void UpdateAccountCmd::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.UpdateAccountCmd.email)
}
#if LANG_CXX11
void UpdateAccountCmd::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.UpdateAccountCmd.email)
}
#endif
void UpdateAccountCmd::set_email(const char* value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.UpdateAccountCmd.email)
}
void UpdateAccountCmd::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.UpdateAccountCmd.email)
}
::std::string* UpdateAccountCmd::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:g.UpdateAccountCmd.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateAccountCmd::release_email() {
  // @@protoc_insertion_point(field_release:g.UpdateAccountCmd.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateAccountCmd::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:g.UpdateAccountCmd.email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitReq::kBaseReqFieldNumber;
const int InitReq::kSyncKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitReq::InitReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.InitReq)
}
InitReq::InitReq(const InitReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_synckey()) {
    synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.InitReq)
}

void InitReq::SharedCtor() {
  _cached_size_ = 0;
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basereq_ = NULL;
}

InitReq::~InitReq() {
  // @@protoc_insertion_point(destructor:g.InitReq)
  SharedDtor();
}

void InitReq::SharedDtor() {
  synckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void InitReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[13].descriptor;
}

const InitReq& InitReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitReq* InitReq::New(::google::protobuf::Arena* arena) const {
  InitReq* n = new InitReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.InitReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_synckey()) {
      GOOGLE_DCHECK(!synckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*synckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InitReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.InitReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes syncKey = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_synckey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.InitReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.InitReq)
  return false;
#undef DO_
}

void InitReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.InitReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->synckey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.InitReq)
}

::google::protobuf::uint8* InitReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.InitReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->synckey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.InitReq)
  return target;
}

size_t InitReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.InitReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes syncKey = 2;
    if (has_synckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->synckey());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.InitReq)
  GOOGLE_DCHECK_NE(&from, this);
  const InitReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.InitReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.InitReq)
    MergeFrom(*source);
  }
}

void InitReq::MergeFrom(const InitReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.InitReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_synckey()) {
      set_has_synckey();
      synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
  }
}

void InitReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.InitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitReq::CopyFrom(const InitReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.InitReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitReq::IsInitialized() const {
  return true;
}

void InitReq::Swap(InitReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitReq::InternalSwap(InitReq* other) {
  synckey_.Swap(&other->synckey_);
  std::swap(basereq_, other->basereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitReq

// optional .g.BaseReq baseReq = 1;
bool InitReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InitReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000002u;
}
void InitReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000002u;
}
void InitReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& InitReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.InitReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* InitReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.InitReq.baseReq)
  return basereq_;
}
::g::BaseReq* InitReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.InitReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void InitReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.InitReq.baseReq)
}

// optional bytes syncKey = 2;
bool InitReq::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InitReq::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
void InitReq::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void InitReq::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
const ::std::string& InitReq::synckey() const {
  // @@protoc_insertion_point(field_get:g.InitReq.syncKey)
  return synckey_.GetNoArena();
}
void InitReq::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.InitReq.syncKey)
}
#if LANG_CXX11
void InitReq::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.InitReq.syncKey)
}
#endif
void InitReq::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.InitReq.syncKey)
}
void InitReq::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.InitReq.syncKey)
}
::std::string* InitReq::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.InitReq.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitReq::release_synckey() {
  // @@protoc_insertion_point(field_release:g.InitReq.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitReq::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.InitReq.syncKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitResp::kBaseRespFieldNumber;
const int InitResp::kSyncKeyFieldNumber;
const int InitResp::kInitedPercentFieldNumber;
const int InitResp::kUpdateAccountCmdFieldNumber;
const int InitResp::kAddContactCmdsFieldNumber;
const int InitResp::kDelContactCmdsFieldNumber;
const int InitResp::kUpdateContactCmdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitResp::InitResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.InitResp)
}
InitResp::InitResp(const InitResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      addcontactcmds_(from.addcontactcmds_),
      delcontactcmds_(from.delcontactcmds_),
      updatecontactcmds_(from.updatecontactcmds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_synckey()) {
    synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
  }
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  if (from.has_updateaccountcmd()) {
    updateaccountcmd_ = new ::g::UpdateAccountCmd(*from.updateaccountcmd_);
  } else {
    updateaccountcmd_ = NULL;
  }
  initedpercent_ = from.initedpercent_;
  // @@protoc_insertion_point(copy_constructor:g.InitResp)
}

void InitResp::SharedCtor() {
  _cached_size_ = 0;
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresp_, 0, reinterpret_cast<char*>(&initedpercent_) -
    reinterpret_cast<char*>(&baseresp_) + sizeof(initedpercent_));
}

InitResp::~InitResp() {
  // @@protoc_insertion_point(destructor:g.InitResp)
  SharedDtor();
}

void InitResp::SharedDtor() {
  synckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
  if (this != internal_default_instance()) {
    delete updateaccountcmd_;
  }
}

void InitResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InitResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[14].descriptor;
}

const InitResp& InitResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

InitResp* InitResp::New(::google::protobuf::Arena* arena) const {
  InitResp* n = new InitResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InitResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.InitResp)
  addcontactcmds_.Clear();
  delcontactcmds_.Clear();
  updatecontactcmds_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_synckey()) {
      GOOGLE_DCHECK(!synckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*synckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresp()) {
      GOOGLE_DCHECK(baseresp_ != NULL);
      baseresp_->::g::BaseResp::Clear();
    }
    if (has_updateaccountcmd()) {
      GOOGLE_DCHECK(updateaccountcmd_ != NULL);
      updateaccountcmd_->::g::UpdateAccountCmd::Clear();
    }
  }
  initedpercent_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InitResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.InitResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes syncKey = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_synckey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 initedPercent = 3;
      case 3: {
        if (tag == 24u) {
          set_has_initedpercent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &initedpercent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .g.UpdateAccountCmd updateAccountCmd = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updateaccountcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .g.AddContactCmd addContactCmds = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_addcontactcmds()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .g.DelContactCmd delContactCmds = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_delcontactcmds()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .g.UpdateAccountCmd updateContactCmds = 7;
      case 7: {
        if (tag == 58u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_updatecontactcmds()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.InitResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.InitResp)
  return false;
#undef DO_
}

void InitResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.InitResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->synckey(), output);
  }

  // optional int32 initedPercent = 3;
  if (has_initedpercent()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->initedpercent(), output);
  }

  // optional .g.UpdateAccountCmd updateAccountCmd = 4;
  if (has_updateaccountcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->updateaccountcmd_, output);
  }

  // repeated .g.AddContactCmd addContactCmds = 5;
  for (unsigned int i = 0, n = this->addcontactcmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->addcontactcmds(i), output);
  }

  // repeated .g.DelContactCmd delContactCmds = 6;
  for (unsigned int i = 0, n = this->delcontactcmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->delcontactcmds(i), output);
  }

  // repeated .g.UpdateAccountCmd updateContactCmds = 7;
  for (unsigned int i = 0, n = this->updatecontactcmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->updatecontactcmds(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.InitResp)
}

::google::protobuf::uint8* InitResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.InitResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->synckey(), target);
  }

  // optional int32 initedPercent = 3;
  if (has_initedpercent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->initedpercent(), target);
  }

  // optional .g.UpdateAccountCmd updateAccountCmd = 4;
  if (has_updateaccountcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->updateaccountcmd_, false, target);
  }

  // repeated .g.AddContactCmd addContactCmds = 5;
  for (unsigned int i = 0, n = this->addcontactcmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->addcontactcmds(i), false, target);
  }

  // repeated .g.DelContactCmd delContactCmds = 6;
  for (unsigned int i = 0, n = this->delcontactcmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->delcontactcmds(i), false, target);
  }

  // repeated .g.UpdateAccountCmd updateContactCmds = 7;
  for (unsigned int i = 0, n = this->updatecontactcmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, this->updatecontactcmds(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.InitResp)
  return target;
}

size_t InitResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.InitResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .g.AddContactCmd addContactCmds = 5;
  {
    unsigned int count = this->addcontactcmds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addcontactcmds(i));
    }
  }

  // repeated .g.DelContactCmd delContactCmds = 6;
  {
    unsigned int count = this->delcontactcmds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->delcontactcmds(i));
    }
  }

  // repeated .g.UpdateAccountCmd updateContactCmds = 7;
  {
    unsigned int count = this->updatecontactcmds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updatecontactcmds(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes syncKey = 2;
    if (has_synckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->synckey());
    }

    // optional .g.BaseResp baseResp = 1;
    if (has_baseresp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->baseresp_);
    }

    // optional .g.UpdateAccountCmd updateAccountCmd = 4;
    if (has_updateaccountcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->updateaccountcmd_);
    }

    // optional int32 initedPercent = 3;
    if (has_initedpercent()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->initedpercent());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InitResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.InitResp)
  GOOGLE_DCHECK_NE(&from, this);
  const InitResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.InitResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.InitResp)
    MergeFrom(*source);
  }
}

void InitResp::MergeFrom(const InitResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.InitResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addcontactcmds_.MergeFrom(from.addcontactcmds_);
  delcontactcmds_.MergeFrom(from.delcontactcmds_);
  updatecontactcmds_.MergeFrom(from.updatecontactcmds_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_synckey()) {
      set_has_synckey();
      synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
    }
    if (from.has_baseresp()) {
      mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
    }
    if (from.has_updateaccountcmd()) {
      mutable_updateaccountcmd()->::g::UpdateAccountCmd::MergeFrom(from.updateaccountcmd());
    }
    if (from.has_initedpercent()) {
      set_initedpercent(from.initedpercent());
    }
  }
}

void InitResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.InitResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitResp::CopyFrom(const InitResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.InitResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitResp::IsInitialized() const {
  return true;
}

void InitResp::Swap(InitResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitResp::InternalSwap(InitResp* other) {
  addcontactcmds_.UnsafeArenaSwap(&other->addcontactcmds_);
  delcontactcmds_.UnsafeArenaSwap(&other->delcontactcmds_);
  updatecontactcmds_.UnsafeArenaSwap(&other->updatecontactcmds_);
  synckey_.Swap(&other->synckey_);
  std::swap(baseresp_, other->baseresp_);
  std::swap(updateaccountcmd_, other->updateaccountcmd_);
  std::swap(initedpercent_, other->initedpercent_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InitResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InitResp

// optional .g.BaseResp baseResp = 1;
bool InitResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InitResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000002u;
}
void InitResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000002u;
}
void InitResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& InitResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.InitResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* InitResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.InitResp.baseResp)
  return baseresp_;
}
::g::BaseResp* InitResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.InitResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void InitResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.InitResp.baseResp)
}

// optional bytes syncKey = 2;
bool InitResp::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InitResp::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
void InitResp::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void InitResp::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
const ::std::string& InitResp::synckey() const {
  // @@protoc_insertion_point(field_get:g.InitResp.syncKey)
  return synckey_.GetNoArena();
}
void InitResp::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.InitResp.syncKey)
}
#if LANG_CXX11
void InitResp::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.InitResp.syncKey)
}
#endif
void InitResp::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.InitResp.syncKey)
}
void InitResp::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.InitResp.syncKey)
}
::std::string* InitResp::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.InitResp.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InitResp::release_synckey() {
  // @@protoc_insertion_point(field_release:g.InitResp.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InitResp::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.InitResp.syncKey)
}

// optional int32 initedPercent = 3;
bool InitResp::has_initedpercent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InitResp::set_has_initedpercent() {
  _has_bits_[0] |= 0x00000008u;
}
void InitResp::clear_has_initedpercent() {
  _has_bits_[0] &= ~0x00000008u;
}
void InitResp::clear_initedpercent() {
  initedpercent_ = 0;
  clear_has_initedpercent();
}
::google::protobuf::int32 InitResp::initedpercent() const {
  // @@protoc_insertion_point(field_get:g.InitResp.initedPercent)
  return initedpercent_;
}
void InitResp::set_initedpercent(::google::protobuf::int32 value) {
  set_has_initedpercent();
  initedpercent_ = value;
  // @@protoc_insertion_point(field_set:g.InitResp.initedPercent)
}

// optional .g.UpdateAccountCmd updateAccountCmd = 4;
bool InitResp::has_updateaccountcmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InitResp::set_has_updateaccountcmd() {
  _has_bits_[0] |= 0x00000004u;
}
void InitResp::clear_has_updateaccountcmd() {
  _has_bits_[0] &= ~0x00000004u;
}
void InitResp::clear_updateaccountcmd() {
  if (updateaccountcmd_ != NULL) updateaccountcmd_->::g::UpdateAccountCmd::Clear();
  clear_has_updateaccountcmd();
}
const ::g::UpdateAccountCmd& InitResp::updateaccountcmd() const {
  // @@protoc_insertion_point(field_get:g.InitResp.updateAccountCmd)
  return updateaccountcmd_ != NULL ? *updateaccountcmd_
                         : *::g::UpdateAccountCmd::internal_default_instance();
}
::g::UpdateAccountCmd* InitResp::mutable_updateaccountcmd() {
  set_has_updateaccountcmd();
  if (updateaccountcmd_ == NULL) {
    updateaccountcmd_ = new ::g::UpdateAccountCmd;
  }
  // @@protoc_insertion_point(field_mutable:g.InitResp.updateAccountCmd)
  return updateaccountcmd_;
}
::g::UpdateAccountCmd* InitResp::release_updateaccountcmd() {
  // @@protoc_insertion_point(field_release:g.InitResp.updateAccountCmd)
  clear_has_updateaccountcmd();
  ::g::UpdateAccountCmd* temp = updateaccountcmd_;
  updateaccountcmd_ = NULL;
  return temp;
}
void InitResp::set_allocated_updateaccountcmd(::g::UpdateAccountCmd* updateaccountcmd) {
  delete updateaccountcmd_;
  updateaccountcmd_ = updateaccountcmd;
  if (updateaccountcmd) {
    set_has_updateaccountcmd();
  } else {
    clear_has_updateaccountcmd();
  }
  // @@protoc_insertion_point(field_set_allocated:g.InitResp.updateAccountCmd)
}

// repeated .g.AddContactCmd addContactCmds = 5;
int InitResp::addcontactcmds_size() const {
  return addcontactcmds_.size();
}
void InitResp::clear_addcontactcmds() {
  addcontactcmds_.Clear();
}
const ::g::AddContactCmd& InitResp::addcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.InitResp.addContactCmds)
  return addcontactcmds_.Get(index);
}
::g::AddContactCmd* InitResp::mutable_addcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.InitResp.addContactCmds)
  return addcontactcmds_.Mutable(index);
}
::g::AddContactCmd* InitResp::add_addcontactcmds() {
  // @@protoc_insertion_point(field_add:g.InitResp.addContactCmds)
  return addcontactcmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >*
InitResp::mutable_addcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.InitResp.addContactCmds)
  return &addcontactcmds_;
}
const ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >&
InitResp::addcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.InitResp.addContactCmds)
  return addcontactcmds_;
}

// repeated .g.DelContactCmd delContactCmds = 6;
int InitResp::delcontactcmds_size() const {
  return delcontactcmds_.size();
}
void InitResp::clear_delcontactcmds() {
  delcontactcmds_.Clear();
}
const ::g::DelContactCmd& InitResp::delcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.InitResp.delContactCmds)
  return delcontactcmds_.Get(index);
}
::g::DelContactCmd* InitResp::mutable_delcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.InitResp.delContactCmds)
  return delcontactcmds_.Mutable(index);
}
::g::DelContactCmd* InitResp::add_delcontactcmds() {
  // @@protoc_insertion_point(field_add:g.InitResp.delContactCmds)
  return delcontactcmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >*
InitResp::mutable_delcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.InitResp.delContactCmds)
  return &delcontactcmds_;
}
const ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >&
InitResp::delcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.InitResp.delContactCmds)
  return delcontactcmds_;
}

// repeated .g.UpdateAccountCmd updateContactCmds = 7;
int InitResp::updatecontactcmds_size() const {
  return updatecontactcmds_.size();
}
void InitResp::clear_updatecontactcmds() {
  updatecontactcmds_.Clear();
}
const ::g::UpdateAccountCmd& InitResp::updatecontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.InitResp.updateContactCmds)
  return updatecontactcmds_.Get(index);
}
::g::UpdateAccountCmd* InitResp::mutable_updatecontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.InitResp.updateContactCmds)
  return updatecontactcmds_.Mutable(index);
}
::g::UpdateAccountCmd* InitResp::add_updatecontactcmds() {
  // @@protoc_insertion_point(field_add:g.InitResp.updateContactCmds)
  return updatecontactcmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >*
InitResp::mutable_updatecontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.InitResp.updateContactCmds)
  return &updatecontactcmds_;
}
const ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >&
InitResp::updatecontactcmds() const {
  // @@protoc_insertion_point(field_list:g.InitResp.updateContactCmds)
  return updatecontactcmds_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncReq::kBaseReqFieldNumber;
const int SyncReq::kSyncKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncReq::SyncReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SyncReq)
}
SyncReq::SyncReq(const SyncReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_synckey()) {
    synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.SyncReq)
}

void SyncReq::SharedCtor() {
  _cached_size_ = 0;
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  basereq_ = NULL;
}

SyncReq::~SyncReq() {
  // @@protoc_insertion_point(destructor:g.SyncReq)
  SharedDtor();
}

void SyncReq::SharedDtor() {
  synckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void SyncReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[15].descriptor;
}

const SyncReq& SyncReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncReq* SyncReq::New(::google::protobuf::Arena* arena) const {
  SyncReq* n = new SyncReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SyncReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_synckey()) {
      GOOGLE_DCHECK(!synckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*synckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SyncReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes syncKey = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_synckey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SyncReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SyncReq)
  return false;
#undef DO_
}

void SyncReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SyncReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->synckey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SyncReq)
}

::google::protobuf::uint8* SyncReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SyncReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->synckey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SyncReq)
  return target;
}

size_t SyncReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SyncReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes syncKey = 2;
    if (has_synckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->synckey());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SyncReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SyncReq)
    MergeFrom(*source);
  }
}

void SyncReq::MergeFrom(const SyncReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SyncReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_synckey()) {
      set_has_synckey();
      synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
  }
}

void SyncReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncReq::CopyFrom(const SyncReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SyncReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncReq::IsInitialized() const {
  return true;
}

void SyncReq::Swap(SyncReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncReq::InternalSwap(SyncReq* other) {
  synckey_.Swap(&other->synckey_);
  std::swap(basereq_, other->basereq_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncReq

// optional .g.BaseReq baseReq = 1;
bool SyncReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& SyncReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SyncReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* SyncReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SyncReq.baseReq)
  return basereq_;
}
::g::BaseReq* SyncReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SyncReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void SyncReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SyncReq.baseReq)
}

// optional bytes syncKey = 2;
bool SyncReq::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncReq::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncReq::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncReq::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
const ::std::string& SyncReq::synckey() const {
  // @@protoc_insertion_point(field_get:g.SyncReq.syncKey)
  return synckey_.GetNoArena();
}
void SyncReq::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SyncReq.syncKey)
}
#if LANG_CXX11
void SyncReq::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SyncReq.syncKey)
}
#endif
void SyncReq::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SyncReq.syncKey)
}
void SyncReq::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SyncReq.syncKey)
}
::std::string* SyncReq::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.SyncReq.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SyncReq::release_synckey() {
  // @@protoc_insertion_point(field_release:g.SyncReq.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SyncReq::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.SyncReq.syncKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SyncResp::kBaseRespFieldNumber;
const int SyncResp::kSyncKeyFieldNumber;
const int SyncResp::kUpdateAccountCmdFieldNumber;
const int SyncResp::kAddContactCmdsFieldNumber;
const int SyncResp::kDelContactCmdsFieldNumber;
const int SyncResp::kUpdateContactCmdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SyncResp::SyncResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SyncResp)
}
SyncResp::SyncResp(const SyncResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      addcontactcmds_(from.addcontactcmds_),
      delcontactcmds_(from.delcontactcmds_),
      updatecontactcmds_(from.updatecontactcmds_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_synckey()) {
    synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
  }
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  if (from.has_updateaccountcmd()) {
    updateaccountcmd_ = new ::g::UpdateAccountCmd(*from.updateaccountcmd_);
  } else {
    updateaccountcmd_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:g.SyncResp)
}

void SyncResp::SharedCtor() {
  _cached_size_ = 0;
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&baseresp_, 0, reinterpret_cast<char*>(&updateaccountcmd_) -
    reinterpret_cast<char*>(&baseresp_) + sizeof(updateaccountcmd_));
}

SyncResp::~SyncResp() {
  // @@protoc_insertion_point(destructor:g.SyncResp)
  SharedDtor();
}

void SyncResp::SharedDtor() {
  synckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
  if (this != internal_default_instance()) {
    delete updateaccountcmd_;
  }
}

void SyncResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SyncResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[16].descriptor;
}

const SyncResp& SyncResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SyncResp* SyncResp::New(::google::protobuf::Arena* arena) const {
  SyncResp* n = new SyncResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SyncResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SyncResp)
  addcontactcmds_.Clear();
  delcontactcmds_.Clear();
  updatecontactcmds_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_synckey()) {
      GOOGLE_DCHECK(!synckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*synckey_.UnsafeRawStringPointer())->clear();
    }
    if (has_baseresp()) {
      GOOGLE_DCHECK(baseresp_ != NULL);
      baseresp_->::g::BaseResp::Clear();
    }
    if (has_updateaccountcmd()) {
      GOOGLE_DCHECK(updateaccountcmd_ != NULL);
      updateaccountcmd_->::g::UpdateAccountCmd::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SyncResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SyncResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes syncKey = 2;
      case 2: {
        if (tag == 18u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_synckey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .g.UpdateAccountCmd updateAccountCmd = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_updateaccountcmd()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .g.AddContactCmd addContactCmds = 4;
      case 4: {
        if (tag == 34u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_addcontactcmds()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .g.DelContactCmd delContactCmds = 5;
      case 5: {
        if (tag == 42u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_delcontactcmds()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .g.UpdateAccountCmd updateContactCmds = 6;
      case 6: {
        if (tag == 50u) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_updatecontactcmds()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SyncResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SyncResp)
  return false;
#undef DO_
}

void SyncResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SyncResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->synckey(), output);
  }

  // optional .g.UpdateAccountCmd updateAccountCmd = 3;
  if (has_updateaccountcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->updateaccountcmd_, output);
  }

  // repeated .g.AddContactCmd addContactCmds = 4;
  for (unsigned int i = 0, n = this->addcontactcmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->addcontactcmds(i), output);
  }

  // repeated .g.DelContactCmd delContactCmds = 5;
  for (unsigned int i = 0, n = this->delcontactcmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->delcontactcmds(i), output);
  }

  // repeated .g.UpdateAccountCmd updateContactCmds = 6;
  for (unsigned int i = 0, n = this->updatecontactcmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->updatecontactcmds(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SyncResp)
}

::google::protobuf::uint8* SyncResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SyncResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  // optional bytes syncKey = 2;
  if (has_synckey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->synckey(), target);
  }

  // optional .g.UpdateAccountCmd updateAccountCmd = 3;
  if (has_updateaccountcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->updateaccountcmd_, false, target);
  }

  // repeated .g.AddContactCmd addContactCmds = 4;
  for (unsigned int i = 0, n = this->addcontactcmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->addcontactcmds(i), false, target);
  }

  // repeated .g.DelContactCmd delContactCmds = 5;
  for (unsigned int i = 0, n = this->delcontactcmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->delcontactcmds(i), false, target);
  }

  // repeated .g.UpdateAccountCmd updateContactCmds = 6;
  for (unsigned int i = 0, n = this->updatecontactcmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->updatecontactcmds(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SyncResp)
  return target;
}

size_t SyncResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SyncResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .g.AddContactCmd addContactCmds = 4;
  {
    unsigned int count = this->addcontactcmds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addcontactcmds(i));
    }
  }

  // repeated .g.DelContactCmd delContactCmds = 5;
  {
    unsigned int count = this->delcontactcmds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->delcontactcmds(i));
    }
  }

  // repeated .g.UpdateAccountCmd updateContactCmds = 6;
  {
    unsigned int count = this->updatecontactcmds_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->updatecontactcmds(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes syncKey = 2;
    if (has_synckey()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->synckey());
    }

    // optional .g.BaseResp baseResp = 1;
    if (has_baseresp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->baseresp_);
    }

    // optional .g.UpdateAccountCmd updateAccountCmd = 3;
    if (has_updateaccountcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->updateaccountcmd_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SyncResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SyncResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SyncResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SyncResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SyncResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SyncResp)
    MergeFrom(*source);
  }
}

void SyncResp::MergeFrom(const SyncResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SyncResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addcontactcmds_.MergeFrom(from.addcontactcmds_);
  delcontactcmds_.MergeFrom(from.delcontactcmds_);
  updatecontactcmds_.MergeFrom(from.updatecontactcmds_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_synckey()) {
      set_has_synckey();
      synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
    }
    if (from.has_baseresp()) {
      mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
    }
    if (from.has_updateaccountcmd()) {
      mutable_updateaccountcmd()->::g::UpdateAccountCmd::MergeFrom(from.updateaccountcmd());
    }
  }
}

void SyncResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SyncResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SyncResp::CopyFrom(const SyncResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SyncResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SyncResp::IsInitialized() const {
  return true;
}

void SyncResp::Swap(SyncResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SyncResp::InternalSwap(SyncResp* other) {
  addcontactcmds_.UnsafeArenaSwap(&other->addcontactcmds_);
  delcontactcmds_.UnsafeArenaSwap(&other->delcontactcmds_);
  updatecontactcmds_.UnsafeArenaSwap(&other->updatecontactcmds_);
  synckey_.Swap(&other->synckey_);
  std::swap(baseresp_, other->baseresp_);
  std::swap(updateaccountcmd_, other->updateaccountcmd_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SyncResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SyncResp

// optional .g.BaseResp baseResp = 1;
bool SyncResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SyncResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000002u;
}
void SyncResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000002u;
}
void SyncResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& SyncResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SyncResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* SyncResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SyncResp.baseResp)
  return baseresp_;
}
::g::BaseResp* SyncResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SyncResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void SyncResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SyncResp.baseResp)
}

// optional bytes syncKey = 2;
bool SyncResp::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SyncResp::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
void SyncResp::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void SyncResp::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
const ::std::string& SyncResp::synckey() const {
  // @@protoc_insertion_point(field_get:g.SyncResp.syncKey)
  return synckey_.GetNoArena();
}
void SyncResp::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SyncResp.syncKey)
}
#if LANG_CXX11
void SyncResp::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SyncResp.syncKey)
}
#endif
void SyncResp::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SyncResp.syncKey)
}
void SyncResp::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SyncResp.syncKey)
}
::std::string* SyncResp::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.SyncResp.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SyncResp::release_synckey() {
  // @@protoc_insertion_point(field_release:g.SyncResp.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SyncResp::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.SyncResp.syncKey)
}

// optional .g.UpdateAccountCmd updateAccountCmd = 3;
bool SyncResp::has_updateaccountcmd() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SyncResp::set_has_updateaccountcmd() {
  _has_bits_[0] |= 0x00000004u;
}
void SyncResp::clear_has_updateaccountcmd() {
  _has_bits_[0] &= ~0x00000004u;
}
void SyncResp::clear_updateaccountcmd() {
  if (updateaccountcmd_ != NULL) updateaccountcmd_->::g::UpdateAccountCmd::Clear();
  clear_has_updateaccountcmd();
}
const ::g::UpdateAccountCmd& SyncResp::updateaccountcmd() const {
  // @@protoc_insertion_point(field_get:g.SyncResp.updateAccountCmd)
  return updateaccountcmd_ != NULL ? *updateaccountcmd_
                         : *::g::UpdateAccountCmd::internal_default_instance();
}
::g::UpdateAccountCmd* SyncResp::mutable_updateaccountcmd() {
  set_has_updateaccountcmd();
  if (updateaccountcmd_ == NULL) {
    updateaccountcmd_ = new ::g::UpdateAccountCmd;
  }
  // @@protoc_insertion_point(field_mutable:g.SyncResp.updateAccountCmd)
  return updateaccountcmd_;
}
::g::UpdateAccountCmd* SyncResp::release_updateaccountcmd() {
  // @@protoc_insertion_point(field_release:g.SyncResp.updateAccountCmd)
  clear_has_updateaccountcmd();
  ::g::UpdateAccountCmd* temp = updateaccountcmd_;
  updateaccountcmd_ = NULL;
  return temp;
}
void SyncResp::set_allocated_updateaccountcmd(::g::UpdateAccountCmd* updateaccountcmd) {
  delete updateaccountcmd_;
  updateaccountcmd_ = updateaccountcmd;
  if (updateaccountcmd) {
    set_has_updateaccountcmd();
  } else {
    clear_has_updateaccountcmd();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SyncResp.updateAccountCmd)
}

// repeated .g.AddContactCmd addContactCmds = 4;
int SyncResp::addcontactcmds_size() const {
  return addcontactcmds_.size();
}
void SyncResp::clear_addcontactcmds() {
  addcontactcmds_.Clear();
}
const ::g::AddContactCmd& SyncResp::addcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.SyncResp.addContactCmds)
  return addcontactcmds_.Get(index);
}
::g::AddContactCmd* SyncResp::mutable_addcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.SyncResp.addContactCmds)
  return addcontactcmds_.Mutable(index);
}
::g::AddContactCmd* SyncResp::add_addcontactcmds() {
  // @@protoc_insertion_point(field_add:g.SyncResp.addContactCmds)
  return addcontactcmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >*
SyncResp::mutable_addcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.SyncResp.addContactCmds)
  return &addcontactcmds_;
}
const ::google::protobuf::RepeatedPtrField< ::g::AddContactCmd >&
SyncResp::addcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.SyncResp.addContactCmds)
  return addcontactcmds_;
}

// repeated .g.DelContactCmd delContactCmds = 5;
int SyncResp::delcontactcmds_size() const {
  return delcontactcmds_.size();
}
void SyncResp::clear_delcontactcmds() {
  delcontactcmds_.Clear();
}
const ::g::DelContactCmd& SyncResp::delcontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.SyncResp.delContactCmds)
  return delcontactcmds_.Get(index);
}
::g::DelContactCmd* SyncResp::mutable_delcontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.SyncResp.delContactCmds)
  return delcontactcmds_.Mutable(index);
}
::g::DelContactCmd* SyncResp::add_delcontactcmds() {
  // @@protoc_insertion_point(field_add:g.SyncResp.delContactCmds)
  return delcontactcmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >*
SyncResp::mutable_delcontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.SyncResp.delContactCmds)
  return &delcontactcmds_;
}
const ::google::protobuf::RepeatedPtrField< ::g::DelContactCmd >&
SyncResp::delcontactcmds() const {
  // @@protoc_insertion_point(field_list:g.SyncResp.delContactCmds)
  return delcontactcmds_;
}

// repeated .g.UpdateAccountCmd updateContactCmds = 6;
int SyncResp::updatecontactcmds_size() const {
  return updatecontactcmds_.size();
}
void SyncResp::clear_updatecontactcmds() {
  updatecontactcmds_.Clear();
}
const ::g::UpdateAccountCmd& SyncResp::updatecontactcmds(int index) const {
  // @@protoc_insertion_point(field_get:g.SyncResp.updateContactCmds)
  return updatecontactcmds_.Get(index);
}
::g::UpdateAccountCmd* SyncResp::mutable_updatecontactcmds(int index) {
  // @@protoc_insertion_point(field_mutable:g.SyncResp.updateContactCmds)
  return updatecontactcmds_.Mutable(index);
}
::g::UpdateAccountCmd* SyncResp::add_updatecontactcmds() {
  // @@protoc_insertion_point(field_add:g.SyncResp.updateContactCmds)
  return updatecontactcmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >*
SyncResp::mutable_updatecontactcmds() {
  // @@protoc_insertion_point(field_mutable_list:g.SyncResp.updateContactCmds)
  return &updatecontactcmds_;
}
const ::google::protobuf::RepeatedPtrField< ::g::UpdateAccountCmd >&
SyncResp::updatecontactcmds() const {
  // @@protoc_insertion_point(field_list:g.SyncResp.updateContactCmds)
  return updatecontactcmds_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendTextMsgReq::kBaseReqFieldNumber;
const int SendTextMsgReq::kClientIdFieldNumber;
const int SendTextMsgReq::kFromUserNameFieldNumber;
const int SendTextMsgReq::kToUserNameFieldNumber;
const int SendTextMsgReq::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendTextMsgReq::SendTextMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SendTextMsgReq)
}
SendTextMsgReq::SendTextMsgReq(const SendTextMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_fromusername()) {
    fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
  }
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tousername()) {
    tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_text()) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  clientid_ = from.clientid_;
  // @@protoc_insertion_point(copy_constructor:g.SendTextMsgReq)
}

void SendTextMsgReq::SharedCtor() {
  _cached_size_ = 0;
  fromusername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&basereq_, 0, reinterpret_cast<char*>(&clientid_) -
    reinterpret_cast<char*>(&basereq_) + sizeof(clientid_));
}

SendTextMsgReq::~SendTextMsgReq() {
  // @@protoc_insertion_point(destructor:g.SendTextMsgReq)
  SharedDtor();
}

void SendTextMsgReq::SharedDtor() {
  fromusername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tousername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void SendTextMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendTextMsgReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[17].descriptor;
}

const SendTextMsgReq& SendTextMsgReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendTextMsgReq* SendTextMsgReq::New(::google::protobuf::Arena* arena) const {
  SendTextMsgReq* n = new SendTextMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendTextMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SendTextMsgReq)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_fromusername()) {
      GOOGLE_DCHECK(!fromusername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*fromusername_.UnsafeRawStringPointer())->clear();
    }
    if (has_tousername()) {
      GOOGLE_DCHECK(!tousername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tousername_.UnsafeRawStringPointer())->clear();
    }
    if (has_text()) {
      GOOGLE_DCHECK(!text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*text_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  clientid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendTextMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SendTextMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 clientId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_clientid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string fromUserName = 3;
      case 3: {
        if (tag == 26u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fromusername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->fromusername().data(), this->fromusername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.SendTextMsgReq.fromUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string toUserName = 4;
      case 4: {
        if (tag == 34u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tousername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tousername().data(), this->tousername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.SendTextMsgReq.toUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string text = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.SendTextMsgReq.text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SendTextMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SendTextMsgReq)
  return false;
#undef DO_
}

void SendTextMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SendTextMsgReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional int64 clientId = 2;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->clientid(), output);
  }

  // optional string fromUserName = 3;
  if (has_fromusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendTextMsgReq.fromUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->fromusername(), output);
  }

  // optional string toUserName = 4;
  if (has_tousername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendTextMsgReq.toUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tousername(), output);
  }

  // optional string text = 5;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendTextMsgReq.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SendTextMsgReq)
}

::google::protobuf::uint8* SendTextMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SendTextMsgReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional int64 clientId = 2;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->clientid(), target);
  }

  // optional string fromUserName = 3;
  if (has_fromusername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->fromusername().data(), this->fromusername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendTextMsgReq.fromUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->fromusername(), target);
  }

  // optional string toUserName = 4;
  if (has_tousername()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tousername().data(), this->tousername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendTextMsgReq.toUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tousername(), target);
  }

  // optional string text = 5;
  if (has_text()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendTextMsgReq.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SendTextMsgReq)
  return target;
}

size_t SendTextMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SendTextMsgReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string fromUserName = 3;
    if (has_fromusername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->fromusername());
    }

    // optional string toUserName = 4;
    if (has_tousername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tousername());
    }

    // optional string text = 5;
    if (has_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->text());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

    // optional int64 clientId = 2;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->clientid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendTextMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SendTextMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SendTextMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendTextMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SendTextMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SendTextMsgReq)
    MergeFrom(*source);
  }
}

void SendTextMsgReq::MergeFrom(const SendTextMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SendTextMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_fromusername()) {
      set_has_fromusername();
      fromusername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fromusername_);
    }
    if (from.has_tousername()) {
      set_has_tousername();
      tousername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tousername_);
    }
    if (from.has_text()) {
      set_has_text();
      text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
  }
}

void SendTextMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SendTextMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendTextMsgReq::CopyFrom(const SendTextMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SendTextMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendTextMsgReq::IsInitialized() const {
  return true;
}

void SendTextMsgReq::Swap(SendTextMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendTextMsgReq::InternalSwap(SendTextMsgReq* other) {
  fromusername_.Swap(&other->fromusername_);
  tousername_.Swap(&other->tousername_);
  text_.Swap(&other->text_);
  std::swap(basereq_, other->basereq_);
  std::swap(clientid_, other->clientid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendTextMsgReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendTextMsgReq

// optional .g.BaseReq baseReq = 1;
bool SendTextMsgReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendTextMsgReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000008u;
}
void SendTextMsgReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendTextMsgReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& SendTextMsgReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* SendTextMsgReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.baseReq)
  return basereq_;
}
::g::BaseReq* SendTextMsgReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void SendTextMsgReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.baseReq)
}

// optional int64 clientId = 2;
bool SendTextMsgReq::has_clientid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendTextMsgReq::set_has_clientid() {
  _has_bits_[0] |= 0x00000010u;
}
void SendTextMsgReq::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendTextMsgReq::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
::google::protobuf::int64 SendTextMsgReq::clientid() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.clientId)
  return clientid_;
}
void SendTextMsgReq::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.clientId)
}

// optional string fromUserName = 3;
bool SendTextMsgReq::has_fromusername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendTextMsgReq::set_has_fromusername() {
  _has_bits_[0] |= 0x00000001u;
}
void SendTextMsgReq::clear_has_fromusername() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendTextMsgReq::clear_fromusername() {
  fromusername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromusername();
}
const ::std::string& SendTextMsgReq::fromusername() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.fromUserName)
  return fromusername_.GetNoArena();
}
void SendTextMsgReq::set_fromusername(const ::std::string& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.fromUserName)
}
#if LANG_CXX11
void SendTextMsgReq::set_fromusername(::std::string&& value) {
  set_has_fromusername();
  fromusername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendTextMsgReq.fromUserName)
}
#endif
void SendTextMsgReq::set_fromusername(const char* value) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendTextMsgReq.fromUserName)
}
void SendTextMsgReq::set_fromusername(const char* value, size_t size) {
  set_has_fromusername();
  fromusername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendTextMsgReq.fromUserName)
}
::std::string* SendTextMsgReq::mutable_fromusername() {
  set_has_fromusername();
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.fromUserName)
  return fromusername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendTextMsgReq::release_fromusername() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.fromUserName)
  clear_has_fromusername();
  return fromusername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendTextMsgReq::set_allocated_fromusername(::std::string* fromusername) {
  if (fromusername != NULL) {
    set_has_fromusername();
  } else {
    clear_has_fromusername();
  }
  fromusername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromusername);
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.fromUserName)
}

// optional string toUserName = 4;
bool SendTextMsgReq::has_tousername() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendTextMsgReq::set_has_tousername() {
  _has_bits_[0] |= 0x00000002u;
}
void SendTextMsgReq::clear_has_tousername() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendTextMsgReq::clear_tousername() {
  tousername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tousername();
}
const ::std::string& SendTextMsgReq::tousername() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.toUserName)
  return tousername_.GetNoArena();
}
void SendTextMsgReq::set_tousername(const ::std::string& value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.toUserName)
}
#if LANG_CXX11
void SendTextMsgReq::set_tousername(::std::string&& value) {
  set_has_tousername();
  tousername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendTextMsgReq.toUserName)
}
#endif
void SendTextMsgReq::set_tousername(const char* value) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendTextMsgReq.toUserName)
}
void SendTextMsgReq::set_tousername(const char* value, size_t size) {
  set_has_tousername();
  tousername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendTextMsgReq.toUserName)
}
::std::string* SendTextMsgReq::mutable_tousername() {
  set_has_tousername();
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.toUserName)
  return tousername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendTextMsgReq::release_tousername() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.toUserName)
  clear_has_tousername();
  return tousername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendTextMsgReq::set_allocated_tousername(::std::string* tousername) {
  if (tousername != NULL) {
    set_has_tousername();
  } else {
    clear_has_tousername();
  }
  tousername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tousername);
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.toUserName)
}

// optional string text = 5;
bool SendTextMsgReq::has_text() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendTextMsgReq::set_has_text() {
  _has_bits_[0] |= 0x00000004u;
}
void SendTextMsgReq::clear_has_text() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendTextMsgReq::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
const ::std::string& SendTextMsgReq::text() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgReq.text)
  return text_.GetNoArena();
}
void SendTextMsgReq::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendTextMsgReq.text)
}
#if LANG_CXX11
void SendTextMsgReq::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendTextMsgReq.text)
}
#endif
void SendTextMsgReq::set_text(const char* value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendTextMsgReq.text)
}
void SendTextMsgReq::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendTextMsgReq.text)
}
::std::string* SendTextMsgReq::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgReq.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendTextMsgReq::release_text() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgReq.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendTextMsgReq::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgReq.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendTextMsgResp::kBaseRespFieldNumber;
const int SendTextMsgResp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendTextMsgResp::SendTextMsgResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SendTextMsgResp)
}
SendTextMsgResp::SendTextMsgResp(const SendTextMsgResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:g.SendTextMsgResp)
}

void SendTextMsgResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresp_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&baseresp_) + sizeof(serverid_));
}

SendTextMsgResp::~SendTextMsgResp() {
  // @@protoc_insertion_point(destructor:g.SendTextMsgResp)
  SharedDtor();
}

void SendTextMsgResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void SendTextMsgResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendTextMsgResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[18].descriptor;
}

const SendTextMsgResp& SendTextMsgResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendTextMsgResp* SendTextMsgResp::New(::google::protobuf::Arena* arena) const {
  SendTextMsgResp* n = new SendTextMsgResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendTextMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SendTextMsgResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  serverid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendTextMsgResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SendTextMsgResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 serverId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SendTextMsgResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SendTextMsgResp)
  return false;
#undef DO_
}

void SendTextMsgResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SendTextMsgResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  // optional int64 serverId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->serverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SendTextMsgResp)
}

::google::protobuf::uint8* SendTextMsgResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SendTextMsgResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  // optional int64 serverId = 2;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->serverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SendTextMsgResp)
  return target;
}

size_t SendTextMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SendTextMsgResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .g.BaseResp baseResp = 1;
    if (has_baseresp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->baseresp_);
    }

    // optional int64 serverId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serverid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendTextMsgResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SendTextMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SendTextMsgResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendTextMsgResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SendTextMsgResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SendTextMsgResp)
    MergeFrom(*source);
  }
}

void SendTextMsgResp::MergeFrom(const SendTextMsgResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SendTextMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_baseresp()) {
      mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
}

void SendTextMsgResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SendTextMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendTextMsgResp::CopyFrom(const SendTextMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SendTextMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendTextMsgResp::IsInitialized() const {
  return true;
}

void SendTextMsgResp::Swap(SendTextMsgResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendTextMsgResp::InternalSwap(SendTextMsgResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(serverid_, other->serverid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendTextMsgResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendTextMsgResp

// optional .g.BaseResp baseResp = 1;
bool SendTextMsgResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendTextMsgResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void SendTextMsgResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendTextMsgResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& SendTextMsgResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* SendTextMsgResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SendTextMsgResp.baseResp)
  return baseresp_;
}
::g::BaseResp* SendTextMsgResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SendTextMsgResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void SendTextMsgResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendTextMsgResp.baseResp)
}

// optional int64 serverId = 2;
bool SendTextMsgResp::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendTextMsgResp::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
void SendTextMsgResp::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendTextMsgResp::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
::google::protobuf::int64 SendTextMsgResp::serverid() const {
  // @@protoc_insertion_point(field_get:g.SendTextMsgResp.serverId)
  return serverid_;
}
void SendTextMsgResp::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.SendTextMsgResp.serverId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendVoiceMsgReq::kBaseReqFieldNumber;
const int SendVoiceMsgReq::kClientIdFieldNumber;
const int SendVoiceMsgReq::kTotalLenFieldNumber;
const int SendVoiceMsgReq::kDataOffsetFieldNumber;
const int SendVoiceMsgReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendVoiceMsgReq::SendVoiceMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SendVoiceMsgReq)
}
SendVoiceMsgReq::SendVoiceMsgReq(const SendVoiceMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  ::memcpy(&clientid_, &from.clientid_,
    reinterpret_cast<char*>(&dataoffset_) -
    reinterpret_cast<char*>(&clientid_) + sizeof(dataoffset_));
  // @@protoc_insertion_point(copy_constructor:g.SendVoiceMsgReq)
}

void SendVoiceMsgReq::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&basereq_, 0, reinterpret_cast<char*>(&dataoffset_) -
    reinterpret_cast<char*>(&basereq_) + sizeof(dataoffset_));
}

SendVoiceMsgReq::~SendVoiceMsgReq() {
  // @@protoc_insertion_point(destructor:g.SendVoiceMsgReq)
  SharedDtor();
}

void SendVoiceMsgReq::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void SendVoiceMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendVoiceMsgReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[19].descriptor;
}

const SendVoiceMsgReq& SendVoiceMsgReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendVoiceMsgReq* SendVoiceMsgReq::New(::google::protobuf::Arena* arena) const {
  SendVoiceMsgReq* n = new SendVoiceMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendVoiceMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SendVoiceMsgReq)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_data()) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&clientid_, 0, reinterpret_cast<char*>(&dataoffset_) -
      reinterpret_cast<char*>(&clientid_) + sizeof(dataoffset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendVoiceMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SendVoiceMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 clientId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_clientid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 totalLen = 3;
      case 3: {
        if (tag == 24u) {
          set_has_totallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dataOffset = 4;
      case 4: {
        if (tag == 32u) {
          set_has_dataoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SendVoiceMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SendVoiceMsgReq)
  return false;
#undef DO_
}

void SendVoiceMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SendVoiceMsgReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional int64 clientId = 2;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->clientid(), output);
  }

  // optional int32 totalLen = 3;
  if (has_totallen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->totallen(), output);
  }

  // optional int32 dataOffset = 4;
  if (has_dataoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dataoffset(), output);
  }

  // optional bytes data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SendVoiceMsgReq)
}

::google::protobuf::uint8* SendVoiceMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SendVoiceMsgReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional int64 clientId = 2;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->clientid(), target);
  }

  // optional int32 totalLen = 3;
  if (has_totallen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->totallen(), target);
  }

  // optional int32 dataOffset = 4;
  if (has_dataoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dataoffset(), target);
  }

  // optional bytes data = 5;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SendVoiceMsgReq)
  return target;
}

size_t SendVoiceMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SendVoiceMsgReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes data = 5;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

    // optional int64 clientId = 2;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->clientid());
    }

    // optional int32 totalLen = 3;
    if (has_totallen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totallen());
    }

    // optional int32 dataOffset = 4;
    if (has_dataoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataoffset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendVoiceMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SendVoiceMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SendVoiceMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendVoiceMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SendVoiceMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SendVoiceMsgReq)
    MergeFrom(*source);
  }
}

void SendVoiceMsgReq::MergeFrom(const SendVoiceMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SendVoiceMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_totallen()) {
      set_totallen(from.totallen());
    }
    if (from.has_dataoffset()) {
      set_dataoffset(from.dataoffset());
    }
  }
}

void SendVoiceMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SendVoiceMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendVoiceMsgReq::CopyFrom(const SendVoiceMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SendVoiceMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendVoiceMsgReq::IsInitialized() const {
  return true;
}

void SendVoiceMsgReq::Swap(SendVoiceMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendVoiceMsgReq::InternalSwap(SendVoiceMsgReq* other) {
  data_.Swap(&other->data_);
  std::swap(basereq_, other->basereq_);
  std::swap(clientid_, other->clientid_);
  std::swap(totallen_, other->totallen_);
  std::swap(dataoffset_, other->dataoffset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendVoiceMsgReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendVoiceMsgReq

// optional .g.BaseReq baseReq = 1;
bool SendVoiceMsgReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendVoiceMsgReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000002u;
}
void SendVoiceMsgReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendVoiceMsgReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& SendVoiceMsgReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* SendVoiceMsgReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SendVoiceMsgReq.baseReq)
  return basereq_;
}
::g::BaseReq* SendVoiceMsgReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SendVoiceMsgReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void SendVoiceMsgReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendVoiceMsgReq.baseReq)
}

// optional int64 clientId = 2;
bool SendVoiceMsgReq::has_clientid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendVoiceMsgReq::set_has_clientid() {
  _has_bits_[0] |= 0x00000004u;
}
void SendVoiceMsgReq::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendVoiceMsgReq::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
::google::protobuf::int64 SendVoiceMsgReq::clientid() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.clientId)
  return clientid_;
}
void SendVoiceMsgReq::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.clientId)
}

// optional int32 totalLen = 3;
bool SendVoiceMsgReq::has_totallen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendVoiceMsgReq::set_has_totallen() {
  _has_bits_[0] |= 0x00000008u;
}
void SendVoiceMsgReq::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendVoiceMsgReq::clear_totallen() {
  totallen_ = 0;
  clear_has_totallen();
}
::google::protobuf::int32 SendVoiceMsgReq::totallen() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.totalLen)
  return totallen_;
}
void SendVoiceMsgReq::set_totallen(::google::protobuf::int32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.totalLen)
}

// optional int32 dataOffset = 4;
bool SendVoiceMsgReq::has_dataoffset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendVoiceMsgReq::set_has_dataoffset() {
  _has_bits_[0] |= 0x00000010u;
}
void SendVoiceMsgReq::clear_has_dataoffset() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendVoiceMsgReq::clear_dataoffset() {
  dataoffset_ = 0;
  clear_has_dataoffset();
}
::google::protobuf::int32 SendVoiceMsgReq::dataoffset() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.dataOffset)
  return dataoffset_;
}
void SendVoiceMsgReq::set_dataoffset(::google::protobuf::int32 value) {
  set_has_dataoffset();
  dataoffset_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.dataOffset)
}

// optional bytes data = 5;
bool SendVoiceMsgReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendVoiceMsgReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void SendVoiceMsgReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendVoiceMsgReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& SendVoiceMsgReq::data() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgReq.data)
  return data_.GetNoArena();
}
void SendVoiceMsgReq::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgReq.data)
}
#if LANG_CXX11
void SendVoiceMsgReq::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendVoiceMsgReq.data)
}
#endif
void SendVoiceMsgReq::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendVoiceMsgReq.data)
}
void SendVoiceMsgReq::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendVoiceMsgReq.data)
}
::std::string* SendVoiceMsgReq::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:g.SendVoiceMsgReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendVoiceMsgReq::release_data() {
  // @@protoc_insertion_point(field_release:g.SendVoiceMsgReq.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendVoiceMsgReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:g.SendVoiceMsgReq.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendVoiceMsgResp::kBaseRespFieldNumber;
const int SendVoiceMsgResp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendVoiceMsgResp::SendVoiceMsgResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SendVoiceMsgResp)
}
SendVoiceMsgResp::SendVoiceMsgResp(const SendVoiceMsgResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:g.SendVoiceMsgResp)
}

void SendVoiceMsgResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresp_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&baseresp_) + sizeof(serverid_));
}

SendVoiceMsgResp::~SendVoiceMsgResp() {
  // @@protoc_insertion_point(destructor:g.SendVoiceMsgResp)
  SharedDtor();
}

void SendVoiceMsgResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void SendVoiceMsgResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendVoiceMsgResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[20].descriptor;
}

const SendVoiceMsgResp& SendVoiceMsgResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendVoiceMsgResp* SendVoiceMsgResp::New(::google::protobuf::Arena* arena) const {
  SendVoiceMsgResp* n = new SendVoiceMsgResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendVoiceMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SendVoiceMsgResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  serverid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendVoiceMsgResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SendVoiceMsgResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 serverId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SendVoiceMsgResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SendVoiceMsgResp)
  return false;
#undef DO_
}

void SendVoiceMsgResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SendVoiceMsgResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  // optional int64 serverId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->serverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SendVoiceMsgResp)
}

::google::protobuf::uint8* SendVoiceMsgResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SendVoiceMsgResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  // optional int64 serverId = 2;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->serverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SendVoiceMsgResp)
  return target;
}

size_t SendVoiceMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SendVoiceMsgResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .g.BaseResp baseResp = 1;
    if (has_baseresp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->baseresp_);
    }

    // optional int64 serverId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serverid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendVoiceMsgResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SendVoiceMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SendVoiceMsgResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendVoiceMsgResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SendVoiceMsgResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SendVoiceMsgResp)
    MergeFrom(*source);
  }
}

void SendVoiceMsgResp::MergeFrom(const SendVoiceMsgResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SendVoiceMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_baseresp()) {
      mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
}

void SendVoiceMsgResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SendVoiceMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendVoiceMsgResp::CopyFrom(const SendVoiceMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SendVoiceMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendVoiceMsgResp::IsInitialized() const {
  return true;
}

void SendVoiceMsgResp::Swap(SendVoiceMsgResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendVoiceMsgResp::InternalSwap(SendVoiceMsgResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(serverid_, other->serverid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendVoiceMsgResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendVoiceMsgResp

// optional .g.BaseResp baseResp = 1;
bool SendVoiceMsgResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendVoiceMsgResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void SendVoiceMsgResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendVoiceMsgResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& SendVoiceMsgResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* SendVoiceMsgResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SendVoiceMsgResp.baseResp)
  return baseresp_;
}
::g::BaseResp* SendVoiceMsgResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SendVoiceMsgResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void SendVoiceMsgResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendVoiceMsgResp.baseResp)
}

// optional int64 serverId = 2;
bool SendVoiceMsgResp::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendVoiceMsgResp::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
void SendVoiceMsgResp::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendVoiceMsgResp::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
::google::protobuf::int64 SendVoiceMsgResp::serverid() const {
  // @@protoc_insertion_point(field_get:g.SendVoiceMsgResp.serverId)
  return serverid_;
}
void SendVoiceMsgResp::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.SendVoiceMsgResp.serverId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendImageMsgReq::kBaseReqFieldNumber;
const int SendImageMsgReq::kClientIdFieldNumber;
const int SendImageMsgReq::kTotalLenFieldNumber;
const int SendImageMsgReq::kDataOffsetFieldNumber;
const int SendImageMsgReq::kDataFieldNumber;
const int SendImageMsgReq::kImageFileNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendImageMsgReq::SendImageMsgReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SendImageMsgReq)
}
SendImageMsgReq::SendImageMsgReq(const SendImageMsgReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  imagefilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_imagefilename()) {
    imagefilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagefilename_);
  }
  if (from.has_basereq()) {
    basereq_ = new ::g::BaseReq(*from.basereq_);
  } else {
    basereq_ = NULL;
  }
  ::memcpy(&clientid_, &from.clientid_,
    reinterpret_cast<char*>(&dataoffset_) -
    reinterpret_cast<char*>(&clientid_) + sizeof(dataoffset_));
  // @@protoc_insertion_point(copy_constructor:g.SendImageMsgReq)
}

void SendImageMsgReq::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagefilename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&basereq_, 0, reinterpret_cast<char*>(&dataoffset_) -
    reinterpret_cast<char*>(&basereq_) + sizeof(dataoffset_));
}

SendImageMsgReq::~SendImageMsgReq() {
  // @@protoc_insertion_point(destructor:g.SendImageMsgReq)
  SharedDtor();
}

void SendImageMsgReq::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  imagefilename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete basereq_;
  }
}

void SendImageMsgReq::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendImageMsgReq::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[21].descriptor;
}

const SendImageMsgReq& SendImageMsgReq::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendImageMsgReq* SendImageMsgReq::New(::google::protobuf::Arena* arena) const {
  SendImageMsgReq* n = new SendImageMsgReq;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendImageMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SendImageMsgReq)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_data()) {
      GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*data_.UnsafeRawStringPointer())->clear();
    }
    if (has_imagefilename()) {
      GOOGLE_DCHECK(!imagefilename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*imagefilename_.UnsafeRawStringPointer())->clear();
    }
    if (has_basereq()) {
      GOOGLE_DCHECK(basereq_ != NULL);
      basereq_->::g::BaseReq::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&clientid_, 0, reinterpret_cast<char*>(&dataoffset_) -
      reinterpret_cast<char*>(&clientid_) + sizeof(dataoffset_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendImageMsgReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SendImageMsgReq)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseReq baseReq = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basereq()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 clientId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_clientid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 totalLen = 3;
      case 3: {
        if (tag == 24u) {
          set_has_totallen();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &totallen_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 dataOffset = 4;
      case 4: {
        if (tag == 32u) {
          set_has_dataoffset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dataoffset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 5;
      case 5: {
        if (tag == 42u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string imageFileName = 6;
      case 6: {
        if (tag == 50u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_imagefilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->imagefilename().data(), this->imagefilename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "g.SendImageMsgReq.imageFileName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SendImageMsgReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SendImageMsgReq)
  return false;
#undef DO_
}

void SendImageMsgReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SendImageMsgReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->basereq_, output);
  }

  // optional int64 clientId = 2;
  if (has_clientid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->clientid(), output);
  }

  // optional int32 totalLen = 3;
  if (has_totallen()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->totallen(), output);
  }

  // optional int32 dataOffset = 4;
  if (has_dataoffset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->dataoffset(), output);
  }

  // optional bytes data = 5;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->data(), output);
  }

  // optional string imageFileName = 6;
  if (has_imagefilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imagefilename().data(), this->imagefilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendImageMsgReq.imageFileName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->imagefilename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SendImageMsgReq)
}

::google::protobuf::uint8* SendImageMsgReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SendImageMsgReq)
  // optional .g.BaseReq baseReq = 1;
  if (has_basereq()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->basereq_, false, target);
  }

  // optional int64 clientId = 2;
  if (has_clientid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->clientid(), target);
  }

  // optional int32 totalLen = 3;
  if (has_totallen()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->totallen(), target);
  }

  // optional int32 dataOffset = 4;
  if (has_dataoffset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->dataoffset(), target);
  }

  // optional bytes data = 5;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->data(), target);
  }

  // optional string imageFileName = 6;
  if (has_imagefilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->imagefilename().data(), this->imagefilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "g.SendImageMsgReq.imageFileName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->imagefilename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SendImageMsgReq)
  return target;
}

size_t SendImageMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SendImageMsgReq)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional bytes data = 5;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional string imageFileName = 6;
    if (has_imagefilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->imagefilename());
    }

    // optional .g.BaseReq baseReq = 1;
    if (has_basereq()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->basereq_);
    }

    // optional int64 clientId = 2;
    if (has_clientid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->clientid());
    }

    // optional int32 totalLen = 3;
    if (has_totallen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->totallen());
    }

    // optional int32 dataOffset = 4;
    if (has_dataoffset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dataoffset());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendImageMsgReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SendImageMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  const SendImageMsgReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendImageMsgReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SendImageMsgReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SendImageMsgReq)
    MergeFrom(*source);
  }
}

void SendImageMsgReq::MergeFrom(const SendImageMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SendImageMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_data()) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (from.has_imagefilename()) {
      set_has_imagefilename();
      imagefilename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imagefilename_);
    }
    if (from.has_basereq()) {
      mutable_basereq()->::g::BaseReq::MergeFrom(from.basereq());
    }
    if (from.has_clientid()) {
      set_clientid(from.clientid());
    }
    if (from.has_totallen()) {
      set_totallen(from.totallen());
    }
    if (from.has_dataoffset()) {
      set_dataoffset(from.dataoffset());
    }
  }
}

void SendImageMsgReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SendImageMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendImageMsgReq::CopyFrom(const SendImageMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SendImageMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendImageMsgReq::IsInitialized() const {
  return true;
}

void SendImageMsgReq::Swap(SendImageMsgReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendImageMsgReq::InternalSwap(SendImageMsgReq* other) {
  data_.Swap(&other->data_);
  imagefilename_.Swap(&other->imagefilename_);
  std::swap(basereq_, other->basereq_);
  std::swap(clientid_, other->clientid_);
  std::swap(totallen_, other->totallen_);
  std::swap(dataoffset_, other->dataoffset_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendImageMsgReq::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendImageMsgReq

// optional .g.BaseReq baseReq = 1;
bool SendImageMsgReq::has_basereq() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SendImageMsgReq::set_has_basereq() {
  _has_bits_[0] |= 0x00000004u;
}
void SendImageMsgReq::clear_has_basereq() {
  _has_bits_[0] &= ~0x00000004u;
}
void SendImageMsgReq::clear_basereq() {
  if (basereq_ != NULL) basereq_->::g::BaseReq::Clear();
  clear_has_basereq();
}
const ::g::BaseReq& SendImageMsgReq::basereq() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.baseReq)
  return basereq_ != NULL ? *basereq_
                         : *::g::BaseReq::internal_default_instance();
}
::g::BaseReq* SendImageMsgReq::mutable_basereq() {
  set_has_basereq();
  if (basereq_ == NULL) {
    basereq_ = new ::g::BaseReq;
  }
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgReq.baseReq)
  return basereq_;
}
::g::BaseReq* SendImageMsgReq::release_basereq() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgReq.baseReq)
  clear_has_basereq();
  ::g::BaseReq* temp = basereq_;
  basereq_ = NULL;
  return temp;
}
void SendImageMsgReq::set_allocated_basereq(::g::BaseReq* basereq) {
  delete basereq_;
  basereq_ = basereq;
  if (basereq) {
    set_has_basereq();
  } else {
    clear_has_basereq();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgReq.baseReq)
}

// optional int64 clientId = 2;
bool SendImageMsgReq::has_clientid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void SendImageMsgReq::set_has_clientid() {
  _has_bits_[0] |= 0x00000008u;
}
void SendImageMsgReq::clear_has_clientid() {
  _has_bits_[0] &= ~0x00000008u;
}
void SendImageMsgReq::clear_clientid() {
  clientid_ = GOOGLE_LONGLONG(0);
  clear_has_clientid();
}
::google::protobuf::int64 SendImageMsgReq::clientid() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.clientId)
  return clientid_;
}
void SendImageMsgReq::set_clientid(::google::protobuf::int64 value) {
  set_has_clientid();
  clientid_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.clientId)
}

// optional int32 totalLen = 3;
bool SendImageMsgReq::has_totallen() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void SendImageMsgReq::set_has_totallen() {
  _has_bits_[0] |= 0x00000010u;
}
void SendImageMsgReq::clear_has_totallen() {
  _has_bits_[0] &= ~0x00000010u;
}
void SendImageMsgReq::clear_totallen() {
  totallen_ = 0;
  clear_has_totallen();
}
::google::protobuf::int32 SendImageMsgReq::totallen() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.totalLen)
  return totallen_;
}
void SendImageMsgReq::set_totallen(::google::protobuf::int32 value) {
  set_has_totallen();
  totallen_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.totalLen)
}

// optional int32 dataOffset = 4;
bool SendImageMsgReq::has_dataoffset() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void SendImageMsgReq::set_has_dataoffset() {
  _has_bits_[0] |= 0x00000020u;
}
void SendImageMsgReq::clear_has_dataoffset() {
  _has_bits_[0] &= ~0x00000020u;
}
void SendImageMsgReq::clear_dataoffset() {
  dataoffset_ = 0;
  clear_has_dataoffset();
}
::google::protobuf::int32 SendImageMsgReq::dataoffset() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.dataOffset)
  return dataoffset_;
}
void SendImageMsgReq::set_dataoffset(::google::protobuf::int32 value) {
  set_has_dataoffset();
  dataoffset_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.dataOffset)
}

// optional bytes data = 5;
bool SendImageMsgReq::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendImageMsgReq::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void SendImageMsgReq::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendImageMsgReq::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& SendImageMsgReq::data() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.data)
  return data_.GetNoArena();
}
void SendImageMsgReq::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.data)
}
#if LANG_CXX11
void SendImageMsgReq::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendImageMsgReq.data)
}
#endif
void SendImageMsgReq::set_data(const char* value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendImageMsgReq.data)
}
void SendImageMsgReq::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendImageMsgReq.data)
}
::std::string* SendImageMsgReq::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgReq.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendImageMsgReq::release_data() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgReq.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendImageMsgReq::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgReq.data)
}

// optional string imageFileName = 6;
bool SendImageMsgReq::has_imagefilename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendImageMsgReq::set_has_imagefilename() {
  _has_bits_[0] |= 0x00000002u;
}
void SendImageMsgReq::clear_has_imagefilename() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendImageMsgReq::clear_imagefilename() {
  imagefilename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_imagefilename();
}
const ::std::string& SendImageMsgReq::imagefilename() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgReq.imageFileName)
  return imagefilename_.GetNoArena();
}
void SendImageMsgReq::set_imagefilename(const ::std::string& value) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.SendImageMsgReq.imageFileName)
}
#if LANG_CXX11
void SendImageMsgReq::set_imagefilename(::std::string&& value) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.SendImageMsgReq.imageFileName)
}
#endif
void SendImageMsgReq::set_imagefilename(const char* value) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.SendImageMsgReq.imageFileName)
}
void SendImageMsgReq::set_imagefilename(const char* value, size_t size) {
  set_has_imagefilename();
  imagefilename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.SendImageMsgReq.imageFileName)
}
::std::string* SendImageMsgReq::mutable_imagefilename() {
  set_has_imagefilename();
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgReq.imageFileName)
  return imagefilename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SendImageMsgReq::release_imagefilename() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgReq.imageFileName)
  clear_has_imagefilename();
  return imagefilename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SendImageMsgReq::set_allocated_imagefilename(::std::string* imagefilename) {
  if (imagefilename != NULL) {
    set_has_imagefilename();
  } else {
    clear_has_imagefilename();
  }
  imagefilename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imagefilename);
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgReq.imageFileName)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendImageMsgResp::kBaseRespFieldNumber;
const int SendImageMsgResp::kServerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendImageMsgResp::SendImageMsgResp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.SendImageMsgResp)
}
SendImageMsgResp::SendImageMsgResp(const SendImageMsgResp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_baseresp()) {
    baseresp_ = new ::g::BaseResp(*from.baseresp_);
  } else {
    baseresp_ = NULL;
  }
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:g.SendImageMsgResp)
}

void SendImageMsgResp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseresp_, 0, reinterpret_cast<char*>(&serverid_) -
    reinterpret_cast<char*>(&baseresp_) + sizeof(serverid_));
}

SendImageMsgResp::~SendImageMsgResp() {
  // @@protoc_insertion_point(destructor:g.SendImageMsgResp)
  SharedDtor();
}

void SendImageMsgResp::SharedDtor() {
  if (this != internal_default_instance()) {
    delete baseresp_;
  }
}

void SendImageMsgResp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendImageMsgResp::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[22].descriptor;
}

const SendImageMsgResp& SendImageMsgResp::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

SendImageMsgResp* SendImageMsgResp::New(::google::protobuf::Arena* arena) const {
  SendImageMsgResp* n = new SendImageMsgResp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendImageMsgResp::Clear() {
// @@protoc_insertion_point(message_clear_start:g.SendImageMsgResp)
  if (has_baseresp()) {
    GOOGLE_DCHECK(baseresp_ != NULL);
    baseresp_->::g::BaseResp::Clear();
  }
  serverid_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SendImageMsgResp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.SendImageMsgResp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .g.BaseResp baseResp = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_baseresp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 serverId = 2;
      case 2: {
        if (tag == 16u) {
          set_has_serverid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.SendImageMsgResp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.SendImageMsgResp)
  return false;
#undef DO_
}

void SendImageMsgResp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.SendImageMsgResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->baseresp_, output);
  }

  // optional int64 serverId = 2;
  if (has_serverid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->serverid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.SendImageMsgResp)
}

::google::protobuf::uint8* SendImageMsgResp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.SendImageMsgResp)
  // optional .g.BaseResp baseResp = 1;
  if (has_baseresp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->baseresp_, false, target);
  }

  // optional int64 serverId = 2;
  if (has_serverid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->serverid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.SendImageMsgResp)
  return target;
}

size_t SendImageMsgResp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.SendImageMsgResp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .g.BaseResp baseResp = 1;
    if (has_baseresp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->baseresp_);
    }

    // optional int64 serverId = 2;
    if (has_serverid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->serverid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendImageMsgResp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.SendImageMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  const SendImageMsgResp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendImageMsgResp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.SendImageMsgResp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.SendImageMsgResp)
    MergeFrom(*source);
  }
}

void SendImageMsgResp::MergeFrom(const SendImageMsgResp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.SendImageMsgResp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_baseresp()) {
      mutable_baseresp()->::g::BaseResp::MergeFrom(from.baseresp());
    }
    if (from.has_serverid()) {
      set_serverid(from.serverid());
    }
  }
}

void SendImageMsgResp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.SendImageMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendImageMsgResp::CopyFrom(const SendImageMsgResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.SendImageMsgResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendImageMsgResp::IsInitialized() const {
  return true;
}

void SendImageMsgResp::Swap(SendImageMsgResp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendImageMsgResp::InternalSwap(SendImageMsgResp* other) {
  std::swap(baseresp_, other->baseresp_);
  std::swap(serverid_, other->serverid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendImageMsgResp::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendImageMsgResp

// optional .g.BaseResp baseResp = 1;
bool SendImageMsgResp::has_baseresp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SendImageMsgResp::set_has_baseresp() {
  _has_bits_[0] |= 0x00000001u;
}
void SendImageMsgResp::clear_has_baseresp() {
  _has_bits_[0] &= ~0x00000001u;
}
void SendImageMsgResp::clear_baseresp() {
  if (baseresp_ != NULL) baseresp_->::g::BaseResp::Clear();
  clear_has_baseresp();
}
const ::g::BaseResp& SendImageMsgResp::baseresp() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgResp.baseResp)
  return baseresp_ != NULL ? *baseresp_
                         : *::g::BaseResp::internal_default_instance();
}
::g::BaseResp* SendImageMsgResp::mutable_baseresp() {
  set_has_baseresp();
  if (baseresp_ == NULL) {
    baseresp_ = new ::g::BaseResp;
  }
  // @@protoc_insertion_point(field_mutable:g.SendImageMsgResp.baseResp)
  return baseresp_;
}
::g::BaseResp* SendImageMsgResp::release_baseresp() {
  // @@protoc_insertion_point(field_release:g.SendImageMsgResp.baseResp)
  clear_has_baseresp();
  ::g::BaseResp* temp = baseresp_;
  baseresp_ = NULL;
  return temp;
}
void SendImageMsgResp::set_allocated_baseresp(::g::BaseResp* baseresp) {
  delete baseresp_;
  baseresp_ = baseresp;
  if (baseresp) {
    set_has_baseresp();
  } else {
    clear_has_baseresp();
  }
  // @@protoc_insertion_point(field_set_allocated:g.SendImageMsgResp.baseResp)
}

// optional int64 serverId = 2;
bool SendImageMsgResp::has_serverid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SendImageMsgResp::set_has_serverid() {
  _has_bits_[0] |= 0x00000002u;
}
void SendImageMsgResp::clear_has_serverid() {
  _has_bits_[0] &= ~0x00000002u;
}
void SendImageMsgResp::clear_serverid() {
  serverid_ = GOOGLE_LONGLONG(0);
  clear_has_serverid();
}
::google::protobuf::int64 SendImageMsgResp::serverid() const {
  // @@protoc_insertion_point(field_get:g.SendImageMsgResp.serverId)
  return serverid_;
}
void SendImageMsgResp::set_serverid(::google::protobuf::int64 value) {
  set_has_serverid();
  serverid_ = value;
  // @@protoc_insertion_point(field_set:g.SendImageMsgResp.serverId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NeedSyncPush::kSyncKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NeedSyncPush::NeedSyncPush()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_g_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:g.NeedSyncPush)
}
NeedSyncPush::NeedSyncPush(const NeedSyncPush& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_synckey()) {
    synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
  }
  // @@protoc_insertion_point(copy_constructor:g.NeedSyncPush)
}

void NeedSyncPush::SharedCtor() {
  _cached_size_ = 0;
  synckey_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NeedSyncPush::~NeedSyncPush() {
  // @@protoc_insertion_point(destructor:g.NeedSyncPush)
  SharedDtor();
}

void NeedSyncPush::SharedDtor() {
  synckey_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NeedSyncPush::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NeedSyncPush::descriptor() {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[23].descriptor;
}

const NeedSyncPush& NeedSyncPush::default_instance() {
  protobuf_g_2eproto::InitDefaults();
  return *internal_default_instance();
}

NeedSyncPush* NeedSyncPush::New(::google::protobuf::Arena* arena) const {
  NeedSyncPush* n = new NeedSyncPush;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NeedSyncPush::Clear() {
// @@protoc_insertion_point(message_clear_start:g.NeedSyncPush)
  if (has_synckey()) {
    GOOGLE_DCHECK(!synckey_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*synckey_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NeedSyncPush::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:g.NeedSyncPush)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes syncKey = 1;
      case 1: {
        if (tag == 10u) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_synckey()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:g.NeedSyncPush)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:g.NeedSyncPush)
  return false;
#undef DO_
}

void NeedSyncPush::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:g.NeedSyncPush)
  // optional bytes syncKey = 1;
  if (has_synckey()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->synckey(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:g.NeedSyncPush)
}

::google::protobuf::uint8* NeedSyncPush::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:g.NeedSyncPush)
  // optional bytes syncKey = 1;
  if (has_synckey()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->synckey(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:g.NeedSyncPush)
  return target;
}

size_t NeedSyncPush::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:g.NeedSyncPush)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bytes syncKey = 1;
  if (has_synckey()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->synckey());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NeedSyncPush::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:g.NeedSyncPush)
  GOOGLE_DCHECK_NE(&from, this);
  const NeedSyncPush* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NeedSyncPush>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:g.NeedSyncPush)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:g.NeedSyncPush)
    MergeFrom(*source);
  }
}

void NeedSyncPush::MergeFrom(const NeedSyncPush& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:g.NeedSyncPush)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_synckey()) {
    set_has_synckey();
    synckey_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.synckey_);
  }
}

void NeedSyncPush::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:g.NeedSyncPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NeedSyncPush::CopyFrom(const NeedSyncPush& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:g.NeedSyncPush)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NeedSyncPush::IsInitialized() const {
  return true;
}

void NeedSyncPush::Swap(NeedSyncPush* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NeedSyncPush::InternalSwap(NeedSyncPush* other) {
  synckey_.Swap(&other->synckey_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NeedSyncPush::GetMetadata() const {
  protobuf_g_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_g_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NeedSyncPush

// optional bytes syncKey = 1;
bool NeedSyncPush::has_synckey() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NeedSyncPush::set_has_synckey() {
  _has_bits_[0] |= 0x00000001u;
}
void NeedSyncPush::clear_has_synckey() {
  _has_bits_[0] &= ~0x00000001u;
}
void NeedSyncPush::clear_synckey() {
  synckey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_synckey();
}
const ::std::string& NeedSyncPush::synckey() const {
  // @@protoc_insertion_point(field_get:g.NeedSyncPush.syncKey)
  return synckey_.GetNoArena();
}
void NeedSyncPush::set_synckey(const ::std::string& value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:g.NeedSyncPush.syncKey)
}
#if LANG_CXX11
void NeedSyncPush::set_synckey(::std::string&& value) {
  set_has_synckey();
  synckey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:g.NeedSyncPush.syncKey)
}
#endif
void NeedSyncPush::set_synckey(const char* value) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:g.NeedSyncPush.syncKey)
}
void NeedSyncPush::set_synckey(const void* value, size_t size) {
  set_has_synckey();
  synckey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:g.NeedSyncPush.syncKey)
}
::std::string* NeedSyncPush::mutable_synckey() {
  set_has_synckey();
  // @@protoc_insertion_point(field_mutable:g.NeedSyncPush.syncKey)
  return synckey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NeedSyncPush::release_synckey() {
  // @@protoc_insertion_point(field_release:g.NeedSyncPush.syncKey)
  clear_has_synckey();
  return synckey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NeedSyncPush::set_allocated_synckey(::std::string* synckey) {
  if (synckey != NULL) {
    set_has_synckey();
  } else {
    clear_has_synckey();
  }
  synckey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), synckey);
  // @@protoc_insertion_point(field_set_allocated:g.NeedSyncPush.syncKey)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace g

// @@protoc_insertion_point(global_scope)
